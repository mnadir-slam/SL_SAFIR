CREATE PROCEDURE [dbo].[UPDATE_ESTIA_TABLES]
AS
BEGIN


UPDATE ESTIA_AGENCE
SET FK_ORG = ORG.PK_ORG
FROM ESTIA_AGENCE AS AGENCE
     INNER JOIN ESTIA_ORG AS ORG
           ON ORG.CORG = AGENCE.CORG


UPDATE ESTIA_GROUPE
SET FK_ORG = AGENCE.FK_ORG,
FK_AGENCE = AGENCE.PK_AGENCE
FROM ESTIA_GROUPE AS GROUPE
     INNER JOIN ESTIA_AGENCE AS AGENCE
           ON AGENCE.CORG = GROUPE.CORG
           AND AGENCE.CAGENCE = GROUPE.CAGENCE


UPDATE ESTIA_BASE
SET FK_ORG = GROUPE.FK_ORG,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE
FROM ESTIA_BASE AS BASE
     INNER JOIN ESTIA_GROUPE AS GROUPE
           ON GROUPE.CORG = BASE.CORG
           AND GROUPE.CAGENCE = BASE.CAGENCE
           AND GROUPE.CGROUPE = BASE.CGROUPE


UPDATE ESTIA_SCRITDP
SET FK_ORG = GROUPE.FK_ORG,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE
FROM ESTIA_SCRITDP AS SCRITDP
     INNER JOIN ESTIA_GROUPE AS GROUPE
           ON GROUPE.CORG = SCRITDP.CORG
           AND GROUPE.CAGENCE = SCRITDP.CAGENCE
           AND GROUPE.CGROUPE = SCRITDP.CGROUPE


UPDATE ESTIA_SCRITDP
SET FK_BASE = BASE.PK_BASE
FROM ESTIA_SCRITDP AS SCRITDP
     INNER JOIN ESTIA_BASE AS BASE
           ON BASE.CORG = SCRITDP.CORG
           AND BASE.CAGENCE = SCRITDP.CAGENCE
           AND BASE.CGROUPE = SCRITDP.CGROUPE
           AND BASE.CBASE = SCRITDP.CBASE


UPDATE ESTIA_IMMEUB
SET FK_ORG = GROUPE.FK_ORG,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE
FROM ESTIA_IMMEUB AS IMMEUB
     INNER JOIN ESTIA_GROUPE AS GROUPE
           ON GROUPE.CORG = IMMEUB.CORG
           AND GROUPE.CAGENCE = IMMEUB.CAGENCE
           AND GROUPE.CGROUPE = IMMEUB.CGROUPE


UPDATE ESTIA_PLOCAL
SET FK_ORG = IMMEUB.FK_ORG,
FK_AGENCE = IMMEUB.FK_AGENCE,
FK_GROUPE = IMMEUB.FK_GROUPE,
FK_IMMEUB = IMMEUB.PK_IMMEUB
FROM ESTIA_PLOCAL AS PLOCAL
     INNER JOIN ESTIA_IMMEUB AS IMMEUB
           ON IMMEUB.CORG = PLOCAL.CORG
           AND IMMEUB.CAGENCE = PLOCAL.CAGENCE
           AND IMMEUB.CGROUPE = PLOCAL.CGROUPE
           AND IMMEUB.CIMMEUB = PLOCAL.CIMMEUB


UPDATE ESTIA_LOCAL
SET FK_ORG = IMMEUB.FK_ORG,
FK_AGENCE = IMMEUB.FK_AGENCE,
FK_GROUPE = IMMEUB.FK_GROUPE,
FK_IMMEUB = IMMEUB.PK_IMMEUB
FROM ESTIA_LOCAL AS LOCAL
     INNER JOIN ESTIA_IMMEUB AS IMMEUB
           ON IMMEUB.CORG = LOCAL.CORG
           AND IMMEUB.CAGENCE = LOCAL.CAGENCE
           AND IMMEUB.CGROUPE = LOCAL.CGROUPE
           AND IMMEUB.CIMMEUB = LOCAL.CIMMEUB


UPDATE ESTIA_LIENLOC
SET FK_TIERS = TIERS.PK_TIERS,
FK_COMPTE = COMPTE.PK_COMPTE
FROM ESTIA_LIENLOC AS LIENLOC
     LEFT JOIN ESTIA_TIERS AS TIERS
          ON TIERS.CTYPTIERS = LIENLOC.CTYPTIERS
          AND TIERS.CTIERS = LIENLOC.CTIERS
     LEFT JOIN ESTIA_COMPTE AS COMPTE
          ON COMPTE.CORG = LIENLOC.CORG
          AND COMPTE.CCOMPTE = LIENLOC.CCOMPTE


UPDATE ESTIA_LOCATION
SET FK_ORG = LOCAL.FK_ORG,
FK_AGENCE = LOCAL.FK_AGENCE,
FK_GROUPE = LOCAL.FK_GROUPE,
FK_IMMEUB = LOCAL.FK_IMMEUB,
FK_LOCAL = LOCAL.PK_LOCAL,
FK_COMPTE = COMPTE.PK_COMPTE,
FK_BAIL = BAIL.PK_LOCATION,
FK_TIERS = LIENLOC.FK_TIERS
FROM ESTIA_LOCATION
     LEFT JOIN ESTIA_LOCAL AS LOCAL
          ON LOCAL.CORG = ESTIA_LOCATION.CORG
          AND LOCAL.CAGENCE = ESTIA_LOCATION.CAGENCE
          AND LOCAL.CGROUPE = ESTIA_LOCATION.CGROUPE
          AND LOCAL.CIMMEUB = ESTIA_LOCATION.CIMMEUB
          AND LOCAL.CLOCAL = ESTIA_LOCATION.CLOCAL
     LEFT JOIN ESTIA_COMPTE AS COMPTE
          ON COMPTE.CORG = ESTIA_LOCATION.CORG
          AND COMPTE.CCOMPTE = ESTIA_LOCATION.CCOMPTE
     LEFT JOIN ESTIA_LOCATION AS BAIL 
          ON BAIL.CORG = ESTIA_LOCATION.CORG
          AND BAIL.CCOMPTE = ESTIA_LOCATION.CCOMPTE
          AND BAIL.NOBAIL = ESTIA_LOCATION.NOBAIL
          AND BAIL.NOLOCAT = ESTIA_LOCATION.CONTLOC
     LEFT JOIN ESTIA_LIENLOC AS LIENLOC
               ON LIENLOC.CORG = ESTIA_LOCATION.CORG
               AND LIENLOC.CCOMPTE = ESTIA_LOCATION.CCOMPTE
               AND LIENLOC.RK = 1


UPDATE ESTIA_HQLOCAT
SET FK_ORG = LOCATION.FK_ORG,
FK_AGENCE = LOCATION.FK_AGENCE,
FK_GROUPE = LOCATION.FK_GROUPE,
FK_IMMEUB = LOCATION.FK_IMMEUB,
FK_LOCAL = LOCATION.FK_LOCAL,
FK_LOCATION = LOCATION.PK_LOCATION,
FK_BAIL = LOCATION.FK_BAIL,
FK_RUB = RUB.PK_RUB
FROM ESTIA_HQLOCAT AS HQLOCAT
     LEFT JOIN ESTIA_LOCATION AS LOCATION
          ON LOCATION.CORG = HQLOCAT.CORG
          AND LOCATION.CAGENCE = HQLOCAT.CAGENCE
          AND LOCATION.CGROUPE = HQLOCAT.CGROUPE
          AND LOCATION.CIMMEUB = HQLOCAT.CIMMEUB
          AND LOCATION.CLOCAL = HQLOCAT.CLOCAL
          AND LOCATION.OCC = HQLOCAT.OCC
     LEFT JOIN ESTIA_RUB AS RUB
          ON RUB.CRUB = HQLOCAT.CRUB


UPDATE ESTIA_NEGOCH
SET FK_ORG = LOCATION.FK_ORG,
FK_AGENCE = LOCATION.FK_AGENCE,
FK_GROUPE = LOCATION.FK_GROUPE,
FK_IMMEUB = LOCATION.FK_IMMEUB,
FK_LOCAL = LOCATION.FK_LOCAL,
FK_COMPTE = LOCATION.FK_COMPTE,
FK_LOCATION = LOCATION.PK_LOCATION,
FK_BAIL = LOCATION.FK_BAIL
FROM ESTIA_NEGOCH AS NEGOCH
     INNER JOIN ESTIA_LOCATION AS LOCATION
           ON LOCATION.CORG = NEGOCH.CORG
           AND LOCATION.CAGENCE = NEGOCH.CAGENCE
           AND LOCATION.CGROUPE = NEGOCH.CGROUPE
           AND LOCATION.CIMMEUB = NEGOCH.CIMMEUB
           AND LOCATION.CLOCAL = NEGOCH.CLOCAL
           AND LOCATION.OCC = NEGOCH.OCC

UPDATE ESTIA_NEGOCH
SET FK_ORG = LOCATION.FK_ORG,
FK_AGENCE = LOCATION.FK_AGENCE,
FK_GROUPE = LOCATION.FK_GROUPE,
FK_IMMEUB = LOCATION.FK_IMMEUB,
FK_LOCAL = LOCATION.FK_LOCAL,
FK_COMPTE = LOCATION.FK_COMPTE,
FK_LOCATION = LOCATION.PK_LOCATION,
FK_BAIL = LOCATION.FK_BAIL
FROM ESTIA_NEGOCH AS NEGOCH
     INNER JOIN ESTIA_LOCATION AS LOCATION
           ON LOCATION.CORG = NEGOCH.CORG
           AND LOCATION.CCOMPTE = NEGOCH.CCOMPTE
           AND LOCATION.NOBAIL = NEGOCH.NOBAIL
           AND LOCATION.CONTLOC = LOCATION.NOLOCAT
WHERE NEGOCH.FK_ORG IS NULL



UPDATE ESTIA_HLOYCA
SET FK_ORG = LOCATION.FK_ORG,
FK_AGENCE = LOCATION.FK_AGENCE,
FK_GROUPE = LOCATION.FK_GROUPE,
FK_IMMEUB = LOCATION.FK_IMMEUB,
FK_LOCAL = LOCATION.FK_LOCAL,
FK_COMPTE = LOCATION.FK_COMPTE,
FK_LOCATION = LOCATION.PK_LOCATION,
FK_BAIL = LOCATION.FK_BAIL
FROM ESTIA_HLOYCA AS HLOYCA
     INNER JOIN ESTIA_LOCATION AS LOCATION
           ON LOCATION.CORG = HLOYCA.CORG
           AND LOCATION.CAGENCE = HLOYCA.CAGENCE
           AND LOCATION.CGROUPE = HLOYCA.CGROUPE
           AND LOCATION.CIMMEUB = HLOYCA.CIMMEUB
           AND LOCATION.CLOCAL = HLOYCA.CLOCAL
           AND LOCATION.OCC = HLOYCA.OCC

UPDATE ESTIA_HREVI
SET FK_BAIL = LOCATION.FK_BAIL
FROM ESTIA_HREVI AS HREVI
     INNER JOIN ESTIA_LOCATION AS LOCATION
           ON LOCATION.CORG = HREVI.CORG
           AND LOCATION.CAGENCE = HREVI.CAGENCE
           AND LOCATION.CGROUPE = HREVI.CGROUPE
           AND LOCATION.CIMMEUB = HREVI.CIMMEUB
           AND LOCATION.CLOCAL = HREVI.CLOCAL
           AND LOCATION.OCC = HREVI.OCC


UPDATE ESTIA_MANPAT
SET FK_MANGES = MANGES.PK_MANGES,
FK_ORG = GROUPE.FK_ORG,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE,
FK_IMMEUB = IMMEUB.PK_IMMEUB,
FK_LOCAL = LOCAL.PK_LOCAL
FROM ESTIA_MANPAT AS MANPAT
     LEFT JOIN ESTIA_MANGES AS MANGES
          ON MANGES.CMANDAT = MANPAT.CMANDAT
     LEFT JOIN ESTIA_GROUPE AS GROUPE
          ON GROUPE.CORG = MANPAT.CORG
          AND GROUPE.CAGENCE = MANPAT.CAGENCE
          AND GROUPE.CGROUPE = MANPAT.CGROUPE
     LEFT JOIN ESTIA_IMMEUB AS IMMEUB
          ON IMMEUB.CORG = MANPAT.CORG
          AND IMMEUB.CAGENCE = MANPAT.CAGENCE
          AND IMMEUB.CGROUPE = MANPAT.CGROUPE
          AND IMMEUB.CIMMEUB = MANPAT.CIMMEUB
     LEFT JOIN ESTIA_LOCAL AS LOCAL
          ON LOCAL.CORG = MANPAT.CORG
          AND LOCAL.CAGENCE = MANPAT.CAGENCE
          AND LOCAL.CGROUPE = MANPAT.CGROUPE
          AND LOCAL.CIMMEUB = MANPAT.CIMMEUB
          AND LOCAL.CLOCAL = MANPAT.CLOCAL


UPDATE ESTIA_MANPROP
SET FK_MANGES = MANGES.PK_MANGES,
FK_TIERS = TIERS.PK_TIERS
FROM ESTIA_MANPROP AS MANPROP
     LEFT JOIN ESTIA_MANGES AS MANGES
          ON MANGES.CMANDAT = MANPROP.CMANDAT
     LEFT JOIN ESTIA_TIERS AS TIERS
          ON TIERS.CTYPTIERS = MANPROP.CTYPTIERS
          AND TIERS.CTIERS = MANPROP.CTIERS


UPDATE ESTIA_INDICE
SET DT = DATEADD(month,
                 CASE WHEN ISNUMERIC(LEFT(PERIOD, CHARINDEX(';', PERIOD) - 1)) <> 0 THEN CONVERT(INT, LEFT(PERIOD, CHARINDEX(';', PERIOD) - 1)) * (INDICE.MOIS - 1) ELSE 0 END,
                 CONVERT(DATETIME, '01/01/' + CONVERT(VARCHAR(4), INDICE.ANNEE), 103)),
LB = CASE WHEN NUMI.PERIOD LIKE '3;%' THEN INDICE.CNUMI + ' T' + CONVERT(VARCHAR(20), INDICE.MOIS) + '-' + STR(INDICE.ANNEE,4,0)
           WHEN NUMI.PERIOD LIKE '1;%' THEN INDICE.CNUMI + ' ' + REPLACE(STR(INDICE.MOIS,2,0), ' ', '0') + '/' + STR(INDICE.ANNEE,4,0)
           WHEN NUMI.PERIOD LIKE '12;%' THEN INDICE.CNUMI + ' ' + STR(INDICE.ANNEE,4,0)
      END
FROM ESTIA_INDICE AS INDICE
     INNER JOIN ESTIA_NUMI AS NUMI
           ON NUMI.CNUMI = INDICE.CNUMI
WHERE CHARINDEX(';', NUMI.PERIOD) > 1
AND INDICE.ANNEE BETWEEN 1900 AND 2999


UPDATE ESTIA_INTBT
SET FK_TIERS = TIERS.PK_TIERS,
FK_MANDAT = MANGES.PK_MANGES,
FK_ORG = ORG.PK_ORG,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE
FROM ESTIA_INTBT AS INTBT
     INNER JOIN ESTIA_TIERS AS TIERS
           ON TIERS.CTYPTIERS = INTBT.CTYPTIERS
           AND TIERS.CTIERS = INTBT.CTIERS
     LEFT JOIN ESTIA_MANGES AS MANGES
          ON MANGES.CMANDAT = INTBT.CMANDAT
     INNER JOIN ESTIA_ORG AS ORG
           ON ORG.CORG = INTBT.CORG
     LEFT JOIN ESTIA_GROUPE AS GROUPE
          ON GROUPE.CORG = INTBT.CORG
          AND GROUPE.CAGENCE = INTBT.CAGENCE
          AND GROUPE.CGROUPE = INTBT.CGROUPE

UPDATE ESTIA_DEMINT
SET FK_ORG = ORG.PK_ORG,
FK_INTBT = INTBT.PK_INTBT,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE,
FK_TIERS = INTBT.FK_TIERS
FROM ESTIA_DEMINT AS DEMINT
     INNER JOIN ESTIA_ORG AS ORG
           ON ORG.CORG = DEMINT.CORG
     LEFT JOIN ESTIA_GROUPE AS GROUPE
          ON GROUPE.CORG = DEMINT.CORG
          AND GROUPE.CAGENCE = DEMINT.CAGENCE
          AND GROUPE.CGROUPE = DEMINT.CGROUPE
     LEFT JOIN ESTIA_INTBT AS INTBT
          ON INTBT.CORG = DEMINT.CORG
          AND INTBT.NODEM = DEMINT.NODEM
          AND INTBT.CSTE1 = 'BT'

UPDATE ESTIA_INTBT
SET FK_AGENCE = ISNULL(INTBT.FK_AGENCE, DEMINT.FK_AGENCE),
FK_GROUPE = ISNULL(INTBT.FK_GROUPE, DEMINT.FK_GROUPE)
FROM ESTIA_INTBT AS INTBT
     INNER JOIN ESTIA_DEMINT AS DEMINT
          ON DEMINT.CORG = INTBT.CORG
          AND DEMINT.NODEM = INTBT.NODEM
          AND INTBT.CSTE1 = 'BT'



UPDATE ESTIA_CTRTIERS
SET FK_TIERS = TIERS.PK_TIERS
FROM ESTIA_CTRTIERS AS CTRTIERS
     LEFT JOIN ESTIA_TIERS AS TIERS
          ON TIERS.CTIERS = CTRTIERS.CTIERS


UPDATE ESTIA_VENTPCHA
SET FK_ORG = ORG.PK_ORG,
FK_CTRTIERS = CTRTIERS.PK_CTRTIERS,
FK_TIERS = CTRTIERS.FK_TIERS,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE
FROM ESTIA_VENTPCHA AS VENTPCHA
     INNER JOIN ESTIA_ORG AS ORG
           ON ORG.CORG = VENTPCHA.CORG
     LEFT JOIN ESTIA_CTRTIERS AS CTRTIERS
          ON CTRTIERS.CORG = VENTPCHA.CORG
          AND CTRTIERS.CCONTFRS = VENTPCHA.CCONTFRS
     LEFT JOIN ESTIA_GROUPE AS GROUPE
          ON GROUPE.CORG = VENTPCHA.CORG
          AND GROUPE.CAGENCE = VENTPCHA.ZAGENCE
          AND GROUPE.CGROUPE = VENTPCHA.CGROUPE

UPDATE ESTIA_PDEPOP
SET FK_POPE = POPE.PK_POPE
FROM ESTIA_PDEPOP AS PDEPOP
     INNER JOIN ESTIA_POPE AS POPE
           ON POPE.CORG = PDEPOP.CORG
           AND POPE.COPE = PDEPOP.COPE

UPDATE ESTIA_PIOPE
SET FK_POPE = POPE.PK_POPE
FROM ESTIA_PIOPE AS PIOPE
     INNER JOIN ESTIA_POPE AS POPE
           ON POPE.CORG = PIOPE.CORG
           AND POPE.COPE = PIOPE.COPE


UPDATE ESTIA_ECRIB
SET FK_ORG = GROUPE.FK_ORG,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE
FROM ESTIA_ECRIB AS ECRIB
     INNER JOIN ESTIA_GROUPE AS GROUPE
           ON GROUPE.CORG = ECRIB.CORG
           AND GROUPE.CAGENCE = ECRIB.CAGENCE
           AND GROUPE.CGROUPE = ECRIB.CGROUPE

UPDATE ESTIA_ECRIB
SET FK_CRITDP = CRITDP.PK_CCRITDP
FROM ESTIA_ECRIB AS ECRIB
     INNER JOIN ESTIA_CRITDP AS CRITDP
           ON CRITDP.CCRITDP = ECRIB.CCRITDP

UPDATE ESTIA_ECRIB
SET FK_INTBT = INTBT.PK_INTBT,
FK_TIERS = INTBT.FK_TIERS,
FK_AGENCE = ISNULL(ECRIB.FK_AGENCE, INTBT.FK_AGENCE),
FK_GROUPE = ISNULL(ECRIB.FK_GROUPE, INTBT.FK_GROUPE)
FROM ESTIA_ECRIB AS ECRIB
     INNER JOIN ESTIA_INTBT AS INTBT
           ON INTBT.CORG = ECRIB.CORG
           AND INTBT.NOINTBT = ECRIB.NOBON
           AND INTBT.CSTE1 = ECRIB.TYPBON
WHERE ECRIB.TYPBON = 'BT'

UPDATE ESTIA_ECRIB
SET FK_CTRTIERS = CTRTIERS.PK_CTRTIERS,
FK_ORG = ISNULL(ECRIB.FK_ORG, VENTPCHA.FK_ORG),
FK_AGENCE = ISNULL(ECRIB.FK_AGENCE, VENTPCHA.FK_AGENCE),
FK_GROUPE = ISNULL(ECRIB.FK_GROUPE, VENTPCHA.FK_GROUPE),
FK_TIERS = CTRTIERS.FK_TIERS
FROM ESTIA_ECRIB AS ECRIB
     LEFT JOIN ESTIA_CTRTIERS AS CTRTIERS
          ON CTRTIERS.CORG = ECRIB.CORG
          AND CTRTIERS.CCONTFRS = LEFT(ECRIB.BANAL, 12)
     LEFT JOIN ESTIA_VENTPCHA AS VENTPCHA
          ON VENTPCHA.CORG = ECRIB.CORG
          AND VENTPCHA.CCONTFRS + VENTPCHA.CNATECH = LEFT(ECRIB.BANAL, 15)
WHERE TYPBON = 'CTR'









UPDATE ESTIA_PABASIT
SET FK_POPE = PDEPOP.FK_POPE,
FK_PDEPOP = PDEPOP.PK_PDEPOP
FROM ESTIA_PABASIT AS PABASIT
     INNER JOIN ESTIA_PDEPOP AS PDEPOP
           ON PDEPOP.CORG = PABASIT.CORG
           AND PDEPOP.COPE = PABASIT.COPE
           AND PDEPOP.CTRANCHE = PABASIT.CTRANCHE
           AND PDEPOP.CDEPR = PABASIT.CDEPR
           AND PDEPOP.NORD = PABASIT.NORD



UPDATE ESTIA_EBUDLOC
SET FK_ORG = GROUPE.FK_ORG,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE
FROM ESTIA_EBUDLOC AS EBUDLOC
     LEFT JOIN ESTIA_GROUPE AS GROUPE
          ON GROUPE.CORG = EBUDLOC.CORG
          AND GROUPE.CAGENCE = EBUDLOC.CAGENCE
          AND GROUPE.CGROUPE = EBUDLOC.CGROUPE


UPDATE ESTIA_LBUDLOC
SET FK_ORG = EBUDLOC.FK_ORG,
FK_AGENCE = EBUDLOC.FK_AGENCE,
FK_GROUPE = EBUDLOC.FK_GROUPE,
FK_EBUDLOC = EBUDLOC.PK_EBUDLOC,
FK_CRITDP = CRITDP.PK_CCRITDP,
FK_SCRITDP = SCRITDP.PK_SCRITDP,
FK_BASE = SCRITDP.FK_BASE
FROM ESTIA_LBUDLOC AS LBUDLOC
     LEFT JOIN ESTIA_EBUDLOC AS EBUDLOC
          ON EBUDLOC.CORG = LBUDLOC.CORG
          AND EBUDLOC.CAGENCE = LBUDLOC.CAGENCE
          AND EBUDLOC.CGROUPE = LBUDLOC.CGROUPE
          AND EBUDLOC.CBUDLOC = LBUDLOC.CBUDLOC
          AND EBUDLOC.VERSION = LBUDLOC.VERSION
     LEFT JOIN ESTIA_CRITDP AS CRITDP
          ON CRITDP.CCRITDP = LBUDLOC.CCRITDP
     LEFT JOIN ESTIA_SCRITDP AS SCRITDP
          ON SCRITDP.CORG = LBUDLOC.CORG
          AND SCRITDP.CAGENCE = LBUDLOC.CAGENCE
          AND SCRITDP.CGROUPE = LBUDLOC.CGROUPE
          AND SCRITDP.CCRITDP = LBUDLOC.CCRITDP
          AND SCRITDP.CSCRITDP = LBUDLOC.CSCRITDP


UPDATE ESTIA_BASELOC
SET FK_ORG = LOCAL.FK_ORG,
FK_AGENCE = LOCAL.FK_AGENCE,
FK_GROUPE = LOCAL.FK_GROUPE,
FK_IMMEUB = LOCAL.FK_IMMEUB,
FK_LOCAL = LOCAL.PK_LOCAL,
FK_BASE = BASE.PK_BASE
FROM ESTIA_BASELOC AS BASELOC
     LEFT JOIN ESTIA_LOCAL AS LOCAL
          ON LOCAL.CORG = BASELOC.CORG
          AND LOCAL.CAGENCE = BASELOC.CAGENCE
          AND LOCAL.CGROUPE = BASELOC.CGROUPE
          AND LOCAL.CIMMEUB = BASELOC.CIMMEUB
          AND LOCAL.CLOCAL = BASELOC.CLOCAL
     LEFT JOIN ESTIA_BASE AS BASE
          ON BASE.CORG = BASELOC.CORG
          AND BASE.CAGENCE = BASELOC.CAGENCE
          AND BASE.CGROUPE = BASELOC.CGROUPE
          AND BASE.CBASE = BASELOC.CBASE



--###################################################################################################################
--###################################################################################################################
--###################################################################################################################


DECLARE @DT DATETIME
SET @DT = CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),103), 103)


UPDATE ESTIA_MANPROP
SET RK = T.RK
FROM ESTIA_MANPROP AS MANPROP
     INNER JOIN (SELECT MANPROP.PK_MANPROP,
                        RANK() OVER (PARTITION BY MANGES.CMANDAT
                                     ORDER BY MANGES.CMANDAT,
                                              CASE WHEN MANGES.CTYPTIERS = MANPROP.CTYPTIERS AND MANGES.CTIERS = MANPROP.CTIERS THEN 1 ELSE 0 END DESC,
                                              CASE WHEN @DT BETWEEN ISNULL(MANPROP.DDEB,'1900/01/01') AND ISNULL(MANPROP.DFIN,'2999/01/01') THEN 1 ELSE 0 END DESC,
                                              ISNULL(MANPROP.REPRES,0) DESC,
                                              MANPROP.PARTPROP DESC,
                                              MANPROP.PARTREP DESC,
                                              MANPROP.PK_MANPROP) AS RK
                 FROM ESTIA_MANGES AS MANGES
                      INNER JOIN ESTIA_MANPROP AS MANPROP
                            ON MANPROP.CMANDAT = MANGES.CMANDAT) AS T
           ON T.PK_MANPROP = MANPROP.PK_MANPROP



--###################################################################################################################
--###################################################################################################################
--###################################################################################################################


UPDATE ESTIA_CPTGLOB
SET FK_ORG = LOCATION.FK_ORG,
FK_AGENCE = LOCATION.FK_AGENCE,
FK_GROUPE = LOCATION.FK_GROUPE,
FK_IMMEUB = LOCATION.FK_IMMEUB,
FK_LOCAL = LOCATION.FK_LOCAL,
FK_COMPTE = LOCATION.FK_COMPTE,
FK_BAIL = LOCATION.FK_BAIL,
CALC_CRUB = CASE WHEN ISNUMERIC(CPTGLOB.CRUB) <> 0 AND CPTGLOB.CRUB > 0 THEN CPTGLOB.CRUB
                 WHEN CPTGLOB.CTASS > 0 THEN CPTGLOB.CTASS
                 WHEN LEN(CPTGLOB.LETTRAGE) = 9 AND ISNUMERIC(CPTGLOB.LETTRAGE) <> 0 THEN CONVERT(INT, RIGHT(CPTGLOB.LETTRAGE, 3))
            END,
FK_TIERS = LOCATION.FK_TIERS
FROM ESTIA_CPTGLOB AS CPTGLOB
     LEFT JOIN ESTIA_LOCATION AS LOCATION
          ON LOCATION.CORG = CPTGLOB.CORG
          AND LOCATION.CCOMPTE = CPTGLOB.CCOMPTE
          AND LOCATION.NOBAIL = CPTGLOB.NOBAIL
          AND LOCATION.CONTLOC = LOCATION.NOLOCAT


UPDATE ESTIA_CPTGLOB
SET FK_RUB = RUB.PK_RUB
FROM ESTIA_CPTGLOB AS CPTGLOB
     INNER JOIN ESTIA_RUB AS RUB
           ON RUB.CRUB = CPTGLOB.CALC_CRUB


/*UPDATE ESTIA_ECRITAUX
SET FK_POPE = POPE.PK_POPE
FROM ESTIA_ECRITAUX AS ECRITAUX
     INNER JOIN ESTIA_POPE AS POPE
           ON POPE.CORG = ECRITAUX.CORG
           AND POPE.COPE = ECRITAUX.COPE*/


--###################################################################################################################
--########################################### LIEN ENTRE ECRAC ET HDEPCS ############################################
--###################################################################################################################


--LIEN ENTRE HDEPCS ET ECRAC POUR LES DEPENSES RECUPERABLES NON ISSUES DE LA MIGRATION
--UPDATE ESTIA_HDEPCS
--SET ECRAC_ID_RE = ECRAC.ECRAC_ID
--FROM ESTIA_ECRAC AS ECRAC
--     INNER JOIN ESTIA_HDEPCS AS HDEPCS
--           ON HDEPCS.REF = ECRAC.REF
--           AND 'CG   CRIT01' + REPLACE(STR(HDEPCS.CCRITDP,4,0),' ','0') + 'O' = ECRAC.ECCG
--WHERE (HDEPCS.CENSEMBLE NOT LIKE 'MIGCOM%' OR HDEPCS.CENSEMBLE IS NULL)
--AND (ECRAC.MIGCOMPT <= 0 OR ECRAC.MIGCOMPT IS NULL)
--AND HDEPCS.MTRECUP <> 0


----LIEN ENTRE HDEPCS ET ECRAC POUR LES DEPENSES NON RECUPERABLES NON ISSUES DE LA MIGRATION
--UPDATE ESTIA_HDEPCS
--SET ECRAC_ID_NR = ECRAC.ECRAC_ID
--FROM ESTIA_ECRAC AS ECRAC
--     INNER JOIN ESTIA_HDEPCS AS HDEPCS
--           ON HDEPCS.REF = ECRAC.REF
--           AND 'CG   CRIT01' + REPLACE(STR(HDEPCS.CCRITDP,4,0),' ','0') + 'N' = ECRAC.ECCG
--WHERE (HDEPCS.CENSEMBLE NOT LIKE 'MIGCOM%' OR HDEPCS.CENSEMBLE IS NULL)
--AND (ECRAC.MIGCOMPT <= 0 OR ECRAC.MIGCOMPT IS NULL)
--AND HDEPCS.MTNREC <> 0


----LIEN ENTRE HDEPCS ET ECRAC POUR LES DEPENSES ISSUES DE LA MIGRATION
--UPDATE ESTIA_HDEPCS
--SET ECRAC_ID_RE = CASE WHEN HDEPCS.MTRECUP <> 0 THEN ECRAC.ECRAC_ID END,
--ECRAC_ID_NR = CASE WHEN HDEPCS.MTNREC <> 0 THEN ECRAC.ECRAC_ID END
--FROM ESTIA_ECRAC AS ECRAC
--     INNER JOIN ESTIA_HDEPCS AS HDEPCS
--           ON HDEPCS.REF = ECRAC.REF
--           AND HDEPCS.NORD = ECRAC.ORD
--WHERE HDEPCS.CENSEMBLE LIKE 'MIGCOM%'
--AND ECRAC.MIGCOMPT > 0


--TABLE TEMPORAIRE D'AGREGAT DES DEPENSES
CREATE TABLE #H
(
	ECRAC_ID  INT NOT NULL,
	MTHT      NUMERIC(17,2) NULL,
	MTTVA     NUMERIC(17,2) NULL,
	MTTTC     NUMERIC(17,2) NULL
)


--REMPLISSAGE DE LA TABLE TEMPORAIRE D'AGREGAT DES DEPENSES RECUPERABLES
INSERT INTO #H (ECRAC_ID, MTHT, MTTVA, MTTTC)
SELECT ECRAC_ID_RE AS ECRAC_ID, SUM(MTRECUP - TVARECUP) AS MTHT, SUM(TVARECUP) AS MTTVA, SUM(MTRECUP) AS MTTTC
FROM ESTIA_HDEPCS
WHERE ECRAC_ID_RE IS NOT NULL
GROUP BY ECRAC_ID_RE


--MISE A JOUR DU TYPE DE MONTANT DES DEPENSES RECUPERABLES HT OU TTC APRES LIEN AVEC ECRAC
UPDATE ESTIA_HDEPCS
SET CTRL_MT_ECRAC_RE = CASE WHEN  H.MTHT   =  CASE WHEN ECRAC.SENS = 'C' THEN -ECRAC.MONTANT ELSE ECRAC.MONTANT END THEN 'HT'
                            WHEN  H.MTTTC  =  CASE WHEN ECRAC.SENS = 'C' THEN -ECRAC.MONTANT ELSE ECRAC.MONTANT END THEN 'TTC'
                       END
FROM ESTIA_HDEPCS AS HDEPCS
     INNER JOIN #H AS H
           ON H.ECRAC_ID = HDEPCS.ECRAC_ID_RE
     INNER JOIN ESTIA_ECRAC AS ECRAC
           ON ECRAC.ECRAC_ID = H.ECRAC_ID




--VIDAGE DE LA TABLE TEMPORAIRE D'AGREGAT DES DEPENSES
TRUNCATE TABLE #H


--REMPLISSAGE DE LA TABLE TEMPORAIRE D'AGREGAT DES DEPENSES NON RECUPERABLES
INSERT INTO #H (ECRAC_ID, MTHT, MTTVA, MTTTC)
SELECT ECRAC_ID_NR AS ECRAC_ID, SUM(MTNREC - MTTVADED) AS MTHT, SUM(MTTVADED) AS MTTVA, SUM(MTNREC) AS MTTTC
FROM ESTIA_HDEPCS
WHERE ECRAC_ID_NR IS NOT NULL
GROUP BY ECRAC_ID_NR



--MISE A JOUR DU TYPE DE MONTANT DES DEPENSES NON RECUPERABLES HT OU TTC APRES LIEN AVEC ECRAC
UPDATE ESTIA_HDEPCS
SET CTRL_MT_ECRAC_NR = CASE WHEN  H.MTHT   =  CASE WHEN ECRAC.SENS = 'C' THEN -ECRAC.MONTANT ELSE ECRAC.MONTANT END THEN 'HT'
                            WHEN  H.MTTTC  =  CASE WHEN ECRAC.SENS = 'C' THEN -ECRAC.MONTANT ELSE ECRAC.MONTANT END THEN 'TTC'
                       END
FROM ESTIA_HDEPCS AS HDEPCS
     INNER JOIN #H AS H
           ON H.ECRAC_ID = HDEPCS.ECRAC_ID_NR
     INNER JOIN ESTIA_ECRAC AS ECRAC
           ON ECRAC.ECRAC_ID = H.ECRAC_ID



--SUPPRESSION DE LA TABLE TEMPORAIRE D'AGREGAT DES DEPENSES
DROP TABLE #H




--TOPAGE DANS ECRAC DES ECRITURES DE DEPENSES AYANT UNE CORRESPONDANCE PARFAITE DANS HDEPCS
UPDATE ESTIA_ECRAC
SET IND_LIEN_HDEPCS = 'O'
FROM ESTIA_ECRAC AS ECRAC
     INNER JOIN ESTIA_HDEPCS AS HDEPCS
           ON HDEPCS.ECRAC_ID_RE = ECRAC.ECRAC_ID
WHERE HDEPCS.CTRL_MT_ECRAC_RE IS NOT NULL

UPDATE ESTIA_ECRAC
SET IND_LIEN_HDEPCS = 'O'
FROM ESTIA_ECRAC AS ECRAC
     INNER JOIN ESTIA_HDEPCS AS HDEPCS
           ON HDEPCS.ECRAC_ID_NR = ECRAC.ECRAC_ID
WHERE HDEPCS.CTRL_MT_ECRAC_NR IS NOT NULL


--###################################################################################################################
--############################################ AUTRES LIENS COMPTABLES ##############################################
--###################################################################################################################

--MISE A JOUR DE LA DATE DE SAISIE DANS ECRAC PAR RAPPORT AU CHAMP INFO
UPDATE ESTIA_ECRAC
SET DT_SAISIE = CONVERT(DATETIME, LEFT(INFO, 10), 103)
WHERE ISDATE(LEFT(INFO, 10)) <> 0

UPDATE ESTIA_ECRAC
SET DT_SAISIE = CONVERT(DATETIME, SUBSTRING(INFO, 4, 10), 103)
WHERE DT_SAISIE IS NULL
AND ISDATE(SUBSTRING(INFO, 4, 10)) <> 0


--LIEN ENTRE ECRAC ET ECRITAUX
UPDATE ESTIA_ECRAC
SET FK_ECRITAUX = ECRITAUX.PK_ECRITAUX
FROM ESTIA_ECRAC AS ECRAC
     INNER JOIN ESTIA_ECRITAUX AS ECRITAUX
           ON ECRITAUX.REF = ECRAC.REF
           AND ECRITAUX.LIGNE = ECRAC.ORD


--LIEN ENTRE ECRAC ET TSECR
UPDATE ESTIA_ECRAC
SET FK_TSECR = TSECR.PK_TSECR
FROM ESTIA_TSECR AS TSECR
     INNER JOIN ESTIA_ECRAC AS ECRAC
           ON ECRAC.REF = TSECR.REF
           AND ECRAC.ORD = TSECR.ORD


--LIEN ENTRE ECRAC ET MANGES
UPDATE ESTIA_ECRAC
SET FK_MANGES = MANGES.PK_MANGES
FROM ESTIA_ECRAC AS ECRAC
     INNER JOIN ESTIA_MANGES AS MANGES
           ON MANGES.CMANDAT = ECRAC.CMANDAT


--LIEN ENTRE ECRAC ET PLANC
UPDATE ESTIA_ECRAC
SET FK_PLANC = PLANC.PK_PLANC
FROM ESTIA_ECRAC AS ECRAC
     INNER JOIN ESTIA_PLANC AS PLANC
           ON PLANC.CORG = ECRAC.CORG
           AND PLANC.CCG = ECRAC.CCG
           AND PLANC.CHPC = 'A'




UPDATE ESTIA_ENTFAC
SET FK_TIERS = TIERS.PK_TIERS
FROM ESTIA_ENTFAC AS ENTFAC
     INNER JOIN ESTIA_TIERS AS TIERS
           ON TIERS.CTYPTIERS = ENTFAC.CTYPTIERS
           AND TIERS.CTIERS = ENTFAC.CTIERS


UPDATE ESTIA_HDEPCS
SET FK_ENTFAC = ENTFAC.PK_ENTFAC,
FK_TIERS = ENTFAC.FK_TIERS
FROM ESTIA_HDEPCS AS HDEPCS
     INNER JOIN ESTIA_ENTFAC AS ENTFAC
           ON ENTFAC.REF = HDEPCS.REF
           AND ENTFAC.CCATEG = HDEPCS.CCATEG


UPDATE ESTIA_HDEPCS
SET FK_ORG = GROUPE.FK_ORG,
FK_AGENCE = GROUPE.FK_AGENCE,
FK_GROUPE = GROUPE.PK_GROUPE
FROM ESTIA_HDEPCS AS HDEPCS
     INNER JOIN ESTIA_GROUPE AS GROUPE
           ON GROUPE.CORG = HDEPCS.CORG
           AND GROUPE.CAGENCE = HDEPCS.CAGENCE
           AND GROUPE.CGROUPE = HDEPCS.CGROUPE


UPDATE ESTIA_HDEPCS
SET FK_SCRITDP = SCRITDP.PK_SCRITDP,
FK_BASE = SCRITDP.FK_BASE
FROM ESTIA_HDEPCS AS HDEPCS
     INNER JOIN ESTIA_SCRITDP AS SCRITDP
           ON SCRITDP.CORG = HDEPCS.CORG
           AND SCRITDP.CAGENCE = HDEPCS.CAGENCE
           AND SCRITDP.CGROUPE = HDEPCS.CGROUPE
           AND SCRITDP.CCRITDP = HDEPCS.CCRITDP
           AND SCRITDP.CSCRITDP = HDEPCS.CSCRITDP


UPDATE ESTIA_ECRITAUX
SET FK_TIERS = TIERS.PK_TIERS
FROM ESTIA_ECRITAUX AS ECRITAUX
     INNER JOIN ESTIA_TIERS AS TIERS
           ON TIERS.CTYPTIERS = ECRITAUX.CTYPTIERS
           AND TIERS.CTIERS = ECRITAUX.CTIERS


END