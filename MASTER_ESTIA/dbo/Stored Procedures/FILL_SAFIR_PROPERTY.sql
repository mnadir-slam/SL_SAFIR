CREATE PROCEDURE [dbo].[FILL_SAFIR_PROPERTY]
AS
BEGIN

--####################################################################################################################
--############################################### TABLES DE DIMENSION ################################################
--####################################################################################################################


--D_BAIL: TABLE DE DIMENSION DES BAUX
TRUNCATE TABLE SAFIR_ESTIA..D_BAIL
INSERT INTO SAFIR_ESTIA..D_BAIL (DT_REF, PK_BAIL, FK_LOCATAIRE, FK_PROPRIETAIRE, FK_MANDAT_GERANCE, FK_IMMEUBLE, CD_ORIGINE, CD_SOCIETE, CD_MANDAT_GERANCE, NM_MANDAT_GERANCE, CD_BAIL, NM_BAIL, CD_IMMEUBLE, NM_IMMEUBLE, CD_LOCATAIRE, NM_LOCATAIRE, CD_STATUT_OCCUPANT, LB_STATUT_OCCUPANT, CD_USAGE_BAIL, LB_USAGE_BAIL, CD_NATURE_BAIL, LB_NATURE_BAIL, DT_SIGNATURE, DT_PREMIER_BAIL, DT_EFFET, DT_FIN, DT_EXPIRATION, NB_MOIS_PREAVIS, DT_ENTREE, DT_CONGE, DT_SORTIE, DT_PREMIERE_ASSOCIATION_LOT, DUREE_AN, DUREE_MOIS, LB_DUREE, DUR_MINIMUM_BAIL_MOIS, CD_LOT_PRINCIPAL, NM_LOT_PRINCIPAL, CD_TYPE_LOT_PRL, LB_TYPE_LOT_PRL, CD_USAGE_LOT_PRL, LB_USAGE_LOT_PRL, ETAGES, CD_ORIGINE_CONGE, LB_ORIGINE_CONGE, CD_NON_RELANCE, LB_NON_RELANCE, IND_CONTENTIEUX, CD_TERME, LB_TERME, CD_FREQUENCE_QUITTANCEMENT, CD_MODE_REVISION, CD_FREQUENCE_REVISION, DT_PROCHAINE_REVISION, CD_CHARGES_GRATUITES, MT_DG_PRINCIPAL, MT_DG_ANNEXE, NB_MOIS_DG, IND_DG_REVISABLE, IND_BAIL_SOUMIS_TVA, CD_TYPE_CAUTION, LB_TYPE_CAUTION, DT_DEBUT_CAUTION, DT_FIN_CAUTION, DUREE_CAUTION_MOIS, MT_CAUTION, IND_CAUTION_REVISABLE, DT_DEBUT_FRANCHISE, DT_FIN_FRANCHISE, DUREE_FRANCHISE_MOIS, IND_GROS_TRAVAUX, ANNEE_CA, MT_CA, DT_TRIEN_POT_1, DT_TRIEN_POT_2, DT_TRIEN_POT_3, DT_TRIEN_POT_4, DT_TRIEN_POT_5, DT_TRIEN_POT_6, DT_TRIEN_POT_7, DT_PRCH_TRIEN_POT, DT_RISQUE_CPLT_BAIL, DT_RISQUE, PC_RECUP_TF, PC_RECUP_HO, PC_RECUP_TB, PC_RECUP_AS, PC_RECUP_605, PC_RECUP_606, CHEMIN_BAIL, COMMENTAIRES, PC_RECUP_TOM)
SELECT DT_REF, PK_BAIL, FK_LOCATAIRE, FK_PROPRIETAIRE, FK_MANDAT_GERANCE, FK_IMMEUBLE, CD_ORIGINE, CD_SOCIETE, CD_MANDAT_GERANCE, NM_MANDAT_GERANCE, CD_BAIL, NM_BAIL, CD_IMMEUBLE, NM_IMMEUBLE, CD_LOCATAIRE, NM_LOCATAIRE, CD_STATUT_OCCUPANT, LB_STATUT_OCCUPANT, CD_USAGE_BAIL, LB_USAGE_BAIL, CD_NATURE_BAIL, LB_NATURE_BAIL, DT_SIGNATURE, DT_PREMIER_BAIL, DT_EFFET, DT_FIN, DT_EXPIRATION, NB_MOIS_PREAVIS, DT_ENTREE, DT_CONGE, DT_SORTIE, DT_PREMIERE_ASSOCIATION_LOT, DUREE_AN, DUREE_MOIS, LB_DUREE, DUR_MINIMUM_BAIL_MOIS, CD_LOT_PRINCIPAL, NM_LOT_PRINCIPAL, CD_TYPE_LOT_PRL, LB_TYPE_LOT_PRL, CD_USAGE_LOT_PRL, LB_USAGE_LOT_PRL, ETAGES, CD_ORIGINE_CONGE, LB_ORIGINE_CONGE, CD_NON_RELANCE, LB_NON_RELANCE, IND_CONTENTIEUX, CD_TERME, LB_TERME, CD_FREQUENCE_QUITTANCEMENT, CD_MODE_REVISION, CD_FREQUENCE_REVISION, DT_PROCHAINE_REVISION, CD_CHARGES_GRATUITES, MT_DG_PRINCIPAL, MT_DG_ANNEXE, NB_MOIS_DG, IND_DG_REVISABLE, IND_BAIL_SOUMIS_TVA, CD_TYPE_CAUTION, LB_TYPE_CAUTION, DT_DEBUT_CAUTION, DT_FIN_CAUTION, DUREE_CAUTION_MOIS, MT_CAUTION, IND_CAUTION_REVISABLE, DT_DEBUT_FRANCHISE, DT_FIN_FRANCHISE, DUREE_FRANCHISE_MOIS, IND_GROS_TRAVAUX, ANNEE_CA, MT_CA, DT_TRIEN_POT_1, DT_TRIEN_POT_2, DT_TRIEN_POT_3, DT_TRIEN_POT_4, DT_TRIEN_POT_5, DT_TRIEN_POT_6, DT_TRIEN_POT_7, DT_PRCH_TRIEN_POT, DT_RISQUE_CPLT_BAIL, DT_RISQUE, PC_RECUP_TF, PC_RECUP_HO, PC_RECUP_TB, PC_RECUP_AS, PC_RECUP_605, PC_RECUP_606, CHEMIN_BAIL, COMMENTAIRES, PC_RECUP_TOM
FROM V_D_BAIL

UPDATE SAFIR_ESTIA..D_BAIL
SET DT_PRCH_TRIEN_POT = CONVERT(DATETIME, CONVERT(VARCHAR(10),DATEADD(month,3,GETDATE()),103), 103)
FROM SAFIR_ESTIA..D_BAIL B
LEFT JOIN P_NATURE_BAIL PNB
ON PNB.CD_NATURE_BAIL = B.CD_NATURE_BAIL
WHERE PNB.CD_TYPE_BAIL IN ('HAB', 'PKG')

UPDATE SAFIR_ESTIA..D_BAIL
SET DT_PRCH_TRIEN_POT = CONVERT(DATETIME, CONVERT(VARCHAR(10),DATEADD(month,3,GETDATE()),103), 103)
FROM SAFIR_ESTIA..D_BAIL B
LEFT JOIN P_NATURE_BAIL PNB
ON PNB.CD_NATURE_BAIL = B.CD_NATURE_BAIL
WHERE PNB.CD_TYPE_BAIL IN ('AUT') AND B.DT_PRCH_TRIEN_POT IS NULL

--UPDATE SAFIR_ESTIA..D_BAIL
--SET DT_PRCH_TRIEN_POT = CASE WHEN B.DT_EXPIRATION < GETDATE() THEN DATEADD(MONTH, 6, DATEADD(DAY, -1, DATEADD(QUARTER, DATEDIFF(QUARTER, 0, GETDATE()) + 1, 0))) END
--FROM SAFIR_ESTIA..D_BAIL B
--LEFT JOIN P_NATURE_BAIL PNB
--ON PNB.CD_NATURE_BAIL = B.CD_NATURE_BAIL
--WHERE PNB.CD_TYPE_BAIL IN ('COM') AND B.DT_PRCH_TRIEN_POT IS NULL

update SAFIR_ESTIA..D_BAIL
set DT_ENTREE = ISNULL(P.DATE_ENTREE, B.DT_ENTREE),
	DT_SIGNATURE = ISNULL(P.DATE_SIGNATURE, B.DT_SIGNATURE),
	DT_EFFET = ISNULL(P.DATE_EFFET, B.DT_EFFET),
	MT_DG_BASE = ISNULL(P.MT_DG_BASE, B.MT_DG_BASE),
	MT_LOYER_BASE = ISNULL(P.MT_LOYER_ANNUEL_BASE, B.MT_LOYER_BASE)
from SAFIR_ESTIA..D_BAIL B
inner join MASTER_ESTIA..P_ETAT_LOC_INIT P
on P.PK_IMMEUBLE = B.FK_IMMEUBLE and P.PK_BAIL = B.PK_BAIL;

--D_IMMEUBLE: TABLE DE DIMENSION DES IMMEUBLES
TRUNCATE TABLE SAFIR_ESTIA..D_IMMEUBLE
INSERT INTO SAFIR_ESTIA..D_IMMEUBLE (DT_REF, PK_IMMEUBLE, CD_ORIGINE, CD_SOCIETE, CD_IMMEUBLE, NM_IMMEUBLE, ADRLGN1, ADRLGN2, ADRLGN3, ADRLGN4, CODPOS, VILLE, CD_TYPE_IMMEUBLE, LB_TYPE_IMMEUBLE, CD_CLASSE_IMMEUBLE, LB_CLASSE_IMMEUBLE, NB_LOTS_PRINCIPAUX, NB_LOTS, DT_ACHEVEMENT_TRAVAUX, CD_RESPONSABLE_PATRIMOINE, LB_RESPONSABLE_PATRIMOINE, CD_RESPONSABLE_TRAVAUX, LB_RESPONSABLE_TRAVAUX, CD_RESPONSABLE_GROUPE, LB_RESPONSABLE_GROUPE, NM_RECETTE_IMPOTS, NM_PERCEPTION, CD_COMPTABLE_IMMEUBLE, LB_COMPTABLE_IMMEUBLE, CD_CONTROLEUR_GESTION, LB_CONTROLEUR_GESTION, CD_ASSET_MANAGER_CLIENT, LB_ASSET_MANAGER_CLIENT, CD_ETAT_GESTION, LB_ETAT_GESTION, CD_TYPOLOGIE_ACTIF, LB_TYPOLOGIE_ACTIF, CD_GERANCE_COPRO, LB_GERANCE_COPRO, CD_PROPRIETAIRE, LB_PROPRIETAIRE, CD_GROUPE_PROPRIETAIRE, LB_GROUPE_PROPRIETAIRE, CD_LOCALISATION, LB_LOCALISATION, VLM_ARCHIVE, VLM_PARKING_SIMPLE, SURFACE_TOTALE, CHEMIN_PLAN, CHEMIN_ETAT_SURFACES, VLM_PARKING_DOUBLE, CHEMIN_TB, CHEMIN_TF, POLE_GESTION, CHEMIN_MANDAT)
SELECT DT_REF, PK_IMMEUBLE, CD_ORIGINE, CD_SOCIETE, CD_IMMEUBLE, NM_IMMEUBLE, ADRLGN1, ADRLGN2, ADRLGN3, ADRLGN4, CODPOS, VILLE, CD_TYPE_IMMEUBLE, LB_TYPE_IMMEUBLE, CD_CLASSE_IMMEUBLE, LB_CLASSE_IMMEUBLE, NB_LOTS_PRINCIPAUX, NB_LOTS, DT_ACHEVEMENT_TRAVAUX, CD_RESPONSABLE_PATRIMOINE, LB_RESPONSABLE_PATRIMOINE, CD_RESPONSABLE_TRAVAUX, LB_RESPONSABLE_TRAVAUX, CD_RESPONSABLE_GROUPE, LB_RESPONSABLE_GROUPE, NM_RECETTE_IMPOTS, NM_PERCEPTION, CD_COMPTABLE_IMMEUBLE, LB_COMPTABLE_IMMEUBLE, CD_CONTROLEUR_GESTION, LB_CONTROLEUR_GESTION, CD_ASSET_MANAGER_CLIENT, LB_ASSET_MANAGER_CLIENT, CD_ETAT_GESTION, LB_ETAT_GESTION, CD_TYPOLOGIE_ACTIF, LB_TYPOLOGIE_ACTIF, CD_GERANCE_COPRO, LB_GERANCE_COPRO, CD_PROPRIETAIRE, LB_PROPRIETAIRE, CD_GROUPE_PROPRIETAIRE, LB_GROUPE_PROPRIETAIRE, CD_LOCALISATION, LB_LOCALISATION, VLM_ARCHIVE, VLM_PKG_SIMPLE, SURFACE_TOTALE, CHEMIN_PLAN, CHEMIN_ETAT_SURFACES, VLM_PKG_DOUBLE, CHEMIN_TB, CHEMIN_TF, POLE_GESTION, CHEMIN_MANDAT
FROM V_D_IMMEUBLE


/*--D_INDIVISAIRE: TABLE DE DIMENSION DES INDIVISAIRES
TRUNCATE TABLE SAFIR_ESTIA..D_INDIVISAIRE
INSERT INTO SAFIR_ESTIA..D_INDIVISAIRE (DT_REF, PK_INDIVISAIRE, CD_ORIGINE, CD_INDIVISAIRE, NM_INDIVISAIRE, CD_QUALITE_CIVILE, LB_QUALITE_CIVILE, NOM_INDIVISAIRE, PRENOM_INDIVISAIRE, CPLT_NOM_INDIVISAIRE, ADRLGN1, ADRLGN2, ADRLGN3, CODPOS, VILLE, TELEPHONE, TELEPHONE_2, FAX, REFERENCE_EXTERIEURE)
SELECT DT_REF, PK_INDIVISAIRE, CD_ORIGINE, CD_INDIVISAIRE, NM_INDIVISAIRE, CD_QUALITE_CIVILE, LB_QUALITE_CIVILE, NOM_INDIVISAIRE, PRENOM_INDIVISAIRE, CPLT_NOM_INDIVISAIRE, ADRLGN1, ADRLGN2, ADRLGN3, CODPOS, VILLE, TELEPHONE, TELEPHONE_2, FAX, REFERENCE_EXTERIEURE
FROM V_D_INDIVISAIRE*/


--D_LOCATAIRE: TABLE DE DIMENSION DES LOCATAIRES
TRUNCATE TABLE SAFIR_ESTIA..D_LOCATAIRE
INSERT INTO SAFIR_ESTIA..D_LOCATAIRE (DT_REF, PK_LOCATAIRE, CD_ORIGINE, CD_LOCATAIRE, NM_LOCATAIRE, CD_QUALITE_CIVILE, LB_QUALITE_CIVILE, NOM_LOCATAIRE, PRENOM_LOCATAIRE, CPLT_NOM_LOCATAIRE, ADRLGN1, ADRLGN2, ADRLGN3, CODPOS, VILLE, TELEPHONE, TELEPHONE_2, FAX, CD_TYPE_TIERS, LB_TYPE_TIERS, CODE_APE, LIBELLE_APE, CODE_NAF, NOM_COMMERCIAL, IND_LOYER_VARIABLE, MT_CA, ANNEE_CA, CD_CLIENT)
SELECT DT_REF, PK_LOCATAIRE, CD_ORIGINE, CD_LOCATAIRE, NM_LOCATAIRE, CD_QUALITE_CIVILE, LB_QUALITE_CIVILE, NOM_LOCATAIRE, PRENOM_LOCATAIRE, CPLT_NOM_LOCATAIRE, ADRLGN1, ADRLGN2, ADRLGN3, CODPOS, VILLE, TELEPHONE, TELEPHONE_2, FAX, CD_TYPE_TIERS, LB_TYPE_TIERS, CODE_APE, LIBELLE_APE, CODE_NAF, NOM_COMMERCIAL, IND_LOYER_VARIABLE, MT_CA, ANNEE_CA, CD_CLIENT
FROM V_D_LOCATAIRE


--D_LOT: TABLE DE DIMENSION DES LOTS
TRUNCATE TABLE SAFIR_ESTIA..D_LOT
INSERT INTO SAFIR_ESTIA..D_LOT (DT_REF, PK_LOT, FK_IMMEUBLE, FK_MANDAT_GERANCE, CD_ORIGINE, CD_SOCIETE, CD_IMMEUBLE, NM_IMMEUBLE, CD_LOT, NM_LOT, CD_TYPE_LOT, LB_TYPE_LOT, CD_USAGE, LB_USAGE, CD_BATIMENT, CD_ESCALIER, ETAGE, NM_ETAGE, PORTE, NB_PIECES, VAL_SURFACE_REELLE, VAL_SURFACE_CORRIGEE, NB_PARKINGS, NB_EMPLACEMENTS_PARKING, CD_SOCIETE_GERANCE, CD_MANDAT_GERANCE, NM_MANDAT_GERANCE, DT_DEBUT_EN_SERVICE, DT_FIN_EN_SERVICE, CD_MOTIF_VACANCE, LB_MOTIF_VACANCE, MT_LOYER_MARCHE, MT_CHARGES_MARCHE, CD_REG_USAGE, LB_REG_USAGE)
SELECT DT_REF, PK_LOT, FK_IMMEUBLE, FK_MANDAT_GERANCE, CD_ORIGINE, CD_SOCIETE, CD_IMMEUBLE, NM_IMMEUBLE, CD_LOT, NM_LOT, CD_TYPE_LOT, LB_TYPE_LOT, CD_USAGE, LB_USAGE, CD_BATIMENT, CD_ESCALIER, ETAGE, NM_ETAGE, PORTE, NB_PIECES, VAL_SURFACE_REELLE, VAL_SURFACE_CORRIGEE, NB_PARKINGS, NB_EMPLACEMENTS_PARKING, CD_SOCIETE_GERANCE, CD_MANDAT_GERANCE, NM_MANDAT_GERANCE, DT_DEBUT_EN_SERVICE, DT_FIN_EN_SERVICE, CD_MOTIF_VACANCE, LB_MOTIF_VACANCE, MT_LOYER_MARCHE, MT_CHARGES_MARCHE, CD_REG_USAGE, lB_REG_USAGE
FROM V_D_LOT


--D_MANDAT_GERANCE: TABLE DE DIMENSION DES MANDATS DE GERANCE
TRUNCATE TABLE SAFIR_ESTIA..D_MANDAT_GERANCE
INSERT INTO SAFIR_ESTIA..D_MANDAT_GERANCE (DT_REF, PK_MANDAT_GERANCE, FK_PROPRIETAIRE, FK_IMMEUBLE, CD_ORIGINE, CD_SOCIETE, CD_MANDAT, NM_MANDAT, CD_IMMEUBLE, NM_IMMEUBLE, CD_PROPRIETAIRE, NM_PROPRIETAIRE, DT_DEBUT_GESTION, DT_FIN_GESTION, IND_MANDAT_ACTIF, DT_CLOTURE_COMPTES, CD_GESTIONNAIRE, NOM_GESTIONNAIRE, CD_GROUPE, LB_GROUPE, PRORATA_TVA, IND_TOTALITE_TVA, IND_TAXE_ADDITIONNELLE, IND_DEDUCTION_REVENU_FONCIER, IND_PRORATA_QUITTANCE, IND_EDITION_BDX_ENCAISSEMENT, DT_TERME_DERN_QUITTANCEMENT, MT_FRAIS_DOSSIER, MT_FRAIS_RELANCE_SIMPLE, MT_FRAIS_RELANCE_RECOMMANDEE, CD_FREQUENCE_REDDITION, NM_MOIS_FIN_REDDITION, IND_VIREMENT_AUTO, IND_ACOMPTE_PROPRIETAIRE, CD_FREQUENCE_HONORAIRES, NM_MOIS_FIN_HONORAIRES, CD_TECHNICIEN, NOM_TECHNICIEN, OPAQUE)
SELECT DT_REF, PK_MANDAT_GERANCE, FK_PROPRIETAIRE, FK_IMMEUBLE, CD_ORIGINE, CD_SOCIETE, CD_MANDAT, NM_MANDAT, CD_IMMEUBLE, NM_IMMEUBLE, CD_PROPRIETAIRE, NM_PROPRIETAIRE, DT_DEBUT_GESTION, DT_FIN_GESTION, IND_MANDAT_ACTIF, DT_CLOTURE_COMPTES, CD_GESTIONNAIRE, NOM_GESTIONNAIRE, CD_GROUPE, LB_GROUPE, PRORATA_TVA, IND_TOTALITE_TVA, IND_TAXE_ADDITIONNELLE, IND_DEDUCTION_REVENU_FONCIER, IND_PRORATA_QUITTANCE, IND_EDITION_BDX_ENCAISSEMENT, DT_TERME_DERN_QUITTANCEMENT, MT_FRAIS_DOSSIER, MT_FRAIS_RELANCE_SIMPLE, MT_FRAIS_RELANCE_RECOMMANDEE, CD_FREQUENCE_REDDITION, NM_MOIS_FIN_REDDITION, IND_VIREMENT_AUTO, IND_ACOMPTE_PROPRIETAIRE, CD_FREQUENCE_HONORAIRES, NM_MOIS_FIN_HONORAIRES, CD_TECHNICIEN, NOM_TECHNICIEN, OPAQUE
FROM V_D_MANDAT_GERANCE


--D_PROPRIETAIRE: TABLE DE DIMENSION DES PROPRIETAIRES
TRUNCATE TABLE SAFIR_ESTIA..D_PROPRIETAIRE
INSERT INTO SAFIR_ESTIA..D_PROPRIETAIRE (DT_REF, PK_PROPRIETAIRE, CD_ORIGINE, CD_PROPRIETAIRE, NM_PROPRIETAIRE, CD_QUALITE_CIVILE, LB_QUALITE_CIVILE, NOM_PROPRIETAIRE, PRENOM_PROPRIETAIRE, CPLT_NOM_PROPRIETAIRE, ADRLGN1, ADRLGN2, ADRLGN3, CODPOS, VILLE, TELEPHONE, TELEPHONE_2, FAX, CD_TYPE_TIERS, LB_TYPE_TIERS, CODE_APE, LIBELLE_APE, REF_EXTERIEURE, SOCIETE_IRIS, CD_TYPE_SOCIETE, LB_TYPE_SOCIETE)
SELECT DT_REF, PK_PROPRIETAIRE, CD_ORIGINE, CD_PROPRIETAIRE, NM_PROPRIETAIRE, CD_QUALITE_CIVILE, LB_QUALITE_CIVILE, NOM_PROPRIETAIRE, PRENOM_PROPRIETAIRE, CPLT_NOM_PROPRIETAIRE, ADRLGN1, ADRLGN2, ADRLGN3, CODPOS, VILLE, TELEPHONE, TELEPHONE_2, FAX, CD_TYPE_TIERS, LB_TYPE_TIERS, CODE_APE, LIBELLE_APE, REF_EXTERIEURE, SOCIETE_IRIS, CD_TYPE_SOCIETE, LB_TYPE_SOCIETE
FROM V_D_PROPRIETAIRE


--D_RUBRIQUE: TABLE DE DIMENSION DES RUBRIQUES DE TARIF
TRUNCATE TABLE SAFIR_ESTIA..D_RUBRIQUE
INSERT INTO SAFIR_ESTIA..D_RUBRIQUE (DT_REF, PK_RUBRIQUE, ORIGINE, CD_SOCIETE, CD_RUBRIQUE, NM_RUBRIQUE, LB_RUBRIQUE, CD_NATURE_RUBRIQUE, LB_NATURE_RUBRIQUE, IND_SURLOYER, IND_FRANCHISE_LOYER)
SELECT DT_REF, PK_RUBRIQUE, ORIGINE, CD_SOCIETE, CD_RUBRIQUE, NM_RUBRIQUE, LB_RUBRIQUE, CD_NATURE_RUBRIQUE, LB_NATURE_RUBRIQUE, IND_SURLOYER, IND_FRANCHISE_LOYER
FROM V_D_RUBRIQUE


--D_TEMPS: TABLE DE DIMENSION DE TEMPS (MISES A JOUR SEULEMENT)
UPDATE SAFIR_ESTIA..D_TEMPS
SET IND_DERNIERE_ALIMENTATION = CASE WHEN CONVERT(VARCHAR(10),GETDATE(),103)=CONVERT(VARCHAR(10),PK_TEMPS,103) THEN 'O' ELSE 'N' END,
IND_MOIS_ACTUEL = CASE WHEN MONTH(GETDATE())=MONTH(PK_TEMPS) AND YEAR(GETDATE())=YEAR(PK_TEMPS) THEN 'O' ELSE 'N' END,
IND_MOIS_DERNIER = CASE WHEN MONTH(GETDATE())=MONTH(DATEADD(month,1,PK_TEMPS)) AND YEAR(GETDATE())=YEAR(DATEADD(month,1,PK_TEMPS)) THEN 'O' ELSE 'N' END,
IND_TRIMESTRE_ACTUEL = CASE WHEN DATEPART(qq,GETDATE())=DATEPART(qq,PK_TEMPS) AND YEAR(GETDATE())=YEAR(PK_TEMPS) THEN 'O' ELSE 'N' END,
IND_TRIMESTRE_DERNIER = CASE WHEN DATEPART(qq,GETDATE())=DATEPART(qq,DATEADD(month,3,PK_TEMPS)) AND YEAR(GETDATE())=YEAR(DATEADD(month,3,PK_TEMPS)) THEN 'O' ELSE 'N' END,
IND_SEMESTRE_ACTUEL = 
    CASE WHEN CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),103), 103)
              BETWEEN DATEADD(month, -MONTH(PK_TEMPS)+1 + 6 * FLOOR((DATEPART(qq,PK_TEMPS) - 1)/2), DATEADD(day,-DAY(PK_TEMPS)+1,PK_TEMPS))
              AND DATEADD(day, -1, DATEADD(month, -MONTH(PK_TEMPS)+1 + 6 * FLOOR((DATEPART(qq,PK_TEMPS) - 1)/2 + 1), DATEADD(day,-DAY(PK_TEMPS)+1,PK_TEMPS)))
         THEN 'O'
         ELSE 'N'
    END,
IND_SEMESTRE_DERNIER = 
    CASE WHEN CONVERT(DATETIME, CONVERT(VARCHAR(10),DATEADD(month,-6,GETDATE()),103), 103)
              BETWEEN DATEADD(month, -MONTH(PK_TEMPS)+1 + 6 * FLOOR((DATEPART(qq,PK_TEMPS) - 1)/2), DATEADD(day,-DAY(PK_TEMPS)+1,PK_TEMPS))
              AND DATEADD(day, -1, DATEADD(month, -MONTH(PK_TEMPS)+1 + 6 * FLOOR((DATEPART(qq,PK_TEMPS) - 1)/2 + 1), DATEADD(day,-DAY(PK_TEMPS)+1,PK_TEMPS)))
         THEN 'O'
         ELSE 'N'
    END,
IND_ANNEE_ACTUELLE = CASE WHEN YEAR(GETDATE())=YEAR(PK_TEMPS) THEN 'O' ELSE 'N' END,
IND_ANNEE_DERNIERE = CASE WHEN YEAR(GETDATE())=YEAR(PK_TEMPS)+1 THEN 'O' ELSE 'N' END


--####################################################################################################################
--################################################# TABLES DE FAITS ##################################################
--####################################################################################################################


--F_ETAT_LOCATIF: TABLE DE FAITS "ETAT LOCATIF"
DECLARE @DT_EL DATETIME, @DT_EL_PREC DATETIME
SET @DT_EL = CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),103), 103)

IF NOT EXISTS (SELECT * FROM SAFIR_ESTIA..F_ETAT_LOCATIF WHERE MONTH(PK_TEMPS)=MONTH(@DT_EL) AND YEAR(PK_TEMPS)=YEAR(@DT_EL))
	BEGIN
	SET @DT_EL_PREC = DATEADD(day, -DAY(@DT_EL), @DT_EL)
	EXEC dbo.FILL_ETAT_LOCATIF @DT_EL_PREC, 'N'
	END
EXEC dbo.FILL_ETAT_LOCATIF @DT_EL, 'N'

	--GENERATION POUR LE DERNIER JOUR DU MOIS
IF MONTH(@DT_EL) = MONTH(DATEADD(day, 1, @DT_EL))
	BEGIN
	SET @DT_EL = DATEADD(day,   -1,   DATEADD(month, 1, DATEADD(day,1-DAY(@DT_EL),@DT_EL)))
	
	EXEC dbo.FILL_ETAT_LOCATIF @DT_EL, 'O'
	END


--GENERATION DES 1 PROCHAINS MOIS -- 3 PROCHAINS MOIS
DECLARE @I INT
SET @I = 1
WHILE @I <= 3
	BEGIN
	SET @DT_EL = DATEADD(day,  -1,  DATEADD(month, 1, DATEADD(day,1,@DT_EL)))
	
	EXEC dbo.FILL_ETAT_LOCATIF @DT_EL, 'N'

	SET @I = @I + 1
	END

UPDATE SAFIR_ESTIA..F_ETAT_LOCATIF
SET PK_LOT = ISNULL(L.PK_LOCAL, -F.PK_LOT),
FK_PROPRIETAIRE = ISNULL(M.FK_TIERS, -F.FK_PROPRIETAIRE),
FK_MANDAT_GERANCE = ISNULL(M.FK_MANGES, -F.FK_MANDAT_GERANCE),
FK_IMMEUBLE = ISNULL(L.FK_GROUPE, -F.FK_IMMEUBLE),
FK_BAIL = ISNULL(LOC.FK_BAIL, -F.FK_BAIL),
FK_LOCATAIRE = ISNULL(LOC.FK_TIERS, -F.FK_LOCATAIRE)

FROM SAFIR_ESTIA..F_ETAT_LOCATIF AS F
     LEFT JOIN ESTIA_LOCAL AS L
          ON L.CORG = F.CORG
          AND L.CAGENCE = F.CAGENCE
          AND L.CGROUPE = F.CGROUPE
          AND L.CIMMEUB = F.CIMMEUB
          AND L.CLOCAL = F.CLOCAL
     LEFT JOIN WRK_GROUPE_MANGES AS M
          ON M.CORG = F.CORG
          AND M.CAGENCE = F.CAGENCE
          AND M.CGROUPE = F.CGROUPE
     LEFT JOIN ESTIA_LOCATION AS LOC
          ON LOC.CORG = F.CORG
          AND LOC.CAGENCE = F.CAGENCE
          AND LOC.CGROUPE = F.CGROUPE
          AND LOC.CIMMEUB = F.CIMMEUB
          AND LOC.CLOCAL = F.CLOCAL
          AND LOC.OCC = F.OCC

	UPDATE SAFIR_ESTIA..F_ETAT_LOCATIF
	SET CD_INDICE_REVISION = P.[TYPE_INDICE ]
	FROM SAFIR_ESTIA..F_ETAT_LOCATIF FEL
	INNER JOIN MASTER_ESTIA..P_ETAT_LOC_INIT P
	ON  P.PK_IMMEUBLE = FEL.FK_IMMEUBLE and P.PK_BAIL = FEL.FK_BAIL
	where P.[TYPE_INDICE ] IS NOT NULL;--CD_INDICE_REVISION IS NULL;

	--UPDATE SAFIR_ESTIA..F_ETAT_LOCATIF
	--SET CD_INDICE_INITIAL = LOCATION.INDREF
	--FROM SAFIR_ESTIA..F_ETAT_LOCATIF FEL
	--INNER JOIN MASTER_ESTIA..ESTIA_LOCATION LOCATION
	--ON LOCATION.PK_LOCATION = FEL.FK_BAIL
	---- debut modif MNA 20180910
	--WHERE (FEL.CD_INDICE_INITIAL IS NULL OR FEL.CD_INDICE_INITIAL = 0);
	---- fin modif MNA 20180910

	--UPDATE SAFIR_ESTIA..F_ETAT_LOCATIF
	--SET VAL_INDICE_INITIAL = INDICE.VAL
	--FROM SAFIR_ESTIA..F_ETAT_LOCATIF FEL
	--INNER JOIN MASTER_ESTIA..ESTIA_LOCATION LOCATION
	--ON LOCATION.PK_LOCATION = FEL.FK_BAIL
	--LEFT JOIN MASTER_ESTIA..ESTIA_INDICE INDICE
	--ON INDICE.ANNEE = right(LOCATION.INDREF, 4) AND INDICE.MOIS = left(LOCATION.INDREF, 1) AND INDICE.CNUMI = LOCATION.CNUMI
	---- debut modif MNA 20180910
	--WHERE FEL.VAL_INDICE_INITIAL IS NULL;
	---- fin modif MNA 20180910

	--UPDATE SAFIR_ESTIA..F_ETAT_LOCATIF
	--SET CD_INDICE_INITIAL = left(P.INDICE_BASE, 1) + SUBSTRING(P.INDICE_BASE, 3, 4)
	--FROM SAFIR_ESTIA..F_ETAT_LOCATIF FEL
	--INNER JOIN MASTER_ESTIA..P_ETAT_LOC_INIT P
	--ON  P.PK_IMMEUBLE = FEL.FK_IMMEUBLE and P.PK_BAIL = FEL.FK_BAIL
	--WHERE P.INDICE_BASE IS NOT NULL;


	--UPDATE SAFIR_ESTIA..F_ETAT_LOCATIF
	--SET VAL_INDICE_INITIAL = P.VAL_INDICE_BASE
	--FROM SAFIR_ESTIA..F_ETAT_LOCATIF FEL
	--INNER JOIN MASTER_ESTIA..P_ETAT_LOC_INIT P
	--ON P.PK_IMMEUBLE = FEL.FK_IMMEUBLE and P.PK_BAIL = FEL.FK_BAIL
	--where P.VAL_INDICE_BASE IS NOT NULL;


--F_COMPTABILITE_LOCATAIRE: TABLE DE FAITS SUR LA COMPTABILITE DES LOCATAIRES
TRUNCATE TABLE SAFIR_ESTIA..F_COMPTABILITE_LOCATAIRE
INSERT INTO SAFIR_ESTIA..F_COMPTABILITE_LOCATAIRE (DT_REF, PK_ECRITURE, FK_TEMPS, FK_PROPRIETAIRE, FK_MANDAT_GERANCE, FK_IMMEUBLE, FK_BAIL, FK_LOCATAIRE, FK_RUBRIQUE, IND_QUITTANCEMENT, IND_ENCAISSEMENT, IND_ELEMENT_PERMANENT, DT_COMPTABLE, DT_TERME, DT_SAISIE, CD_TYPE_SAISIE, NUM_SAISIE, PIECE_COMPTABLE, NUM_FACTURE, LB_ECRITURE, MT_DEBIT, MT_CREDIT, MT_QUITTANCE, MT_ENCAISSE, MT_SOLDE)
SELECT DT_REF, PK_ECRITURE, FK_TEMPS, FK_PROPRIETAIRE, FK_MANDAT_GERANCE, FK_IMMEUBLE, FK_BAIL, FK_LOCATAIRE, FK_RUBRIQUE, IND_QUITTANCEMENT, IND_ENCAISSEMENT, IND_ELEMENT_PERMANENT, DT_COMPTABLE, DT_TERME, DT_SAISIE, CD_TYPE_SAISIE, NUM_SAISIE, PIECE_COMPTABLE, NUM_FACTURE, LB_ECRITURE, MT_DEBIT, MT_CREDIT, MT_QUITTANCE, MT_ENCAISSE, MT_SOLDE
FROM V_F_COMPTABILITE_LOCATAIRE
           

END