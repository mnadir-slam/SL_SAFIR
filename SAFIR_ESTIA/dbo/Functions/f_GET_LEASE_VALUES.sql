CREATE FUNCTION [dbo].[f_GET_LEASE_VALUES] 
(
	@DT_ANALYSE DATETIME
)
RETURNS @retLEASE_VALUES TABLE   
(  
	FK_ORG				int,
	FK_PROPRIETAIRE		int,
	FK_MANGES			int,
	FK_GROUPE			int,
	FK_BAIL				int,
	FK_TIERS			int,
	CORG				varchar(4),
	CD_PROPRIETAIRE		varchar(14),
	NOM_PROPRIETAIRE	varchar(76),
	CMANDAT				varchar(16),
	CD_IMMEUBLE_ESTIA	int,
	CD_IMMEUBLE_DREAM	varchar(20),
	NOM_IMMEUBLE		varchar(64),
	CD_BAIL				varchar(20),
	CD_LOCATAIRE		varchar(14),
	NOM_LOCATAIRE		varchar(76) NULL,
	VAL_SURF_BAIL		numeric(17,2), 
	VAL_SURF_BUR		numeric(17,2),
	VAL_SURF_COM		numeric(17,2),
	VAL_SURF_ARC		numeric(17,2),
	VAL_SURF_HAB		numeric(17,2),
	VAL_SURF_HOT		numeric(17,2),
	VAL_SURF_ACT		numeric(17,2)
)  
--Returns a result set that lists all the employees who report to the   
--specific employee directly or indirectly.*/  
AS  
BEGIN  
WITH LEASE_VALUES_cte(FK_ORG, FK_PROPRIETAIRE, FK_MANGES, FK_GROUPE, FK_BAIL, FK_TIERS, CORG, CD_PROPRIETAIRE, NOM_PROPRIETAIRE, CMANDAT, CD_IMMEUBLE_ESTIA, CD_IMMEUBLE_DREAM, NOM_IMMEUBLE, CD_BAIL, CD_LOCATAIRE, NOM_LOCATAIRE, VAL_SURF_BAIL, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_HOT, VAL_SURF_ACT)
AS
(
	select	  WHL.FK_ORG
			, WHL.FK_PROPRIETAIRE
			, WHL.FK_MANGES
			, WHL.FK_GROUPE
			, WHL.FK_BAIL 
			, WHL.FK_TIERS
			, WHL.CORG
			, DMG.CD_PROPRIETAIRE
			, PROPRIETAIRE.NOM_PROPRIETAIRE
			, WHL.CMANDAT
			, WHL.CGROUPE CD_IMMEUBLE_ESTIA
			, IMMEUBLE_EASYFOLDER.CD_IMMEUBLE_DREAM
			, upper(IMMEUBLE.ADRLGN1) NOM_IMMEUBLE
			, WHL.CCOMPTE + '/' + REPLACE(STR(WHL.NOBAIL, 2, 0), ' ', '0') AS CD_BAIL
			, WHL.CTIERS CD_LOCATAIRE
			, WHL.LTIERS NOM_LOCATAIRE
			, SUM(L.VAL_SURFACE_REELLE) VAL_SURF_BAIL
			, SUM(case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_BUR
			, SUM(case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_COM
			, SUM(case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_ARC
			, SUM(case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_HAB
			, SUM(case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_HOT
			, SUM(case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_ACT
	from MASTER_ESTIA..WRK_HISTO_LOT WHL
	left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
	on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
	inner join SAFIR_ESTIA..D_LOT L
	on L.PK_LOT = WHL.FK_LOCAL
	left join SAFIR_ESTIA..D_PROPRIETAIRE PROPRIETAIRE
	on PROPRIETAIRE.PK_PROPRIETAIRE = DMG.FK_PROPRIETAIRE
	left join SAFIR_ESTIA..D_IMMEUBLE IMMEUBLE
	on IMMEUBLE.PK_IMMEUBLE = WHL.FK_GROUPE
	left join MASTER_ESTIA..P_TRANSCO_IMMEUBLE_EASYFOLDER IMMEUBLE_EASYFOLDER
	on IMMEUBLE_EASYFOLDER.NM_IMMEUBLE_ESTIA = WHL.CGROUPE
	where WHL.CORG = '11'
	and DMG.IND_MANDAT_ACTIF = 'O'
	and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
	and @DT_ANALYSE between WHL.DT_DEBUT_RAT AND ISNULL(WHL.DT_FIN_RAT, '2999/01/01')
	--and WHL.FK_GROUPE = 291
	group by WHL.FK_ORG
			, WHL.FK_PROPRIETAIRE
			, WHL.FK_MANGES
			, WHL.FK_GROUPE
			, WHL.FK_BAIL 
			, WHL.FK_TIERS
			, WHL.CORG
			, DMG.CD_PROPRIETAIRE
			, PROPRIETAIRE.NOM_PROPRIETAIRE
			, WHL.CMANDAT
			, WHL.CGROUPE
			, IMMEUBLE_EASYFOLDER.CD_IMMEUBLE_DREAM
			, IMMEUBLE.ADRLGN1 
			, WHL.CCOMPTE
			, WHL.NOBAIL
			, WHL.CTIERS
			, WHL.LTIERS
)

-- copy the required columns to the result of the function   
   INSERT @retLEASE_VALUES  
   SELECT FK_ORG, FK_PROPRIETAIRE, FK_MANGES, FK_GROUPE, FK_BAIL, FK_TIERS, CORG, CD_PROPRIETAIRE, NOM_PROPRIETAIRE, CMANDAT, CD_IMMEUBLE_ESTIA, CD_IMMEUBLE_DREAM, NOM_IMMEUBLE, CD_BAIL, CD_LOCATAIRE, NOM_LOCATAIRE, VAL_SURF_BAIL, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_HOT, VAL_SURF_ACT
   FROM LEASE_VALUES_cte   
   RETURN  
END;