-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[BALANCE_FOURNISSEUR]
( 
	@DT_FIN DATETIME,
	--@PK_PROPRIETAIRE INT,
	@PK_PROPRIETAIRE NVARCHAR(MAX),
	@PK_IMMEUBLE NVARCHAR(MAX)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

WITH REQ AS
(
	SELECT PK_PROPRIETAIRE
		 , PK_FOURNISSEUR
		 , CORG
		 , LB_SOCIETE
		 , CSECTANA
		 , NOM_PROPRIETAIRE
		 , ADRESSE_GROUPE
		 , CCATEG
		 , LCATEG
		 , CTYPCOM
		 , LTYPCOM
		 , CD_FOURNISSEUR
		 , NOM_FOURNISSEUR
		 , CUMUL_ANT_DEBIT
		 , CUMUL_ANT_CREDIT
		 , SUM(CUMUL_PERIODE_DEBIT) AS CUMUL_PERIODE_DEBIT
		 , SUM(CUMUL_PERIODE_CREDIT) AS CUMUL_PERIODE_CREDIT
	FROM
	(
		SELECT PROPRIETAIRE.PK_TIERS AS PK_PROPRIETAIRE
			 , FOURNISSEUR.PK_TIERS AS PK_FOURNISSEUR
			 , ECRITAUX.CORG
			 , ORG.LORG AS LB_SOCIETE
			 , DETSEC.CSECTANA
			 , PROPRIETAIRE.LTIERS AS NOM_PROPRIETAIRE
			 , GROUPE.CGROUPE
			 , dbo.INITCAP(GROUPE.RUE) AS ADRESSE_GROUPE
			 , ECRITAUX.CCATEG
			 , CATEG.LCATEG
			 , ECRITAUX.CTYPCOM
			 , TYPCOM.LTYPCOM
			 , CASE WHEN ISNUMERIC(ECRITAUX.CTIERS) <> 0 THEN CONVERT(INT, ECRITAUX.CTIERS) END AS CD_FOURNISSEUR
			 , FOURNISSEUR.RTIERS AS NOM_FOURNISSEUR
			 , CAST(NULL AS NUMERIC(18,2)) AS CUMUL_ANT_DEBIT
			 , CAST(NULL AS NUMERIC(18,2)) AS CUMUL_ANT_CREDIT
			 , DETSEC.CUMUL_PERIODE_DEBIT
			 , DETSEC.CUMUL_PERIODE_CREDIT
		FROM MASTER_ESTIA..ESTIA_ECRITAUX ECRITAUX
		LEFT JOIN MASTER_ESTIA..ESTIA_CATEG CATEG
		ON CATEG.CCATEG = ECRITAUX.CCATEG
		LEFT JOIN MASTER_ESTIA..ESTIA_TYPCOM TYPCOM
		ON TYPCOM.CTYPCOM = ECRITAUX.CTYPCOM
		LEFT JOIN MASTER_ESTIA..ESTIA_TIERS FOURNISSEUR
		ON FOURNISSEUR.CTIERS = ECRITAUX.CTIERS
		LEFT JOIN MASTER_ESTIA..ESTIA_ORG ORG
		ON ORG.CORG = ECRITAUX.CORG
		LEFT JOIN
		(
			SELECT CORG
				 , CTYPTIERS
				 , CTIERS
				 , REF
				 , LIGNE
				 , CSECTANA
				 , (CASE SENS WHEN 'D' THEN MONTANT ELSE 0 END) AS CUMUL_PERIODE_DEBIT
				 , (CASE SENS WHEN 'C' THEN MONTANT ELSE 0 END) AS CUMUL_PERIODE_CREDIT
			FROM MASTER_ESTIA..ESTIA_DETSEC
			WHERE CORG = '11'
		) DETSEC
		ON DETSEC.CORG = ECRITAUX.CORG AND DETSEC.CTYPTIERS = ECRITAUX.CTYPTIERS AND DETSEC.CTIERS = ECRITAUX.CTIERS AND DETSEC.REF = ECRITAUX.REF AND DETSEC.LIGNE = ECRITAUX.LIGNE
		LEFT JOIN 
		(
			SELECT DISTINCT CORG
					, CMANDAT
					, CSECTANA
			FROM MASTER_ESTIA..ESTIA_MANSEC 
		) MANSEC
		ON MANSEC.CORG = DETSEC.CORG AND MANSEC.CSECTANA = DETSEC.CSECTANA
		LEFT JOIN --MASTER_ESTIA..WRK_GROUPE_MANGES WGM
		(
					SELECT MANPROP.FK_TIERS, TMP.PK_GROUPE, TMP.FK_MANGES, TMP.CORG, TMP.CAGENCE, TMP.CGROUPE, TMP.CMANDAT
					FROM 
					(
					SELECT MANPAT.FK_GROUPE AS PK_GROUPE
							, MANPAT.CORG
							, MANPAT.CAGENCE
							, MANPAT.CGROUPE
							, MANGES.PK_MANGES AS FK_MANGES
							, MANGES.CMANDAT
							, RANK() OVER (PARTITION BY MANPAT.CORG, MANPAT.CAGENCE, MANPAT.CGROUPE ORDER BY MANPAT.CORG, MANPAT.CAGENCE, MANPAT.CGROUPE, ISNULL(MANGES.DATTRIB,'1900/01/01'), PK_MANPAT) AS RK
					FROM MASTER_ESTIA..ESTIA_MANGES AS MANGES
					INNER JOIN MASTER_ESTIA..ESTIA_MANPAT AS MANPAT
					ON MANPAT.CMANDAT = MANGES.CMANDAT
					WHERE MANPAT.FK_GROUPE IS NOT NULL 
					) AS TMP
					LEFT JOIN MASTER_ESTIA..ESTIA_MANPROP AS MANPROP
						ON MANPROP.CMANDAT = TMP.CMANDAT  
					WHERE TMP.RK = 1
					AND MANPROP.RK = 1	
		) WGM
		ON WGM.CORG = MANSEC.CORG AND WGM.CMANDAT = MANSEC.CMANDAT
		LEFT JOIN MASTER_ESTIA..ESTIA_GROUPE GROUPE
		ON GROUPE.PK_GROUPE = WGM.PK_GROUPE	
		LEFT JOIN MASTER_ESTIA..ESTIA_TIERS PROPRIETAIRE
		on PROPRIETAIRE.PK_TIERS = WGM.FK_TIERS 
		WHERE ECRITAUX.CORG = '11' 
		AND ECRITAUX.DATEC <= @DT_FIN
		--AND PROPRIETAIRE.PK_TIERS = @PK_PROPRIETAIRE
		AND PROPRIETAIRE.PK_TIERS IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_PROPRIETAIRE,','))
		AND GROUPE.PK_GROUPE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,','))
		--AND ECRITAUX.CTYPCOM = 'F'
		AND ECRITAUX.CTYPCOM IN ('F', 'T')
	) RES
	GROUP BY PK_PROPRIETAIRE
		 , PK_FOURNISSEUR
		 , CORG
		 , LB_SOCIETE
		 , CSECTANA
		 , NOM_PROPRIETAIRE
		 , ADRESSE_GROUPE
		 , CCATEG
		 , LCATEG
		 , CTYPCOM
		 , LTYPCOM
		 , CD_FOURNISSEUR
		 , NOM_FOURNISSEUR
		 , CUMUL_ANT_DEBIT
		 , CUMUL_ANT_CREDIT
)

SELECT PK_PROPRIETAIRE
		 , PK_FOURNISSEUR
		 , CORG
		 , LB_SOCIETE
		 , CSECTANA
		 , NOM_PROPRIETAIRE
		 , ADRESSE_GROUPE
		 , CCATEG
		 , LCATEG
		 , CTYPCOM
		 , LTYPCOM
		 , CD_FOURNISSEUR
		 , NOM_FOURNISSEUR
		 , CUMUL_ANT_DEBIT
		 , CUMUL_ANT_CREDIT
		 , CUMUL_PERIODE_DEBIT
		 , CUMUL_PERIODE_CREDIT
		 , CASE WHEN CUMUL_PERIODE_DEBIT > CUMUL_PERIODE_CREDIT THEN CUMUL_PERIODE_DEBIT - CUMUL_PERIODE_CREDIT ELSE 0 END AS SOLDE_DEBIT
		 , CASE WHEN CUMUL_PERIODE_DEBIT < CUMUL_PERIODE_CREDIT THEN CUMUL_PERIODE_CREDIT -  CUMUL_PERIODE_DEBIT ELSE 0 END AS SOLDE_CREDIT

FROM REQ


END