-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[BALANCE_AGEE] 
(
	@DT_DEF DATETIME,
	@PK_PROPRIETAIRE INT,
	@PK_IMMEUBLE NVARCHAR(MAX),
	@PK_LOCATAIRE NVARCHAR(MAX),
	@STATUT_LOCATAIRE NVARCHAR(MAX)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

WITH REQ AS
(
	SELECT
	   D_PROPRIETAIRE.PK_PROPRIETAIRE
	  ,D_PROPRIETAIRE.NOM_PROPRIETAIRE
	  ,D_IMMEUBLE.PK_IMMEUBLE
	  ,D_IMMEUBLE.NM_IMMEUBLE
	  ,D_IMMEUBLE.ADRLGN1 AS NOM_IMMEUBLE
	  ,D_BAIL.PK_BAIL
	  ,D_BAIL.CD_BAIL
	  ,D_BAIL.NM_BAIL
	  ,D_BAIL.DT_ENTREE
	  ,D_BAIL.DT_SORTIE
	  ,D_LOCATAIRE.PK_LOCATAIRE
	  ,DBO.INITCAP(D_LOCATAIRE.NOM_LOCATAIRE) AS NOM_LOCATAIRE
	  ,F_COMPTABILITE_LOCATAIRE.DT_TERME
	  ,SUM(F_COMPTABILITE_LOCATAIRE.MT_SOLDE) AS MT_SOLDE
	FROM
	  D_IMMEUBLE
	  RIGHT OUTER JOIN F_COMPTABILITE_LOCATAIRE
		ON D_IMMEUBLE.PK_IMMEUBLE = F_COMPTABILITE_LOCATAIRE.FK_IMMEUBLE
	  LEFT OUTER JOIN D_PROPRIETAIRE
	    ON D_PROPRIETAIRE.PK_PROPRIETAIRE = F_COMPTABILITE_LOCATAIRE.FK_PROPRIETAIRE
	  LEFT OUTER JOIN D_BAIL
		ON D_BAIL.PK_BAIL = F_COMPTABILITE_LOCATAIRE.FK_BAIL
	  LEFT OUTER JOIN D_LOCATAIRE
		ON D_LOCATAIRE.PK_LOCATAIRE = F_COMPTABILITE_LOCATAIRE.FK_LOCATAIRE
	  LEFT OUTER JOIN D_RUBRIQUE
		ON D_RUBRIQUE.PK_RUBRIQUE = F_COMPTABILITE_LOCATAIRE.FK_RUBRIQUE
	WHERE F_COMPTABILITE_LOCATAIRE.DT_COMPTABLE < @DT_DEF
	AND D_PROPRIETAIRE.PK_PROPRIETAIRE = @PK_PROPRIETAIRE
	AND D_IMMEUBLE.PK_IMMEUBLE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,',')) --(188)
	AND D_LOCATAIRE.PK_LOCATAIRE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_LOCATAIRE,',')) --(74)
	AND D_IMMEUBLE.CD_SOCIETE = '11'
	GROUP BY D_PROPRIETAIRE.PK_PROPRIETAIRE
	  ,D_PROPRIETAIRE.NOM_PROPRIETAIRE
	  ,D_IMMEUBLE.PK_IMMEUBLE
	  ,D_IMMEUBLE.CD_IMMEUBLE
	  ,D_IMMEUBLE.NM_IMMEUBLE
	  ,D_IMMEUBLE.ADRLGN1
	  ,D_BAIL.PK_BAIL
	  ,D_BAIL.CD_BAIL
	  ,D_BAIL.NM_BAIL
	  ,D_BAIL.DT_ENTREE
	  ,D_BAIL.DT_SORTIE
	  ,D_LOCATAIRE.PK_LOCATAIRE
	  ,D_LOCATAIRE.NOM_LOCATAIRE
	  ,F_COMPTABILITE_LOCATAIRE.DT_TERME
), REQ2 AS
(
	SELECT PK_PROPRIETAIRE
		 , NOM_PROPRIETAIRE
		 , PK_IMMEUBLE
		 , NM_IMMEUBLE
		 , NOM_IMMEUBLE
		 , PK_BAIL
		 , CD_BAIL
		 , DT_ENTREE
		 , DT_SORTIE
		 , PK_LOCATAIRE
		 , NOM_LOCATAIRE
		 , MT_SOLDE AS MT_IMPAYE
		 , CASE WHEN DT_SORTIE IS NULL OR DT_SORTIE > '20170301' THEN 'ACTIFS NON SOLDES' WHEN DT_SORTIE < '20170301' THEN 'SORTIS NON SOLDES' END ETAT
		 , CASE WHEN DATEDIFF(DAY, DT_TERME, CONVERT(DATETIME, '01/03/2017', 103)) <= 30 THEN MT_SOLDE ELSE 0 END AS INT_30
		 , CASE WHEN DATEDIFF(DAY, DT_TERME, CONVERT(DATETIME, '01/03/2017', 103)) BETWEEN 31 AND 60 THEN MT_SOLDE ELSE 0 END AS INT_31_60
		 , CASE WHEN DATEDIFF(DAY, DT_TERME, CONVERT(DATETIME, '01/03/2017', 103)) BETWEEN 61 AND 90 THEN MT_SOLDE ELSE 0 END AS INT_61_90
		 , CASE WHEN DATEDIFF(DAY, DT_TERME, CONVERT(DATETIME, '01/03/2017', 103)) BETWEEN 91 AND 180 THEN MT_SOLDE ELSE 0 END AS INT_91_180
		 , CASE WHEN DATEDIFF(DAY, DT_TERME, CONVERT(DATETIME, '01/03/2017', 103)) BETWEEN 181 AND 365 THEN MT_SOLDE ELSE 0 END AS INT_181_365
		 , CASE WHEN DATEDIFF(DAY, DT_TERME, CONVERT(DATETIME, '01/03/2017', 103)) > 365 THEN MT_SOLDE ELSE 0 END AS INT_365
		 , CASE WHEN MT_SOLDE < 0 THEN MT_SOLDE ELSE 0 END AS TROP_PERCU
	FROM REQ WHERE MT_SOLDE <> 0
)

SELECT PK_PROPRIETAIRE
	 , NOM_PROPRIETAIRE
	 , PK_IMMEUBLE
	 , NM_IMMEUBLE
	 , NOM_IMMEUBLE
	 , PK_BAIL
	 , CD_BAIL
	 , DT_ENTREE
	 , DT_SORTIE
	 , ETAT
	 , PK_LOCATAIRE
	 , NOM_LOCATAIRE
	 , SUM(MT_IMPAYE) AS MT_IMPAYE
	 , SUM(INT_30) AS INT_30
	 , SUM(INT_31_60) AS INT_31_60
	 , SUM(INT_61_90) AS INT_61_90
	 , SUM(INT_91_180) AS INT_91_180
	 , SUM(INT_181_365) AS INT_181_365
	 , SUM(INT_365) AS INT_365
	 , SUM(TROP_PERCU) AS TROP_PERCU
FROM REQ2
WHERE ETAT IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@STATUT_LOCATAIRE,','))
GROUP BY PK_PROPRIETAIRE
	   , NOM_PROPRIETAIRE
	   , PK_IMMEUBLE
	   , NM_IMMEUBLE
	   , NOM_IMMEUBLE
	   , PK_BAIL
	   , CD_BAIL
	   , PK_LOCATAIRE
	   , NOM_LOCATAIRE
	   , DT_ENTREE
	   , DT_SORTIE
	   , ETAT

END