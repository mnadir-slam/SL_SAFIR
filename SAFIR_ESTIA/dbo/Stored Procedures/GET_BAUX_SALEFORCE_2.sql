-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GET_BAUX_SALEFORCE_2]
(
	@DT_ANALYSE DATETIME
)
AS
BEGIN

	SET NOCOUNT ON;

CREATE TABLE #TRAIT_BAUX
(
	IDENTIFIANT_BAIL_DREAM		VARCHAR(255),
	IDENTIFIANT_DREAM_IMMEUBLE	VARCHAR(255),
	NM_IMMEUBLE					INT,
	ACTIF						VARCHAR(3),
	LOCATAIRE_PRINCIPAL			VARCHAR(255),
	SIREN						VARCHAR(100),
	RCS							VARCHAR(100),
	DT_EFFET					DATE,
	DT_FIN						DATE,
	LOYER_ANNUEL_FACIAL			NUMERIC(18,2),
	DERNIER_TERME_ANNUALISE		NUMERIC(18,2),
	VAL_SURF_BAIL				NUMERIC(18,2),
	VAL_SURF_BUR				NUMERIC(18,2),
	VAL_SURF_COM				NUMERIC(18,2),
	VAL_SURF_ARC				NUMERIC(18,2),
	VAL_SURF_HAB				NUMERIC(18,2),
	VAL_SURF_HOT				NUMERIC(18,2),
	VAL_SURF_ACT				NUMERIC(18,2),
	CD_STATUT					VARCHAR(1)
)

INSERT INTO #TRAIT_BAUX
SELECT IDENTIFIANT_BAIL_DREAM
     , IDENTIFIANT_DREAM_IMMEUBLE
	 , SRC.NM_IMMEUBLE
	 , ACTIF
	 , LOCATAIRE_PRINCIPAL
	 , SIREN
	 , RCS
	 , DT_EFFET
	 , DT_FIN
	 , SUM(LOYER_ANNUEL_FACIAL) LOYER_ANNUEL_FACIAL
	 , SUM(DERNIER_TERME_ANNUALISE) DERNIER_TERME_ANNUALISE
	 --, SUM(VAL_SURFACE) VAL_SURF_BAIL
	 , SUM(W.VAL_SURF_BUR + W.VAL_SURF_COM + W.VAL_SURF_ARC + W.VAL_SURF_HAB + W.VAL_SURF_HOT + W.VAL_SURF_ACT) VAL_SURF_BAIL
	 , SUM(VAL_SURF_BUR) VAL_SURF_BUR
	 , SUM(VAL_SURF_COM) VAL_SURF_COM
	 , SUM(VAL_SURF_ARC) VAL_SURF_ARC
	 , SUM(VAL_SURF_HAB) VAL_SURF_HAB
	 , SUM(VAL_SURF_HOT) VAL_SURF_HOT
	 , SUM(VAL_SURF_ACT) VAL_SURF_ACT
     , CD_STATUT
FROM
(
	SELECT F_ETAT_LOCATIF.FK_IMMEUBLE
	 , ISNULL(F_ETAT_LOCATIF.FK_BAIL, 99999) FK_BAIL
	 , F_ETAT_LOCATIF.FK_LOCATAIRE
     --, D_LOCATAIRE.PK_LOCATAIRE PK_TIERS
	 , CASE WHEN F_ETAT_LOCATIF.CD_STATUT = 'L' THEN
		CASE WHEN ABS(F_ETAT_LOCATIF.FK_LOCATAIRE) = 88888
		THEN 'BAIL999997' ELSE 'BAIL999999' END
		ELSE 'BAIL999998'  
		END AS IDENTIFIANT_BAIL_DREAM
	 , ISNULL(EASYFOLDER_BAUX.IDENTIFIANT_DREAM_IMMEUBLE, P.CD_IMMEUBLE_DREAM) as IDENTIFIANT_DREAM_IMMEUBLE
	 , D_IMMEUBLE.NM_IMMEUBLE
	 , 'Oui' ACTIF
	 , CASE WHEN F_ETAT_LOCATIF.CD_STATUT = 'L' THEN
	   CASE WHEN ABS(F_ETAT_LOCATIF.FK_LOCATAIRE) = 88888
	   THEN 'Gardien' ELSE 'Total '+P.CD_IMMEUBLE_DREAM END
	   ELSE 'Vacant '+P.CD_IMMEUBLE_DREAM  
	   END AS  LOCATAIRE_PRINCIPAL
	 , NULL AS SIREN
	 , NULL AS RCS
	 , NULL AS DT_EFFET
	 , NULL AS DT_FIN
     , SUM(ISNULL(CASE WHEN F_ETAT_LOCATIF.IND_LOT_PRINCIPAL = 'O ' THEN  VAL_FIN.MT_LOYER_ACTUEL ELSE 0 END, 0)) AS LOYER_ANNUEL_FACIAL
     , SUM(ISNULL(CASE WHEN F_ETAT_LOCATIF.IND_LOT_PRINCIPAL = 'O ' THEN  VAL_FIN.MT_LOYER_ACTUEL_FACTURABLE - ABS(VAL_FIN.MT_LOYER_FRANCHISE) - ABS(VAL_FIN.MT_PALIER) ELSE 0 END, 0)) AS DERNIER_TERME_ANNUALISE
	 , CASE WHEN F_ETAT_LOCATIF.CD_STATUT = 'L' THEN
	 CASE WHEN ABS(F_ETAT_LOCATIF.FK_LOCATAIRE) = 88888
	 THEN 1 ELSE 3 END
	 ELSE 2  
	 END AS ORDRE_TRI
	 , F_ETAT_LOCATIF.CD_STATUT
FROM
  F_ETAT_LOCATIF
  LEFT OUTER JOIN D_IMMEUBLE
    ON F_ETAT_LOCATIF.FK_IMMEUBLE = D_IMMEUBLE.PK_IMMEUBLE
  LEFT OUTER JOIN D_LOT
    ON F_ETAT_LOCATIF.PK_LOT = D_LOT.PK_LOT
  LEFT OUTER JOIN D_BAIL
    ON F_ETAT_LOCATIF.FK_BAIL = D_BAIL.PK_BAIL
  LEFT OUTER JOIN D_LOCATAIRE
    ON F_ETAT_LOCATIF.FK_LOCATAIRE = D_LOCATAIRE.PK_LOCATAIRE
  LEFT OUTER JOIN D_PROPRIETAIRE
    ON F_ETAT_LOCATIF.FK_PROPRIETAIRE = D_PROPRIETAIRE.PK_PROPRIETAIRE
  LEFT OUTER JOIN D_MANDAT_GERANCE
    ON F_ETAT_LOCATIF.FK_MANDAT_GERANCE = D_MANDAT_GERANCE.PK_MANDAT_GERANCE
  INNER JOIN MASTER_ESTIA..P_TRANSCO_IMMEUBLE_EASYFOLDER P
    ON D_IMMEUBLE.NM_IMMEUBLE = P.NM_IMMEUBLE_ESTIA
  LEFT JOIN
	(
		select * from f_GET_LEASE_FINANCIAL_DATA(@DT_ANALYSE)
	) VAL_FIN
	ON VAL_FIN.PK_BAIL = D_BAIL.PK_BAIL
  LEFT JOIN MASTER_ESTIA..L_INTERFACE_EASYFOLDER_BAUX EASYFOLDER_BAUX 
	ON EASYFOLDER_BAUX.IDENTIFIANT_ESTIA_IMMEUBLE = D_BAIL.NM_IMMEUBLE AND CAST(EASYFOLDER_BAUX.IDENTIFIANT_ESTIA_COMPTE as varchar(30)) + dbo.LPAD(EASYFOLDER_BAUX.NOBAIL_ESTIA, 2, '0') = D_BAIL.NM_BAIL
  INNER JOIN
	(
		SELECT DISTINCT IMMEUBLE.PK_IMMEUBLE
		FROM MASTER_ESTIA..L_INTERFACE_EASYFOLDER_BAUX AS EASYFOLDER_BAUX 
		LEFT JOIN SAFIR_ESTIA..D_BAIL BAIL
		ON BAIL.NM_IMMEUBLE = EASYFOLDER_BAUX.IDENTIFIANT_ESTIA_IMMEUBLE AND BAIL.NM_BAIL = CAST(EASYFOLDER_BAUX.IDENTIFIANT_ESTIA_COMPTE AS VARCHAR(30)) + DBO.LPAD(EASYFOLDER_BAUX.NOBAIL_ESTIA, 2, '0')
		LEFT JOIN SAFIR_ESTIA..D_IMMEUBLE IMMEUBLE
		ON IMMEUBLE.PK_IMMEUBLE = BAIL.FK_IMMEUBLE
		LEFT JOIN SAFIR_ESTIA..D_MANDAT_GERANCE DMG
		ON DMG.FK_IMMEUBLE = IMMEUBLE.PK_IMMEUBLE
		LEFT JOIN MASTER_ESTIA..P_TRANSCO_IMMEUBLE_EASYFOLDER P
		ON IMMEUBLE.NM_IMMEUBLE = P.NM_IMMEUBLE_ESTIA
		WHERE  (BAIL.CD_SOCIETE IS NULL OR BAIL.CD_SOCIETE = '11')
		AND DMG.IND_MANDAT_ACTIF = 'O'
	) SRC
	ON SRC.PK_IMMEUBLE = D_IMMEUBLE.PK_IMMEUBLE
WHERE
  F_ETAT_LOCATIF.PK_TEMPS = @DT_ANALYSE
  AND D_MANDAT_GERANCE.IND_MANDAT_ACTIF = 'O'
  AND CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),103), 103) BETWEEN D_LOT.DT_DEBUT_EN_SERVICE AND ISNULL(D_LOT.DT_FIN_EN_SERVICE,'2999/01/01')
GROUP BY F_ETAT_LOCATIF.FK_IMMEUBLE
	 , F_ETAT_LOCATIF.FK_BAIL
	 , F_ETAT_LOCATIF.FK_LOCATAIRE
	 , EASYFOLDER_BAUX.IDENTIFIANT_DREAM_IMMEUBLE
	 , P.CD_IMMEUBLE_DREAM
	 , D_IMMEUBLE.NM_IMMEUBLE
     , D_IMMEUBLE.SURFACE_TOTALE
	 , F_ETAT_LOCATIF.CD_STATUT
) SRC
LEFT JOIN
(
		SELECT FEL.PK_TEMPS, FEL.FK_IMMEUBLE, ISNULL(FEL.FK_BAIL, 99999) AS FK_BAIL
			, SUM(CASE WHEN CD_REG_USAGE = 'BUR' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_BUR
			, SUM(CASE WHEN CD_REG_USAGE = 'COM' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_COM
			, SUM(CASE WHEN CD_REG_USAGE = 'ARC' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ARC
			, SUM(CASE WHEN CD_REG_USAGE = 'HAB' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_HAB
			, SUM(CASE WHEN CD_REG_USAGE = 'HOT' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_HOT
			, SUM(CASE WHEN CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ACT
		FROM F_ETAT_LOCATIF FEL INNER JOIN
		(
			SELECT L.PK_LOT, L.NM_LOT, L.CD_USAGE, L.CD_REG_USAGE, L.LB_REG_USAGE, L.LB_USAGE, VAL_SURFACE_REELLE  
			FROM D_LOT L
			WHERE VAL_SURFACE_REELLE > 0
		) LOT
		ON LOT.PK_LOT = FEL.PK_LOT
		WHERE FEL.PK_TEMPS = @DT_ANALYSE
		GROUP BY FEL.PK_TEMPS, FEL.FK_IMMEUBLE, FEL.FK_BAIL
) W
ON W.FK_IMMEUBLE = SRC.FK_IMMEUBLE AND ABS(W.FK_BAIL) = ABS(SRC.FK_BAIL)
GROUP BY SRC.NM_IMMEUBLE
	 , IDENTIFIANT_BAIL_DREAM
     , IDENTIFIANT_DREAM_IMMEUBLE
	 , ACTIF
	 , LOCATAIRE_PRINCIPAL
	 , SIREN
	 , RCS
	 , DT_EFFET
	 , DT_FIN
     , CD_STATUT
  , ORDRE_TRI
--ORDER BY
--   NM_IMMEUBLE
--  , ORDRE_TRI

--UPDATE #TRAIT_BAUX
--SET VAL_SURF_BAIL = I.SURFACE_TOTALE 
--FROM #TRAIT_BAUX T
--LEFT JOIN (SELECT PK_IMMEUBLE, NM_IMMEUBLE, SURFACE_TOTALE FROM D_IMMEUBLE WHERE CD_SOCIETE = '11') I 
--ON I.NM_IMMEUBLE = T.NM_IMMEUBLE
--WHERE T.LOCATAIRE_PRINCIPAL like 'Total%'

UPDATE #TRAIT_BAUX
SET VAL_SURF_BAIL = I.SURFACE_TOTALE, 
	VAL_SURF_BUR = T2.VAL_SURF_BUR,
	VAL_SURF_COM = T2.VAL_SURF_COM,
	VAL_SURF_ARC = T2.VAL_SURF_ARC,
	VAL_SURF_HAB = T2.VAL_SURF_HAB,
	VAL_SURF_HOT = T2.VAL_SURF_HOT,
	VAL_SURF_ACT = T2.VAL_SURF_ACT
FROM #TRAIT_BAUX T
LEFT JOIN (SELECT PK_IMMEUBLE, NM_IMMEUBLE, SURFACE_TOTALE FROM D_IMMEUBLE WHERE CD_SOCIETE = '11') I 
ON I.NM_IMMEUBLE = T.NM_IMMEUBLE
LEFT JOIN 
(
	SELECT NM_IMMEUBLE
		  , SUM(VAL_SURF_BUR) VAL_SURF_BUR
		  , SUM(VAL_SURF_COM) VAL_SURF_COM
		  , SUM(VAL_SURF_ARC) VAL_SURF_ARC
		  , SUM(VAL_SURF_HAB) VAL_SURF_HAB
		  , SUM(VAL_SURF_HOT) VAL_SURF_HOT
		  , SUM(VAL_SURF_ACT) VAL_SURF_ACT 
	FROM #TRAIT_BAUX
	GROUP BY NM_IMMEUBLE
) T2
ON T2.NM_IMMEUBLE = T.NM_IMMEUBLE
WHERE T.LOCATAIRE_PRINCIPAL like 'Total%'

INSERT INTO #TRAIT_BAUX (IDENTIFIANT_BAIL_DREAM, IDENTIFIANT_DREAM_IMMEUBLE, NM_IMMEUBLE, ACTIF, LOCATAIRE_PRINCIPAL)
SELECT DISTINCT 'BAIL999998', B.IDENTIFIANT_DREAM_IMMEUBLE, B.NM_IMMEUBLE, B.ACTIF, 'Vacant '+B.IDENTIFIANT_DREAM_IMMEUBLE 
FROM #TRAIT_BAUX B
WHERE NOT EXISTS
(
  SELECT * FROM #TRAIT_BAUX
  WHERE #TRAIT_BAUX.IDENTIFIANT_DREAM_IMMEUBLE = B.IDENTIFIANT_DREAM_IMMEUBLE AND #TRAIT_BAUX.LOCATAIRE_PRINCIPAL = 'Vacant '+B.IDENTIFIANT_DREAM_IMMEUBLE
)

select IDENTIFIANT_BAIL_DREAM
	 , IDENTIFIANT_DREAM_IMMEUBLE
	 , NM_IMMEUBLE
	 , ACTIF
	 , LOCATAIRE_PRINCIPAL
	 , SIREN
	 , RCS
	 , DT_EFFET
	 , DT_FIN
	 , LOYER_ANNUEL_FACIAL
	 , DERNIER_TERME_ANNUALISE
	 , VAL_SURF_BAIL
	 , VAL_SURF_BUR
	 , VAL_SURF_COM
	 , VAL_SURF_ARC
	 , VAL_SURF_HAB
	 , VAL_SURF_HOT
	 , VAL_SURF_ACT
from
(
	select EASYFOLDER_BAUX.IDENTIFIANT_BAIL_DREAM
		 , ISNULL(EASYFOLDER_BAUX.IDENTIFIANT_DREAM_IMMEUBLE, P.CD_IMMEUBLE_DREAM) as IDENTIFIANT_DREAM_IMMEUBLE
		 , IMMEUBLE.NM_IMMEUBLE
		 , case when BAIL.DT_SORTIE IS NULL then 'Oui' else 'Non' end as ACTIF
		 , TIERS.LTIERS AS LOCATAIRE_PRINCIPAL
		 , ISNULL(case when len(RCS_COMPLETE.SIREN) = 8 then dbo.LPAD(RCS_COMPLETE.SIREN, 10, '0') else RCS_COMPLETE.SIREN end, case when TIERS.POUM = 'P' then 'Personne physique' else LEFT(TIERS.SIRET, 9) end) as SIREN
		 , TIERS.RCS
		 , convert(varchar(10), EASYFOLDER_BAUX.DT_EFFET, 103) as DT_EFFET
		 , convert(VARCHAR(10), EASYFOLDER_BAUX.DT_FIN, 103) as DT_FIN
		 , VAL_FIN.MT_LOYER_ACTUEL AS LOYER_ANNUEL_FACIAL
		 , VAL_FIN.MT_LOYER_ACTUEL_FACTURABLE - ABS(VAL_FIN.MT_LOYER_FRANCHISE) - ABS(VAL_FIN.MT_PALIER) as DERNIER_TERME_ANNUALISE
		 , CALCUL_SURFACE.VAL_SURF_BUR + CALCUL_SURFACE.VAL_SURF_COM + CALCUL_SURFACE.VAL_SURF_ACT + CALCUL_SURFACE.VAL_SURF_ARC + CALCUL_SURFACE.VAL_SURF_HAB + CALCUL_SURFACE.VAL_SURF_HOT AS VAL_SURF_BAIL
		 , CALCUL_SURFACE.VAL_SURF_BUR
		 , CALCUL_SURFACE.VAL_SURF_COM
		 , CALCUL_SURFACE.VAL_SURF_ARC
		 , CALCUL_SURFACE.VAL_SURF_HAB
		 , CALCUL_SURFACE.VAL_SURF_HOT
		 , CALCUL_SURFACE.VAL_SURF_ACT
	from MASTER_ESTIA..L_INTERFACE_EASYFOLDER_BAUX as EASYFOLDER_BAUX 
	left join SAFIR_ESTIA..D_BAIL BAIL
	on BAIL.NM_IMMEUBLE = EASYFOLDER_BAUX.IDENTIFIANT_ESTIA_IMMEUBLE and BAIL.NM_BAIL = cast(EASYFOLDER_BAUX.IDENTIFIANT_ESTIA_COMPTE as varchar(30)) + dbo.LPAD(EASYFOLDER_BAUX.NOBAIL_ESTIA, 2, '0')
	inner join (select FK_BAIL from SAFIR_ESTIA..F_ETAT_LOCATIF where PK_TEMPS = @DT_ANALYSE) FEL
	on FEL.FK_BAIL = BAIL.PK_BAIL
	left join MASTER_ESTIA..ESTIA_TIERS TIERS
	on TIERS.PK_TIERS = BAIL.FK_LOCATAIRE
	left join
	(
		select * from f_GET_LEASE_VALUES(@DT_ANALYSE)
	) CALCUL_SURFACE
	on CALCUL_SURFACE.FK_BAIL = BAIL.PK_BAIL
	left join SAFIR_ESTIA..D_IMMEUBLE IMMEUBLE
	on IMMEUBLE.PK_IMMEUBLE = BAIL.FK_IMMEUBLE
	left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
	on DMG.FK_IMMEUBLE = IMMEUBLE.PK_IMMEUBLE
	left join
	(
		select * from f_GET_LEASE_FINANCIAL_DATA(@DT_ANALYSE)
	) VAL_FIN
	on VAL_FIN.PK_BAIL = BAIL.PK_BAIL
	left join MASTER_ESTIA..P_TRANSCO_IMMEUBLE_EASYFOLDER P
	on IMMEUBLE.NM_IMMEUBLE = P.NM_IMMEUBLE_ESTIA
	left join RCS_COMPLETE
	on RCS_COMPLETE.IDENTIFIANT_BAIL_DREAM = EASYFOLDER_BAUX.IDENTIFIANT_BAIL_DREAM
	where  (BAIL.CD_SOCIETE IS NULL OR BAIL.CD_SOCIETE = '11')
	and DMG.IND_MANDAT_ACTIF = 'O'
	union
	select IDENTIFIANT_BAIL_DREAM
		 , IDENTIFIANT_DREAM_IMMEUBLE
		 , NM_IMMEUBLE
		 , ACTIF
		 , LOCATAIRE_PRINCIPAL
		 , SIREN
		 , RCS
		 , DT_EFFET
		 , DT_FIN
		 , LOYER_ANNUEL_FACIAL
		 , DERNIER_TERME_ANNUALISE
		 , VAL_SURF_BAIL
		 , VAL_SURF_BUR
		 , VAL_SURF_COM
		 , VAL_SURF_ARC
		 , VAL_SURF_HAB
		 , VAL_SURF_HOT
		 , VAL_SURF_ACT
	from #TRAIT_BAUX
) SRC
order by IDENTIFIANT_DREAM_IMMEUBLE, IDENTIFIANT_BAIL_DREAM

DROP TABLE #TRAIT_BAUX

END