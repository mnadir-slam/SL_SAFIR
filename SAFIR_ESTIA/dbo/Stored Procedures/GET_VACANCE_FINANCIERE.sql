-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GET_VACANCE_FINANCIERE]
(
	@DT_ANALYSE DATETIME
)
AS
BEGIN

	SET NOCOUNT ON;

CREATE TABLE #VAL_FINANCIERES
(
	PK_GROUPE				INT NOT NULL,
	PK_BAIL                 INT NOT NULL,
	MT_LOYER_ACTUEL         NUMERIC(18, 2) NULL,
	MT_LOYER_FRANCHISE      NUMERIC(18, 2) NULL,
	MT_PALIER				NUMERIC(18, 2) NULL
)

insert into #VAL_FINANCIERES(PK_GROUPE, PK_BAIL, MT_LOYER_ACTUEL, MT_LOYER_FRANCHISE, MT_PALIER)
select PR.PK_GROUPE, PR.PK_BAIL,
		ISNULL(PR.MT_LOYER_ACTUEL, 0) AS MT_LOYER_ACTUEL,
		ISNULL(PR.MT_LOYER_FRANCHISE, 0) AS MT_LOYER_FRANCHISE,
		ISNULL(PR.MT_PALIER, 0) AS MT_PALIER
from 
(
	select LOCATION.FK_GROUPE AS PK_GROUPE, LOCATION.FK_BAIL AS PK_BAIL
			, LOCATION.PERIOD AS NB_MOIS_FRQ
			, SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N') THEN HQLOCAT.NB 
					   WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'O' OR PSRE.IND_CALCUL_PALIER = 'O') THEN 0 ELSE 0 END) AS MT_LOYER_ACTUEL
			, SUM(CASE WHEN PSRE.IND_CALCUL_FRANCHISE = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_FRANCHISE
			, SUM(CASE WHEN PSRE.IND_CALCUL_PALIER = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_PALIER
	from MASTER_ESTIA..ESTIA_LOCATION AS LOCATION
		inner join MASTER_ESTIA..ESTIA_HQLOCAT AS HQLOCAT
			on HQLOCAT.CORG = LOCATION.CORG
			and HQLOCAT.CAGENCE = LOCATION.CAGENCE
			and HQLOCAT.CGROUPE = LOCATION.CGROUPE
			and HQLOCAT.CIMMEUB = LOCATION.CIMMEUB
			and HQLOCAT.CLOCAL = LOCATION.CLOCAL
			and HQLOCAT.OCC = LOCATION.OCC
		left join MASTER_ESTIA..P_RUBRIQUE AS P
			on P.CD_RUBRIQUE = HQLOCAT.CRUB
		left join MASTER_ESTIA..P_SOUS_REG_ELTFAC AS PSRE
			on PSRE.CD_SOUS_REG_ELTFAC = P.CD_SOUS_REG_ELTFAC
	where LOCATION.FK_BAIL IS NOT NULL
	and P.CD_SOUS_REG_ELTFAC not in ('LOR')
	and LOCATION.DATENTQUIT <= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
	and ISNULL(LOCATION.DATSORQUIT, '29990101') > DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
	and HQLOCAT.DDEB <= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
	and HQLOCAT.DFIN > DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
	group by LOCATION.FK_GROUPE, LOCATION.FK_BAIL, LOCATION.PERIOD
) AS PR

truncate table WRK_TRAIT_LOTS

-- BAUX STABLES DANS LA PERIODE
insert into WRK_TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, NOM_LOCATAIRE, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_OCCUPATION, DT_FIN_OCCUPATION, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, LOYER_FACIAL, MT_FRANCHISE_PALIER, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'GARDIEN' else WHL.LTIERS end as NOM_LOCATAIRE
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, DB.DT_ENTREE
		, DB.DT_SORTIE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_OCCUPATION_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_OCCUPATION_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, #VAL_FINANCIERES.MT_LOYER_ACTUEL as LOYER_FACIAL
		, ISNULL(ABS(#VAL_FINANCIERES.MT_LOYER_FRANCHISE) + ABS(#VAL_FINANCIERES.MT_PALIER), 0) AS MT_FRANCHISE_PALIER
		, 1 as CD_CAS
		, 'Bail stable' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
left join #VAL_FINANCIERES
on #VAL_FINANCIERES.PK_BAIL = DB.PK_BAIL
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'L' or L.CD_TYPE_LOT = 'LOG')
and WHL.DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
and ISNULL(WHL.DT_FIN_RAT, '29990101') > DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end

-- BAUX DEBUTES AVANT LA PERIODE ET TERMINES DANS LA PERIODE
insert into WRK_TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, NOM_LOCATAIRE, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_OCCUPATION, DT_FIN_OCCUPATION, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, LOYER_FACIAL, MT_FRANCHISE_PALIER, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'GARDIEN' else WHL.LTIERS end as NOM_LOCATAIRE
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, DB.DT_ENTREE
		, DB.DT_SORTIE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_OCCUPATION_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_OCCUPATION_TRIM	 
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, #VAL_FINANCIERES.MT_LOYER_ACTUEL AS LOYER_FACIAL
		, ISNULL(ABS(#VAL_FINANCIERES.MT_LOYER_FRANCHISE) + ABS(#VAL_FINANCIERES.MT_PALIER), 0) AS MT_FRANCHISE_PALIER
		, 2 as CD_CAS
		, 'Bail terminé dans la période' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
left join #VAL_FINANCIERES
on #VAL_FINANCIERES.PK_BAIL = DB.PK_BAIL
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'L' or L.CD_TYPE_LOT = 'LOG')
and WHL.DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
and ISNULL(WHL.DT_FIN_RAT, '29990101') between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- BAUX DEBUTES ET TERMINES DANS LA PERIODE 
insert into WRK_TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, NOM_LOCATAIRE, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_OCCUPATION, DT_FIN_OCCUPATION, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, LOYER_FACIAL, MT_FRANCHISE_PALIER, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'GARDIEN' else WHL.LTIERS end as NOM_LOCATAIRE
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, DB.DT_ENTREE
		, DB.DT_SORTIE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_OCCUPATION_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_OCCUPATION_TRIM	 
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, #VAL_FINANCIERES.MT_LOYER_ACTUEL AS LOYER_FACIAL
		, ISNULL(ABS(#VAL_FINANCIERES.MT_LOYER_FRANCHISE) + ABS(#VAL_FINANCIERES.MT_PALIER), 0) AS MT_FRANCHISE_PALIER
		, 3 as CD_CAS
		, 'Bail débuté et terminé dans la période' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
left join #VAL_FINANCIERES
on #VAL_FINANCIERES.PK_BAIL = DB.PK_BAIL
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'L' or L.CD_TYPE_LOT = 'LOG')
and WHL.DT_DEBUT_RAT between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and ISNULL(WHL.DT_FIN_RAT, '29990101') between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- BAUX DEBUTES DANS LA PERIODE ET TERMINES APRES LA PERIODE 
insert into WRK_TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, NOM_LOCATAIRE, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_OCCUPATION, DT_FIN_OCCUPATION, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, LOYER_FACIAL, MT_FRANCHISE_PALIER, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'GARDIEN' else WHL.LTIERS end as NOM_LOCATAIRE
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, DB.DT_ENTREE
		, DB.DT_SORTIE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_OCCUPATION_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_OCCUPATION_TRIM	 
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, #VAL_FINANCIERES.MT_LOYER_ACTUEL AS LOYER_FACIAL
		, ISNULL(ABS(#VAL_FINANCIERES.MT_LOYER_FRANCHISE) + ABS(#VAL_FINANCIERES.MT_PALIER), 0) AS MT_FRANCHISE_PALIER
		, 4 as CD_CAS
		, 'Bail débuté dans la période' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
left join #VAL_FINANCIERES
on #VAL_FINANCIERES.PK_BAIL = DB.PK_BAIL
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'L' or L.CD_TYPE_LOT = 'LOG')
and WHL.DT_DEBUT_RAT between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and ISNULL(WHL.DT_FIN_RAT, '29990101') > DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- LOTS VACANTS STABLES DANS LA PERIODE 
insert into WRK_TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_VACANCE, DT_FIN_VACANCE, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VLM_BUREAUX, VLM_COMMERCES, VLM_ARCHIVES, VLM_HABITATION, VLM_ACTIVITE, VLM_PKG_EXT, VLM_PKG_INT, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_FIN_RAT
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_VACANCE_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_VACANCE_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, ISNULL(P_IMMEUBLE_VLM.VLM_BUREAUX, 0)  VLM_BUREAUX
		, ISNULL(P_IMMEUBLE_VLM.VLM_COMMERCES, 0) VLM_COMMERCES
		, ISNULL(P_IMMEUBLE_VLM.VLM_ARCHIVES, 0) VLM_ARCHIVES
		, ISNULL(P_IMMEUBLE_VLM.VLM_HABITATION, 0) VLM_HABITATION
		, ISNULL(P_IMMEUBLE_VLM.VLM_ACTIVITE, 0) VLM_ACTIVITE
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_EXT, 0) VLM_PKG_EXT
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_INT, 0) VLM_PKG_INT
		, 5 as CD_CAS
		, 'Lot vacant' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
left join MASTER_ESTIA..P_IMMEUBLE_VLM
on P_IMMEUBLE_VLM.CD_IMMEUBLE_ESTIA = WHL.CGROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'V' and L.CD_TYPE_LOT <> 'LOG')
and WHL.DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
and ISNULL(WHL.DT_FIN_RAT, '29990101') > DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- VACANTS DEBUTES AVANT LA PERIODE ET TERMINES DANS LA PERIODE
insert into WRK_TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_VACANCE, DT_FIN_VACANCE, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VLM_BUREAUX, VLM_COMMERCES, VLM_ARCHIVES, VLM_HABITATION, VLM_ACTIVITE, VLM_PKG_EXT, VLM_PKG_INT, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_DEBUT_RAT as DT_DEBUT_VACANCE
		, WHL.DT_FIN_RAT as DT_FIN_VACANCE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_VACANCE_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_VACANCE_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, ISNULL(P_IMMEUBLE_VLM.VLM_BUREAUX, 0)  VLM_BUREAUX
		, ISNULL(P_IMMEUBLE_VLM.VLM_COMMERCES, 0) VLM_COMMERCES
		, ISNULL(P_IMMEUBLE_VLM.VLM_ARCHIVES, 0) VLM_ARCHIVES
		, ISNULL(P_IMMEUBLE_VLM.VLM_HABITATION, 0) VLM_HABITATION
		, ISNULL(P_IMMEUBLE_VLM.VLM_ACTIVITE, 0) VLM_ACTIVITE
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_EXT, 0) VLM_PKG_EXT
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_INT, 0) VLM_PKG_INT
		, 5 as CD_CAS
		, 'Lot vacant' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
left join MASTER_ESTIA..P_IMMEUBLE_VLM
on P_IMMEUBLE_VLM.CD_IMMEUBLE_ESTIA = WHL.CGROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'V' and L.CD_TYPE_LOT <> 'LOG')
and WHL.DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
and ISNULL(WHL.DT_FIN_RAT, '29990101') between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- LOTS VACANTS DEBUTES ET TERMINES DANS LA PERIODE 
insert into WRK_TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_VACANCE, DT_FIN_VACANCE, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VLM_BUREAUX, VLM_COMMERCES, VLM_ARCHIVES, VLM_HABITATION, VLM_ACTIVITE, VLM_PKG_EXT, VLM_PKG_INT, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_DEBUT_RAT as DT_DEBUT_VACANCE
		, WHL.DT_FIN_RAT as DT_FIN_VACANCE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_VACANCE_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_VACANCE_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, ISNULL(P_IMMEUBLE_VLM.VLM_BUREAUX, 0)  VLM_BUREAUX
		, ISNULL(P_IMMEUBLE_VLM.VLM_COMMERCES, 0) VLM_COMMERCES
		, ISNULL(P_IMMEUBLE_VLM.VLM_ARCHIVES, 0) VLM_ARCHIVES
		, ISNULL(P_IMMEUBLE_VLM.VLM_HABITATION, 0) VLM_HABITATION
		, ISNULL(P_IMMEUBLE_VLM.VLM_ACTIVITE, 0) VLM_ACTIVITE
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_EXT, 0) VLM_PKG_EXT
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_INT, 0) VLM_PKG_INT
		, 5 as CD_CAS
		, 'Lot vacant' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
left join MASTER_ESTIA..P_IMMEUBLE_VLM
on P_IMMEUBLE_VLM.CD_IMMEUBLE_ESTIA = WHL.CGROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'V' and L.CD_TYPE_LOT <> 'LOG')
and WHL.DT_DEBUT_RAT between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and ISNULL(WHL.DT_FIN_RAT, '29990101') between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- LOTS VACANTS DEBUTES DANS LA PERIODE ET TERMINES APRES LA PERIODE 
insert into WRK_TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_VACANCE, DT_FIN_VACANCE, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VLM_BUREAUX, VLM_COMMERCES, VLM_ARCHIVES, VLM_HABITATION, VLM_ACTIVITE, VLM_PKG_EXT, VLM_PKG_INT, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_DEBUT_RAT as DT_DEBUT_VACANCE
		, WHL.DT_FIN_RAT as DT_FIN_VACANCE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_VACANCE_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_VACANCE_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, ISNULL(P_IMMEUBLE_VLM.VLM_BUREAUX, 0)  VLM_BUREAUX
		, ISNULL(P_IMMEUBLE_VLM.VLM_COMMERCES, 0) VLM_COMMERCES
		, ISNULL(P_IMMEUBLE_VLM.VLM_ARCHIVES, 0) VLM_ARCHIVES
		, ISNULL(P_IMMEUBLE_VLM.VLM_HABITATION, 0) VLM_HABITATION
		, ISNULL(P_IMMEUBLE_VLM.VLM_ACTIVITE, 0) VLM_ACTIVITE
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_EXT, 0) VLM_PKG_EXT
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_INT, 0) VLM_PKG_INT
		, 5 as CD_CAS
		, 'Lot vacant' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
left join MASTER_ESTIA..P_IMMEUBLE_VLM
on P_IMMEUBLE_VLM.CD_IMMEUBLE_ESTIA = WHL.CGROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'V' and L.CD_TYPE_LOT <> 'LOG')
and WHL.DT_DEBUT_RAT between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and ISNULL(WHL.DT_FIN_RAT, '29990101') > DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- maj du nm_immeuble_dream
update WRK_TRAIT_LOTS
set CD_IMMEUBLE_DREAM = PIV.CD_IMMEUBLE_DREAM
from WRK_TRAIT_LOTS
left join MASTER_ESTIA..P_IMMEUBLE_VLM PIV
on PIV.CD_IMMEUBLE_ESTIA = WRK_TRAIT_LOTS.CGROUPE


-- maj du nombre de jour d'occupation, nombre de jours de vacance et nombre dejours dans le trimestre
update WRK_TRAIT_LOTS
set NB_JOURS_TRIM				= DATEDIFF(DAY, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0), DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))),
	NB_JOURS_OCCUPATION_TRIM	= ISNULL(DATEDIFF(DAY, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM), 0),
	NB_JOURS_VACANCE_TRIM		= ISNULL(DATEDIFF(DAY, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM), 0)


-- maj du loyer facial trimestriel et du loyer trimestriel quittance 
update WRK_TRAIT_LOTS
set LOYER_FACIAL_TRIMESTRIEL	= CONVERT(NUMERIC(18,2), case when NB_JOURS_TRIM > 0 then ((LOYER_FACIAL/4)*NB_JOURS_OCCUPATION_TRIM)/(NB_JOURS_TRIM) else 0 end),
	LOYER_TRIMESTRIEL_QUITTANCE	= CONVERT(NUMERIC(18,2), case when NB_JOURS_TRIM > 0 then (((LOYER_FACIAL/4)*NB_JOURS_OCCUPATION_TRIM)/NB_JOURS_TRIM) - (((MT_FRANCHISE_PALIER/4)*NB_JOURS_OCCUPATION_TRIM)/NB_JOURS_TRIM) else 0 end)


-- mise à jour des VLM proratisées
update WRK_TRAIT_LOTS
set VLM_BUREAUX_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'BUR' then case when NB_JOURS_TRIM > 0 then VAL_SURF_BUR * (((VLM_BUREAUX/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end),
	VLM_COMMERCES_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'COM' then case when NB_JOURS_TRIM > 0 then VAL_SURF_COM * (((VLM_COMMERCES/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end),
	VLM_ARCHIVES_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'ARC' then case when NB_JOURS_TRIM > 0 then VAL_SURF_ARC * (((VLM_ARCHIVES/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end), 
	VLM_HABITATION_PRORATISE	= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'HAB' then case when NB_JOURS_TRIM > 0 then VAL_SURF_HAB * (((VLM_HABITATION/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end), 
	VLM_ACTIVITE_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'ACT' then case when NB_JOURS_TRIM > 0 then VAL_SURF_ACT * (((VLM_ACTIVITE/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end), 
	VLM_PKG_EXT_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'PKE' then case when NB_JOURS_TRIM > 0 then ((VLM_PKG_EXT/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM) else 0 end else 0 end), 
	VLM_PKG_INT_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'PKI' then case when NB_JOURS_TRIM > 0 then ((VLM_PKG_INT/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM) else 0 end else 0 end)


-- mise à jour des VLM
update WRK_TRAIT_LOTS
set VLM = ISNULL(VLM_BUREAUX_PRORATISE + VLM_COMMERCES_PRORATISE + VLM_ARCHIVES_PRORATISE + VLM_HABITATION_PRORATISE + VLM_ACTIVITE_PRORATISE + VLM_PKG_EXT_PRORATISE + VLM_PKG_INT_PRORATISE, 0)


END