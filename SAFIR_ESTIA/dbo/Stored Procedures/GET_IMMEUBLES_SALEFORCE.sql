-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE GET_IMMEUBLES_SALEFORCE
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

WITH REQ AS
(
	SELECT GROUPE.PK_GROUPE
		 , GROUPE.CGROUPE
		 , GROUPE.LGROUPE
		 , MT_LOYER_ACTUEL
		 , MT_LOYER_FRANCHISE
		 , MT_PALIER
	FROM
	(
		SELECT LOCATION.FK_GROUPE AS PK_GROUPE,
			SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_ACTUEL,
			SUM(CASE WHEN PSRE.IND_CALCUL_FRANCHISE = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_FRANCHISE,
			SUM(CASE WHEN PSRE.IND_CALCUL_PALIER = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_PALIER
		FROM MASTER_ESTIA..ESTIA_LOCATION AS LOCATION
			 INNER JOIN MASTER_ESTIA..ESTIA_HQLOCAT AS HQLOCAT
				   ON HQLOCAT.CORG = LOCATION.CORG
				   AND HQLOCAT.CAGENCE = LOCATION.CAGENCE
				   AND HQLOCAT.CGROUPE = LOCATION.CGROUPE
				   AND HQLOCAT.CIMMEUB = LOCATION.CIMMEUB
				   AND HQLOCAT.CLOCAL = LOCATION.CLOCAL
				   AND HQLOCAT.OCC = LOCATION.OCC
			 INNER JOIN MASTER_ESTIA..P_RUBRIQUE AS P
				   ON P.CD_RUBRIQUE = HQLOCAT.CRUB
			 INNER JOIN MASTER_ESTIA..P_SOUS_REG_ELTFAC AS PSRE
				   ON PSRE.CD_SOUS_REG_ELTFAC = P.CD_SOUS_REG_ELTFAC
			 INNER JOIN MASTER_ESTIA..V_D_MANDAT_GERANCE MANDAT
			 ON MANDAT.FK_IMMEUBLE = LOCATION.FK_GROUPE
		WHERE GETDATE() BETWEEN HQLOCAT.DDEB AND ISNULL(HQLOCAT.DFIN, '2999/01/01')
		AND LOCATION.FK_BAIL IS NOT NULL
		AND LOCATION.CORG = '11'
		AND (LOCATION.DATSORQUIT IS NULL OR LOCATION.DATSORQUIT > GETDATE())
		AND IND_MANDAT_ACTIF = 'O'
		GROUP BY LOCATION.FK_GROUPE
	) REQ
	LEFT JOIN MASTER_ESTIA..ESTIA_GROUPE GROUPE
	ON GROUPE.PK_GROUPE = REQ.PK_GROUPE
	WHERE MT_LOYER_ACTUEL > 0
),
REQ1 AS
(
	SELECT GROUPE.PK_GROUPE, GROUPE.CGROUPE, GROUPE.LGROUPE, CD_COR_TYPE_LOT_RUBRIQUE CD_USAGE_RUBRIQUE, MT_LOYER_ACTUEL, MT_LOYER_FRANCHISE, MT_PALIER
	FROM
	(
		SELECT LOCATION.FK_GROUPE AS PK_GROUPE,
			   ISNULL(P.CD_COR_TYPE_LOT_RUBRIQUE,'$$$') AS CD_COR_TYPE_LOT_RUBRIQUE,
			   SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_ACTUEL,
			   SUM(CASE WHEN PSRE.IND_CALCUL_FRANCHISE = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_FRANCHISE,
			   SUM(CASE WHEN PSRE.IND_CALCUL_PALIER = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_PALIER
		FROM MASTER_ESTIA..ESTIA_LOCATION AS LOCATION
			 INNER JOIN MASTER_ESTIA..ESTIA_HQLOCAT AS HQLOCAT
				   ON HQLOCAT.CORG = LOCATION.CORG
				   AND HQLOCAT.CAGENCE = LOCATION.CAGENCE
				   AND HQLOCAT.CGROUPE = LOCATION.CGROUPE
				   AND HQLOCAT.CIMMEUB = LOCATION.CIMMEUB
				   AND HQLOCAT.CLOCAL = LOCATION.CLOCAL
				   AND HQLOCAT.OCC = LOCATION.OCC
			 INNER JOIN MASTER_ESTIA..P_RUBRIQUE AS P
				   ON P.CD_RUBRIQUE = HQLOCAT.CRUB
			 INNER JOIN MASTER_ESTIA..P_SOUS_REG_ELTFAC AS PSRE
				   ON PSRE.CD_SOUS_REG_ELTFAC = P.CD_SOUS_REG_ELTFAC
			 INNER JOIN MASTER_ESTIA..ESTIA_GROUPE GROUPE
			 ON GROUPE.PK_GROUPE = LOCATION.FK_GROUPE
			 INNER JOIN MASTER_ESTIA..V_D_MANDAT_GERANCE MANDAT
			 ON MANDAT.FK_IMMEUBLE = GROUPE.PK_GROUPE
		WHERE GETDATE() BETWEEN HQLOCAT.DDEB AND ISNULL(HQLOCAT.DFIN, '2999/01/01')
		AND LOCATION.FK_BAIL IS NOT NULL
		AND LOCATION.CORG = '11'
		AND (LOCATION.DATSORQUIT IS NULL OR LOCATION.DATSORQUIT > GETDATE())
		AND IND_MANDAT_ACTIF = 'O'
		GROUP BY LOCATION.FK_GROUPE, P.CD_COR_TYPE_LOT_RUBRIQUE
	) REQ
	LEFT JOIN MASTER_ESTIA..ESTIA_GROUPE GROUPE
	ON GROUPE.PK_GROUPE = REQ.PK_GROUPE
	WHERE MT_LOYER_ACTUEL > 0
),
REQ2 AS
(	SELECT PK_GROUPE
	 , CGROUPE
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), MT_LOYER_ACTUEL)), 0) LOYER_ANNUALISE_ACTUEL__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'ACT' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_ACTIVIT__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'ARC' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_ARCHIVES__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'AUT' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_AUTRE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'BUR' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_BUREAUX__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'COM' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_COMMERCE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'ETD' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_R_SIDENCE_ETUDIANTE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'HAB' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_HABITABLE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'IND' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_INDUSTRIELLE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'LOG' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_LOGISTIQUE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'MIX' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_MIXTE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'PKE' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_PARKING_EXT__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'PKI' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_PARKING_INT__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'RES' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_R_SERVE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'SAN' THEN REQ1.MT_LOYER_ACTUEL ELSE 0 END)), 0) LOYER_SANT__C
	FROM REQ1
	GROUP BY PK_GROUPE, CGROUPE
)

SELECT GROUPE.CGROUPE IDENTIFIANT_IMMEUBLE_ESTIA__C
	 , GROUPE.LGROUPE NAME
     , TIERS.LTIERS FILIALE__C
	 , SURF_LOUEE.SURF TOTAL_DES_SURFACES_LOU_ES__C
	 , (WGS.SURF_HAB) SURFACE_HABITABLE__C
	 , ISNULL((W.VAL_SURF_BUR), 0) SURFACE_DE_BUREAUX__C
	 , ISNULL((W.VAL_SURF_COM), 0) SURFACE_DE_COMMERCES__C
	 , ISNULL((W.VAL_SURF_HAB), 0) SURFACE_D_HABITATION__C
	 , ISNULL((W.VAL_SURF_ARC), 0) SURFACE_D_ARCHIVES__C
	 , ISNULL((W.VAL_SURF_ACT), 0) SURFACE_D_ACTIVIT__C
	 , 0 SURFACE_LOGISTIQUE__C
	 , 0 SURFACE_MIXTE__C
	 , 0 SURFACE_INDUSTRIELLE__C
	 , 0 SURFACE_SANTE__C
	 , 0 SURFACE_R_SIDENCE_TUDIANTE__C
	 , 0 SURFACE_AUTRE__C
	 , CASE WHEN ISNULL(WGS.SURF_HAB, 0) > 0 THEN CONVERT(NUMERIC(18,2) , SURF_LOUEE.SURF/WGS.SURF_HAB) ELSE 0 END TAUX_DE_VACANCE_PHYSIQUE__C
	 , ISNULL(ETAGE.NB_ETAGE, 0) NOMBRE_D_TAGES__C
	 , ISNULL(PKG.NB_PK_INT, 0) NOMBRE_DE_PARKINGS_INTERIEURS__C
	 , ISNULL(PKG.NB_PK_EXT, 0) NOMBRE_DE_PARKINGS_EXT_RIEURS__C
	 , GROUPE.LGROUPE ADRESSE1_LIGNE1__C
	 , GROUPE.RUE ADRESSE1_LIGNE2__C
	 , GROUPE.CPOS CODE_POSTAL1__C
	 , GROUPE.VILLE
	 , CASE UPPER(GROUPE.VILLE) WHEN 'BORDEAUX' THEN 'BORDEAUX' WHEN 'LILLE' THEN 'LILLE' WHEN 'LYON' THEN 'LYON' WHEN 'MARSEILLE ' THEN 'MARSEILLE' WHEN 'MONTPELLIER' THEN 'MONTPELLIER' WHEN 'NANTES' THEN 'NANTES' WHEN 'NICE' THEN 'NICE' WHEN 'STRASBOURG' THEN 'STRASBOURG' WHEN 'TOULOUSE' THEN 'TOULOUSE' ELSE 'AUTRES' END VILLE_DE_PROVINCE__C
	 , ISNULL(REQ2.LOYER_ANNUALISE_ACTUEL__C, 0) LOYER_ANNUALISE_ACTUEL__C
	 , ISNULL(REQ2.LOYER_ACTIVIT__C, 0) LOYER_ACTIVIT__C
	 , ISNULL(REQ2.LOYER_ARCHIVES__C, 0) LOYER_ARCHIVES__C
	 , ISNULL(REQ2.LOYER_AUTRE__C, 0) LOYER_AUTRE__C
	 , ISNULL(REQ2.LOYER_BUREAUX__C, 0) LOYER_BUREAUX__C
	 , ISNULL(REQ2.LOYER_COMMERCE__C, 0) LOYER_COMMERCE__C
	 , ISNULL(REQ2.LOYER_R_SIDENCE_ETUDIANTE__C, 0) LOYER_R_SIDENCE_ETUDIANTE__C
	 , ISNULL(REQ2.LOYER_HABITABLE__C, 0) LOYER_HABITABLE__C
	 , ISNULL(REQ2.LOYER_INDUSTRIELLE__C, 0) LOYER_INDUSTRIELLE__C
	 , ISNULL(REQ2.LOYER_LOGISTIQUE__C, 0) LOYER_LOGISTIQUE__C
	 , ISNULL(REQ2.LOYER_MIXTE__C, 0) LOYER_MIXTE__C
	 , ISNULL(REQ2.LOYER_PARKING_EXT__C, 0) LOYER_PARKING_EXT__C
	 , ISNULL(REQ2.LOYER_PARKING_INT__C, 0) LOYER_PARKING_INT__C
	 , ISNULL(REQ2.LOYER_R_SERVE__C, 0) LOYER_R_SERVE__C
	 , ISNULL(REQ2.LOYER_SANT__C, 0) LOYER_SANT__C
	 , GESTIONNAIRE.PRENOM + ' ' + GESTIONNAIRE.LEMPLOY PM_LOCATIF_INTERNE__C
	 , TECHNICIEN.PRENOM + ' ' + TECHNICIEN.LEMPLOY PM_TECHNIQUE_INTERNE__C
FROM MASTER_ESTIA..ESTIA_GROUPE GROUPE
INNER JOIN MASTER_ESTIA..WRK_GROUPE_MANGES WGM
ON WGM.PK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN MASTER_ESTIA..WRK_GROUPE_SURFACE WGS
ON WGS.CORG = GROUPE.CORG AND WGS.CAGENCE = GROUPE.CAGENCE AND WGS.CGROUPE = GROUPE.CGROUPE
LEFT JOIN MASTER_ESTIA..ESTIA_TIERS TIERS
ON TIERS.PK_TIERS = WGM.FK_TIERS
LEFT JOIN
(
	SELECT IMMEUBLE.PK_IMMEUBLE
		, SUM(CASE WHEN CD_REG_USAGE = 'BUR' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_BUR
		, SUM(CASE WHEN CD_REG_USAGE = 'COM' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_COM
		, SUM(CASE WHEN CD_REG_USAGE = 'ARC' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ARC
		, SUM(CASE WHEN CD_REG_USAGE = 'HAB' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_HAB
		, SUM(CASE WHEN CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ACT
	FROM MASTER_ESTIA..V_D_IMMEUBLE IMMEUBLE INNER JOIN
	(
		SELECT L.PK_LOT, L.FK_IMMEUBLE, L.NM_LOT, L.CD_USAGE, L.CD_REG_USAGE, L.LB_REG_USAGE, L.LB_USAGE, VAL_SURFACE_REELLE  
		FROM MASTER_ESTIA..V_D_LOT L
		WHERE VAL_SURFACE_REELLE > 0
		AND L.CD_SOCIETE = '11'
	) LOT
	ON LOT.FK_IMMEUBLE = IMMEUBLE.PK_IMMEUBLE
	WHERE IMMEUBLE.CD_SOCIETE = '11'
	GROUP BY IMMEUBLE.PK_IMMEUBLE
) W
ON W.PK_IMMEUBLE = GROUPE.PK_GROUPE
LEFT JOIN 
(
	SELECT FK_GROUPE, MAX(ETAGE) NB_ETAGE
	FROM MASTER_ESTIA..ESTIA_PLOCAL
	WHERE CORG = '11'
	GROUP BY FK_GROUPE
) ETAGE
ON ETAGE.FK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN REQ
ON REQ.PK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN REQ2
ON REQ2.PK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN
(
	SELECT FK_GROUPE
		 , CNATLOG
		 , SUM(CASE WHEN UPPER(LPLOCAL) LIKE '%EXT%' THEN 1 ELSE 0 END) NB_PK_EXT
		 , SUM(CASE WHEN UPPER(LPLOCAL) NOT LIKE '%EXT%' THEN 1 ELSE 0 END) NB_PK_INT
	FROM MASTER_ESTIA..ESTIA_PLOCAL
	WHERE CNATLOG = 'ST'
	AND CORG = '11'
	GROUP BY FK_GROUPE, CNATLOG
) PKG
ON PKG.FK_GROUPE = GROUPE.PK_GROUPE
INNER JOIN MASTER_ESTIA..V_D_MANDAT_GERANCE MANDAT
ON MANDAT.FK_IMMEUBLE = GROUPE.PK_GROUPE
LEFT JOIN
(
	SELECT WRK_HISTO_LOT.FK_GROUPE, WRK_HISTO_LOT.CGROUPE, SUM(V_D_LOT.VAL_SURFACE_REELLE) SURF 
	FROM MASTER_ESTIA.DBO.WRK_HISTO_LOT
	LEFT JOIN MASTER_ESTIA.DBO.V_D_LOT
	ON V_D_LOT.PK_LOT = WRK_HISTO_LOT.FK_LOCAL
	WHERE CD_STATUT = 'L'
	AND CORG = '11'
	AND GETDATE() < ISNULL(DATSORQUIT, '29990101')
	GROUP BY WRK_HISTO_LOT.FK_GROUPE, WRK_HISTO_LOT.CGROUPE
) SURF_LOUEE
ON SURF_LOUEE.FK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN MASTER_ESTIA..ESTIA_MANGES MANGES
ON MANGES.CMANDAT = WGM.CMANDAT
LEFT JOIN MASTER_ESTIA..ESTIA_EMPLOY GESTIONNAIRE
ON GESTIONNAIRE.CEMPLOY = MANGES.CEMPLOY
LEFT JOIN MASTER_ESTIA..ESTIA_EMPLOY TECHNICIEN
ON TECHNICIEN.CEMPLOY = MANGES.TEMPLOY
WHERE GROUPE.CORG = '11' 
AND IND_MANDAT_ACTIF = 'O'
AND GROUPE.CGROUPE NOT IN ('2222', '8888', '4027', '9999', '8510', '1024', '4444', '1111', '3057')
AND UPPER(GROUPE.LGROUPE) NOT LIKE '%GENERIQUE%'

END