-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GET_IMMEUBLES_SALEFORCE_V2]
(
	@DT_ANALYSE DATETIME
)
AS
BEGIN

	SET NOCOUNT ON;

-- calcul des valeurs financières
CREATE TABLE #VAL_FINANCIERES
(
	PK_GROUPE				INT NOT NULL,
	PK_BAIL                 INT NOT NULL,
	MT_LOYER_ACTUEL         NUMERIC(18, 2) NULL,
	MT_LOYER_FRANCHISE      NUMERIC(18, 2) NULL,
	MT_PALIER				NUMERIC(18, 2) NULL
)

insert into #VAL_FINANCIERES(PK_GROUPE, PK_BAIL, MT_LOYER_ACTUEL, MT_LOYER_FRANCHISE, MT_PALIER)
--select PK_GROUPE, PK_BAIL, MT_LOYER_ACTUEL, MT_LOYER_FRANCHISE, MT_PALIER from dbo.f_GET_LEASE_FINANCIAL_DATA(CONVERT(DATETIME, CONVERT(VARCHAR(10), DATEADD(QUARTER, -1, @DT_ANALYSE),103), 103))
select PK_GROUPE, PK_BAIL, MT_LOYER_ACTUEL, MT_LOYER_FRANCHISE, MT_PALIER from dbo.f_GET_LEASE_FINANCIAL_DATA(CONVERT(DATETIME, CONVERT(VARCHAR(10), DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, DATEADD(QUARTER, -1, @DT_ANALYSE)) + 1, 0)) ,103), 103))

update #VAL_FINANCIERES
set MT_LOYER_FRANCHISE = SRC.MT_LOYER_FRANCHISE,
	MT_PALIER = SRC.MT_PALIER
from #VAL_FINANCIERES
left join 
(
	select PR.PK_GROUPE, PR.PK_BAIL,
			--ISNULL(PR.MT_LOYER_ACTUEL, 0) AS MT_LOYER_ACTUEL,
			ISNULL(PR.MT_LOYER_FRANCHISE, 0) AS MT_LOYER_FRANCHISE,
			ISNULL(PR.MT_PALIER, 0) AS MT_PALIER
	from 
	(
		select LOCATION.FK_GROUPE AS PK_GROUPE, LOCATION.FK_BAIL AS PK_BAIL
				, LOCATION.PERIOD AS NB_MOIS_FRQ
				--, SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N') THEN HQLOCAT.NB 
				--		   WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'O' OR PSRE.IND_CALCUL_PALIER = 'O') THEN 0 ELSE 0 END) AS MT_LOYER_ACTUEL
				, SUM(CASE WHEN PSRE.IND_CALCUL_FRANCHISE = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_FRANCHISE
				, SUM(CASE WHEN PSRE.IND_CALCUL_PALIER = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_PALIER
		from MASTER_ESTIA..ESTIA_LOCATION AS LOCATION
			inner join MASTER_ESTIA..ESTIA_HQLOCAT AS HQLOCAT
				on HQLOCAT.CORG = LOCATION.CORG
				and HQLOCAT.CAGENCE = LOCATION.CAGENCE
				and HQLOCAT.CGROUPE = LOCATION.CGROUPE
				and HQLOCAT.CIMMEUB = LOCATION.CIMMEUB
				and HQLOCAT.CLOCAL = LOCATION.CLOCAL
				and HQLOCAT.OCC = LOCATION.OCC
			left join MASTER_ESTIA..P_RUBRIQUE AS P
				on P.CD_RUBRIQUE = HQLOCAT.CRUB
			left join MASTER_ESTIA..P_SOUS_REG_ELTFAC AS PSRE
				on PSRE.CD_SOUS_REG_ELTFAC = P.CD_SOUS_REG_ELTFAC
		where LOCATION.FK_BAIL IS NOT NULL
		and P.CD_SOUS_REG_ELTFAC not in ('LOR')
		and LOCATION.DATENTQUIT <= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
		and ISNULL(LOCATION.DATSORQUIT, '29990101') > DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
		and HQLOCAT.DDEB <= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
		and HQLOCAT.DFIN > DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
		group by LOCATION.FK_GROUPE, LOCATION.FK_BAIL, LOCATION.PERIOD
	) PR
) SRC
on SRC.PK_BAIL = #VAL_FINANCIERES.PK_BAIL


CREATE TABLE #TRAIT_LOTS
(
	CD_CAS						INT,
	LB_CAS						VARCHAR(100),
	FK_ORG						INT,
	FK_PROPRIETAIRE				INT,
	FK_GROUPE					INT,
	FK_BAIL						INT,
	FK_LOCAL					INT,
	NOM_PROPRIETAIRE			VARCHAR(100),
	CORG						VARCHAR(4),
	CD_IMMEUBLE_DREAM			VARCHAR(100),
	CGROUPE						INT,
	LGROUPE						VARCHAR(100),
	CCOMPTE						VARCHAR(22),
	NOBAIL						INT,
	NOM_LOCATAIRE				VARCHAR(100),
	CD_STATUT					VARCHAR(1),
	DT_DEBUT_RAT				DATE,
	DT_FIN_RAT					DATE,
	DT_DEBUT_OCCUPATION			DATE,
	DT_FIN_OCCUPATION			DATE,
	DT_DEBUT_VACANCE			DATE,
	DT_FIN_VACANCE				DATE,
	DT_DEBUT_OCCUPATION_TRIM	DATE,
	DT_FIN_OCCUPATION_TRIM		DATE,
	DT_DEBUT_VACANCE_TRIM		DATE,
	DT_FIN_VACANCE_TRIM			DATE,
	NB_JOURS_TRIM				INT,
	NB_JOURS_OCCUPATION_TRIM	INT,
	NB_JOURS_VACANCE_TRIM		INT,
	SURFACE_TOTALE_IMMEUBLE		NUMERIC(18,2),
	CD_TYPE_LOT					VARCHAR(6),
	LB_TYPE_LOT					VARCHAR(30),
	CD_REG_USAGE				VARCHAR(6),
	LB_REG_USAGE				VARCHAR(60),
	VAL_SURF_BUR				NUMERIC(18,2),
	VAL_SURF_COM				NUMERIC(18,2),
	VAL_SURF_ARC				NUMERIC(18,2),
	VAL_SURF_HAB				NUMERIC(18,2),
	VAL_SURF_ACT				NUMERIC(18,2),
	VAL_SURF_HOT				NUMERIC(18,2),
	VLM							NUMERIC(18,2),
	VLM_BUREAUX					NUMERIC(18,2),
	VLM_COMMERCES				NUMERIC(18,2),
	VLM_ARCHIVES				NUMERIC(18,2),
	VLM_HABITATION				NUMERIC(18,2),
	VLM_ACTIVITE				NUMERIC(18,2),
	VLM_HOTEL					NUMERIC(18,2),
	VLM_PKG_EXT					NUMERIC(18,2),
	VLM_PKG_INT					NUMERIC(18,2),
	VLM_BUREAUX_PRORATISE		NUMERIC(18,2),
	VLM_COMMERCES_PRORATISE		NUMERIC(18,2),
	VLM_ARCHIVES_PRORATISE		NUMERIC(18,2),
	VLM_HABITATION_PRORATISE	NUMERIC(18,2),
	VLM_ACTIVITE_PRORATISE		NUMERIC(18,2),
	VLM_HOTEL_PRORATISE			NUMERIC(18,2),
	VLM_PKG_EXT_PRORATISE		NUMERIC(18,2),
	VLM_PKG_INT_PRORATISE		NUMERIC(18,2),
	LOYER_FACIAL				NUMERIC(18,2),
	--LOYER_QUITTANCE				NUMERIC(18,2),
	MT_FRANCHISE_PALIER			NUMERIC(18,2),
	LOYER_FACIAL_TRIMESTRIEL	NUMERIC(18,2),
	LOYER_TRIMESTRIEL_QUITTANCE	NUMERIC(18,2)
)

-- BAUX STABLES DANS LA PERIODE
insert into #TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, NOM_LOCATAIRE, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_OCCUPATION, DT_FIN_OCCUPATION, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VAL_SURF_HOT, /*LOYER_FACIAL, MT_FRANCHISE_PALIER,*/ CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'GARDIEN' else WHL.LTIERS end as NOM_LOCATAIRE
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, DB.DT_ENTREE
		, DB.DT_SORTIE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_OCCUPATION_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_OCCUPATION_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HOT
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		--, #VAL_FINANCIERES.MT_LOYER_ACTUEL as LOYER_FACIAL
		--, ISNULL(ABS(#VAL_FINANCIERES.MT_LOYER_FRANCHISE) + ABS(#VAL_FINANCIERES.MT_PALIER), 0) AS MT_FRANCHISE_PALIER
		, 1 as CD_CAS
		, 'Bail stable' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
--left join #VAL_FINANCIERES
--on #VAL_FINANCIERES.PK_BAIL = DB.PK_BAIL
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'L' or L.CD_TYPE_LOT = 'LOG')
and WHL.DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
and ISNULL(WHL.DT_FIN_RAT, '29990101') > DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end

-- BAUX DEBUTES AVANT LA PERIODE ET TERMINES DANS LA PERIODE
insert into #TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, NOM_LOCATAIRE, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_OCCUPATION, DT_FIN_OCCUPATION, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VAL_SURF_HOT, /*LOYER_FACIAL, MT_FRANCHISE_PALIER,*/ CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'GARDIEN' else WHL.LTIERS end as NOM_LOCATAIRE
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, DB.DT_ENTREE
		, DB.DT_SORTIE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_OCCUPATION_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_OCCUPATION_TRIM	 
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HOT
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		--, #VAL_FINANCIERES.MT_LOYER_ACTUEL AS LOYER_FACIAL
		--, ISNULL(ABS(#VAL_FINANCIERES.MT_LOYER_FRANCHISE) + ABS(#VAL_FINANCIERES.MT_PALIER), 0) AS MT_FRANCHISE_PALIER
		, 2 as CD_CAS
		, 'Bail terminé dans la période' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
--left join #VAL_FINANCIERES
--on #VAL_FINANCIERES.PK_BAIL = DB.PK_BAIL
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'L' or L.CD_TYPE_LOT = 'LOG')
and WHL.DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
and ISNULL(WHL.DT_FIN_RAT, '29990101') between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- BAUX DEBUTES ET TERMINES DANS LA PERIODE 
insert into #TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, NOM_LOCATAIRE, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_OCCUPATION, DT_FIN_OCCUPATION, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VAL_SURF_HOT, /*LOYER_FACIAL, MT_FRANCHISE_PALIER,*/ CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'GARDIEN' else WHL.LTIERS end as NOM_LOCATAIRE
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, DB.DT_ENTREE
		, DB.DT_SORTIE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_OCCUPATION_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_OCCUPATION_TRIM	 
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HOT
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		--, #VAL_FINANCIERES.MT_LOYER_ACTUEL AS LOYER_FACIAL
		--, ISNULL(ABS(#VAL_FINANCIERES.MT_LOYER_FRANCHISE) + ABS(#VAL_FINANCIERES.MT_PALIER), 0) AS MT_FRANCHISE_PALIER
		, 3 as CD_CAS
		, 'Bail débuté et terminé dans la période' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
--left join #VAL_FINANCIERES
--on #VAL_FINANCIERES.PK_BAIL = DB.PK_BAIL
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'L' or L.CD_TYPE_LOT = 'LOG')
and WHL.DT_DEBUT_RAT between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and ISNULL(WHL.DT_FIN_RAT, '29990101') between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- BAUX DEBUTES DANS LA PERIODE ET TERMINES APRES LA PERIODE 
insert into #TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, NOM_LOCATAIRE, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_OCCUPATION, DT_FIN_OCCUPATION, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VAL_SURF_HOT, /*LOYER_FACIAL, MT_FRANCHISE_PALIER,*/ CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'GARDIEN' else WHL.LTIERS end as NOM_LOCATAIRE
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, DB.DT_ENTREE
		, DB.DT_SORTIE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_OCCUPATION_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_OCCUPATION_TRIM	 
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HOT
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		--, #VAL_FINANCIERES.MT_LOYER_ACTUEL AS LOYER_FACIAL
		--, ISNULL(ABS(#VAL_FINANCIERES.MT_LOYER_FRANCHISE) + ABS(#VAL_FINANCIERES.MT_PALIER), 0) AS MT_FRANCHISE_PALIER
		, 4 as CD_CAS
		, 'Bail débuté dans la période' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
--left join #VAL_FINANCIERES
--on #VAL_FINANCIERES.PK_BAIL = DB.PK_BAIL
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'L' or L.CD_TYPE_LOT = 'LOG')
and WHL.DT_DEBUT_RAT between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and ISNULL(WHL.DT_FIN_RAT, '29990101') > DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- MAJ du LOYER FACIAL et DES FRANCHISE et PALIER
update #TRAIT_LOTS
	set LOYER_FACIAL		= SRC.MT_LOYER_ACTUEL,
	    MT_FRANCHISE_PALIER	= ISNULL(ABS(src.MT_LOYER_FRANCHISE) + ABS(src.MT_PALIER), 0)
from #TRAIT_LOTS TL
left join
(
	select PK_GROUPE, PK_BAIL, MT_LOYER_ACTUEL, MT_LOYER_FRANCHISE, MT_PALIER from SAFIR_ESTIA.dbo.f_GET_LEASE_FINANCIAL_DATA(CONVERT(DATETIME, CONVERT(VARCHAR(10), DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, DATEADD(QUARTER, -1, @DT_ANALYSE)) + 1, 0)) ,103), 103))
) src
on src.PK_BAIL = TL.FK_BAIL
where TL.CD_CAS = 1

update #TRAIT_LOTS
	set LOYER_FACIAL		= SRC.MT_LOYER_ACTUEL,
	    MT_FRANCHISE_PALIER	= ISNULL(ABS(src.MT_LOYER_FRANCHISE) + ABS(src.MT_PALIER), 0)
from #TRAIT_LOTS TL
left join 
(
	select PR.PK_GROUPE, PR.PK_BAIL,
			ISNULL(PR.MT_LOYER_ACTUEL, 0) AS MT_LOYER_ACTUEL,
			ISNULL(PR.MT_LOYER_FRANCHISE, 0) AS MT_LOYER_FRANCHISE,
			ISNULL(PR.MT_PALIER, 0) AS MT_PALIER
	from 
	(
		select LOCATION.FK_GROUPE AS PK_GROUPE, LOCATION.FK_BAIL AS PK_BAIL
				, LOCATION.PERIOD AS NB_MOIS_FRQ
				, SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N') THEN HQLOCAT.NB 
						   WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'O' OR PSRE.IND_CALCUL_PALIER = 'O') THEN 0 ELSE 0 END) AS MT_LOYER_ACTUEL
				, SUM(CASE WHEN PSRE.IND_CALCUL_FRANCHISE = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_FRANCHISE
				, SUM(CASE WHEN PSRE.IND_CALCUL_PALIER = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_PALIER
		from MASTER_ESTIA..ESTIA_LOCATION AS LOCATION
			inner join MASTER_ESTIA..ESTIA_HQLOCAT AS HQLOCAT
				on HQLOCAT.CORG = LOCATION.CORG
				and HQLOCAT.CAGENCE = LOCATION.CAGENCE
				and HQLOCAT.CGROUPE = LOCATION.CGROUPE
				and HQLOCAT.CIMMEUB = LOCATION.CIMMEUB
				and HQLOCAT.CLOCAL = LOCATION.CLOCAL
				and HQLOCAT.OCC = LOCATION.OCC
			left join MASTER_ESTIA..P_RUBRIQUE AS P
				on P.CD_RUBRIQUE = HQLOCAT.CRUB
			left join MASTER_ESTIA..P_SOUS_REG_ELTFAC AS PSRE
				on PSRE.CD_SOUS_REG_ELTFAC = P.CD_SOUS_REG_ELTFAC
			left join #TRAIT_LOTS TRAIT
			on TRAIT.FK_BAIL = LOCATION.PK_LOCATION
		WHERE TRAIT.DT_FIN_OCCUPATION BETWEEN HQLOCAT.DDEB AND ISNULL(HQLOCAT.DFIN, '2999/01/01')
		AND LOCATION.FK_BAIL IS NOT NULL
		AND (LOCATION.DATSORQUIT IS NULL OR LOCATION.DATSORQUIT >= TRAIT.DT_FIN_OCCUPATION)
		and P.CD_SOUS_REG_ELTFAC not in ('LOR')
		group by LOCATION.FK_GROUPE, LOCATION.FK_BAIL, LOCATION.PERIOD
	) PR
) SRC
on SRC.PK_BAIL = TL.FK_BAIL
where TL.CD_CAS in (2, 3)


update #TRAIT_LOTS
	set LOYER_FACIAL		= SRC.MT_LOYER_ACTUEL,
	    MT_FRANCHISE_PALIER	= ISNULL(ABS(src.MT_LOYER_FRANCHISE) + ABS(src.MT_PALIER), 0)
from #TRAIT_LOTS TL
left join 
(
	select PR.PK_GROUPE, PR.PK_BAIL,
			ISNULL(PR.MT_LOYER_ACTUEL, 0) AS MT_LOYER_ACTUEL,
			ISNULL(PR.MT_LOYER_FRANCHISE, 0) AS MT_LOYER_FRANCHISE,
			ISNULL(PR.MT_PALIER, 0) AS MT_PALIER
	from 
	(
		select LOCATION.FK_GROUPE AS PK_GROUPE, LOCATION.FK_BAIL AS PK_BAIL
				, LOCATION.PERIOD AS NB_MOIS_FRQ
				, SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N') THEN HQLOCAT.NB 
						   WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'O' OR PSRE.IND_CALCUL_PALIER = 'O') THEN 0 ELSE 0 END) AS MT_LOYER_ACTUEL
				, SUM(CASE WHEN PSRE.IND_CALCUL_FRANCHISE = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_FRANCHISE
				, SUM(CASE WHEN PSRE.IND_CALCUL_PALIER = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_PALIER
		from MASTER_ESTIA..ESTIA_LOCATION AS LOCATION
			inner join MASTER_ESTIA..ESTIA_HQLOCAT AS HQLOCAT
				on HQLOCAT.CORG = LOCATION.CORG
				and HQLOCAT.CAGENCE = LOCATION.CAGENCE
				and HQLOCAT.CGROUPE = LOCATION.CGROUPE
				and HQLOCAT.CIMMEUB = LOCATION.CIMMEUB
				and HQLOCAT.CLOCAL = LOCATION.CLOCAL
				and HQLOCAT.OCC = LOCATION.OCC
			left join MASTER_ESTIA..P_RUBRIQUE AS P
				on P.CD_RUBRIQUE = HQLOCAT.CRUB
			left join MASTER_ESTIA..P_SOUS_REG_ELTFAC AS PSRE
				on PSRE.CD_SOUS_REG_ELTFAC = P.CD_SOUS_REG_ELTFAC
			left join #TRAIT_LOTS TRAIT
			on TRAIT.FK_BAIL = LOCATION.PK_LOCATION
		WHERE ISNULL(TRAIT.DT_FIN_OCCUPATION, @DT_ANALYSE) BETWEEN HQLOCAT.DDEB AND ISNULL(HQLOCAT.DFIN, '2999/01/01')
		AND LOCATION.FK_BAIL IS NOT NULL
		AND (LOCATION.DATSORQUIT IS NULL OR LOCATION.DATSORQUIT >= ISNULL(TRAIT.DT_FIN_OCCUPATION, @DT_ANALYSE))
		and P.CD_SOUS_REG_ELTFAC not in ('LOR')
		group by LOCATION.FK_GROUPE, LOCATION.FK_BAIL, LOCATION.PERIOD
	) PR
) SRC
on SRC.PK_BAIL = TL.FK_BAIL
where TL.CD_CAS in (4)


-- LOTS VACANTS STABLES DANS LA PERIODE 
insert into #TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_VACANCE, DT_FIN_VACANCE, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VAL_SURF_HOT, VLM_BUREAUX, VLM_COMMERCES, VLM_ARCHIVES, VLM_HABITATION, VLM_ACTIVITE, VLM_PKG_EXT, VLM_PKG_INT, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_FIN_RAT
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_VACANCE_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_VACANCE_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HOT
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, ISNULL(P_IMMEUBLE_VLM.VLM_BUREAUX, 0)  VLM_BUREAUX
		, ISNULL(P_IMMEUBLE_VLM.VLM_COMMERCES, 0) VLM_COMMERCES
		, ISNULL(P_IMMEUBLE_VLM.VLM_ARCHIVES, 0) VLM_ARCHIVES
		, ISNULL(P_IMMEUBLE_VLM.VLM_HABITATION, 0) VLM_HABITATION
		, ISNULL(P_IMMEUBLE_VLM.VLM_ACTIVITE, 0) VLM_ACTIVITE
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_EXT, 0) VLM_PKG_EXT
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_INT, 0) VLM_PKG_INT
		, 5 as CD_CAS
		, 'Lot vacant' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
left join MASTER_ESTIA..P_IMMEUBLE_VLM
on P_IMMEUBLE_VLM.CD_IMMEUBLE_ESTIA = WHL.CGROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'V' and L.CD_TYPE_LOT <> 'LOG')
and WHL.DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
and ISNULL(WHL.DT_FIN_RAT, '29990101') > DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- VACANTS DEBUTES AVANT LA PERIODE ET TERMINES DANS LA PERIODE
insert into #TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_VACANCE, DT_FIN_VACANCE, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VAL_SURF_HOT, VLM_BUREAUX, VLM_COMMERCES, VLM_ARCHIVES, VLM_HABITATION, VLM_ACTIVITE, VLM_PKG_EXT, VLM_PKG_INT, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_DEBUT_RAT as DT_DEBUT_VACANCE
		, WHL.DT_FIN_RAT as DT_FIN_VACANCE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_VACANCE_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_VACANCE_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HOT
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, ISNULL(P_IMMEUBLE_VLM.VLM_BUREAUX, 0)  VLM_BUREAUX
		, ISNULL(P_IMMEUBLE_VLM.VLM_COMMERCES, 0) VLM_COMMERCES
		, ISNULL(P_IMMEUBLE_VLM.VLM_ARCHIVES, 0) VLM_ARCHIVES
		, ISNULL(P_IMMEUBLE_VLM.VLM_HABITATION, 0) VLM_HABITATION
		, ISNULL(P_IMMEUBLE_VLM.VLM_ACTIVITE, 0) VLM_ACTIVITE
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_EXT, 0) VLM_PKG_EXT
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_INT, 0) VLM_PKG_INT
		, 5 as CD_CAS
		, 'Lot vacant' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
left join MASTER_ESTIA..P_IMMEUBLE_VLM
on P_IMMEUBLE_VLM.CD_IMMEUBLE_ESTIA = WHL.CGROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'V' and L.CD_TYPE_LOT <> 'LOG')
and WHL.DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0)
and ISNULL(WHL.DT_FIN_RAT, '29990101') between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- LOTS VACANTS DEBUTES ET TERMINES DANS LA PERIODE 
insert into #TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_VACANCE, DT_FIN_VACANCE, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VAL_SURF_HOT, VLM_BUREAUX, VLM_COMMERCES, VLM_ARCHIVES, VLM_HABITATION, VLM_ACTIVITE, VLM_PKG_EXT, VLM_PKG_INT, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_DEBUT_RAT as DT_DEBUT_VACANCE
		, WHL.DT_FIN_RAT as DT_FIN_VACANCE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_VACANCE_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_VACANCE_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HOT
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, ISNULL(P_IMMEUBLE_VLM.VLM_BUREAUX, 0)  VLM_BUREAUX
		, ISNULL(P_IMMEUBLE_VLM.VLM_COMMERCES, 0) VLM_COMMERCES
		, ISNULL(P_IMMEUBLE_VLM.VLM_ARCHIVES, 0) VLM_ARCHIVES
		, ISNULL(P_IMMEUBLE_VLM.VLM_HABITATION, 0) VLM_HABITATION
		, ISNULL(P_IMMEUBLE_VLM.VLM_ACTIVITE, 0) VLM_ACTIVITE
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_EXT, 0) VLM_PKG_EXT
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_INT, 0) VLM_PKG_INT
		, 5 as CD_CAS
		, 'Lot vacant' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
left join MASTER_ESTIA..P_IMMEUBLE_VLM
on P_IMMEUBLE_VLM.CD_IMMEUBLE_ESTIA = WHL.CGROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'V' and L.CD_TYPE_LOT <> 'LOG')
and WHL.DT_DEBUT_RAT between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and ISNULL(WHL.DT_FIN_RAT, '29990101') between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- LOTS VACANTS DEBUTES DANS LA PERIODE ET TERMINES APRES LA PERIODE 
insert into #TRAIT_LOTS(FK_ORG, FK_PROPRIETAIRE, FK_GROUPE, FK_BAIL, FK_LOCAL, NOM_PROPRIETAIRE, CORG, CGROUPE, LGROUPE, CCOMPTE, NOBAIL, CD_STATUT, DT_DEBUT_RAT, DT_DEBUT_VACANCE, DT_FIN_VACANCE, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM, DT_FIN_RAT, SURFACE_TOTALE_IMMEUBLE, CD_TYPE_LOT, LB_TYPE_LOT, CD_REG_USAGE, LB_REG_USAGE, VAL_SURF_BUR, VAL_SURF_COM, VAL_SURF_ARC, VAL_SURF_HAB, VAL_SURF_ACT, VAL_SURF_HOT, VLM_BUREAUX, VLM_COMMERCES, VLM_ARCHIVES, VLM_HABITATION, VLM_ACTIVITE, VLM_PKG_EXT, VLM_PKG_INT, CD_CAS, LB_CAS)
select WHL.FK_ORG
		, WHL.FK_PROPRIETAIRE
		, WHL.FK_GROUPE
		, WHL.FK_BAIL 
		, WHL.FK_LOCAL
		, P.NOM_PROPRIETAIRE
		, WHL.CORG
		, WHL.CGROUPE
		, I.ADRLGN1 as LGROUPE
		, WHL.CCOMPTE
		, WHL.NOBAIL
		, case when L.CD_TYPE_LOT = 'LOG' then 'L' else WHL.CD_STATUT end CD_STATUT
		, WHL.DT_DEBUT_RAT
		, WHL.DT_DEBUT_RAT as DT_DEBUT_VACANCE
		, WHL.DT_FIN_RAT as DT_FIN_VACANCE
		, case when DT_DEBUT_RAT < DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) then DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) else DT_DEBUT_RAT end as DT_DEBUT_VACANCE_TRIM
		, case when ISNULL(DT_FIN_RAT, '29990101') >= DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) then DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0)) else DATEADD(DAY, 1, DT_FIN_RAT) end as DT_FIN_VACANCE_TRIM
		, WHL.DT_FIN_RAT
		, I.SURFACE_TOTALE AS SURFACE_TOTALE_IMMEUBLE
		, L.CD_TYPE_LOT
		, L.LB_TYPE_LOT
		, case when L.CD_REG_USAGE = 'PKG' then PTL.CD_COR_TYPE_LOT_RUBRIQUE else L.CD_REG_USAGE end CD_REG_USAGE
		, L.LB_REG_USAGE
		, case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_BUR
		, case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_COM
		, case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ARC
		, case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HAB
		, case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_HOT
		, case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end VAL_SURF_ACT
		, ISNULL(P_IMMEUBLE_VLM.VLM_BUREAUX, 0)  VLM_BUREAUX
		, ISNULL(P_IMMEUBLE_VLM.VLM_COMMERCES, 0) VLM_COMMERCES
		, ISNULL(P_IMMEUBLE_VLM.VLM_ARCHIVES, 0) VLM_ARCHIVES
		, ISNULL(P_IMMEUBLE_VLM.VLM_HABITATION, 0) VLM_HABITATION
		, ISNULL(P_IMMEUBLE_VLM.VLM_ACTIVITE, 0) VLM_ACTIVITE
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_EXT, 0) VLM_PKG_EXT
		, ISNULL(P_IMMEUBLE_VLM.VLM_PKG_INT, 0) VLM_PKG_INT
		, 5 as CD_CAS
		, 'Lot vacant' as LB_CAS
from MASTER_ESTIA..WRK_HISTO_LOT WHL
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
left join SAFIR_ESTIA..D_PROPRIETAIRE P
on P.PK_PROPRIETAIRE = WHL.FK_PROPRIETAIRE
left join SAFIR_ESTIA..D_IMMEUBLE I
on I.PK_IMMEUBLE = WHL.FK_GROUPE
left join MASTER_ESTIA..P_IMMEUBLE_VLM
on P_IMMEUBLE_VLM.CD_IMMEUBLE_ESTIA = WHL.CGROUPE
inner join SAFIR_ESTIA..D_LOT L
on L.PK_LOT = WHL.FK_LOCAL 
left join SAFIR_ESTIA..D_BAIL DB
on DB.PK_BAIL = WHL.FK_BAIL
LEFT JOIN SAFIR_ESTIA..V_LOYER_BASE VLB
ON VLB.FK_BAIL = DB.PK_BAIL
left join MASTER_ESTIA..P_TYPE_LOT PTL
on PTL.CD_TYPE_LOT = L.CD_TYPE_LOT
where WHL.CORG = '11'
and DMG.IND_MANDAT_ACTIF = 'O'
and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
and (WHL.CD_STATUT = 'V' and L.CD_TYPE_LOT <> 'LOG')
and WHL.DT_DEBUT_RAT between DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0) and DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and ISNULL(WHL.DT_FIN_RAT, '29990101') > DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))
and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end


-- maj du nm_immeuble_dream
update #TRAIT_LOTS
set CD_IMMEUBLE_DREAM = PIV.CD_IMMEUBLE_DREAM
from #TRAIT_LOTS
left join MASTER_ESTIA..P_IMMEUBLE_VLM PIV
on PIV.CD_IMMEUBLE_ESTIA = #TRAIT_LOTS.CGROUPE


-- maj du nombre de jour d'occupation, nombre de jours de vacance et nombre dejours dans le trimestre
update #TRAIT_LOTS
set NB_JOURS_TRIM				= DATEDIFF(DAY, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE) - 1, 0), DATEADD(DAY, -1, DATEADD(quarter, DATEDIFF(quarter, 0, @DT_ANALYSE), 0))),
	NB_JOURS_OCCUPATION_TRIM	= ISNULL(DATEDIFF(DAY, DT_DEBUT_OCCUPATION_TRIM, DT_FIN_OCCUPATION_TRIM), 0),
	NB_JOURS_VACANCE_TRIM		= ISNULL(DATEDIFF(DAY, DT_DEBUT_VACANCE_TRIM, DT_FIN_VACANCE_TRIM), 0)


-- maj du loyer facial trimestriel et du loyer trimestriel quittance 
update #TRAIT_LOTS
set LOYER_FACIAL_TRIMESTRIEL	= CONVERT(NUMERIC(18,2), case when NB_JOURS_TRIM > 0 then ((LOYER_FACIAL/4)*NB_JOURS_OCCUPATION_TRIM)/(NB_JOURS_TRIM) else 0 end),
	LOYER_TRIMESTRIEL_QUITTANCE	= CONVERT(NUMERIC(18,2), case when NB_JOURS_TRIM > 0 then (((LOYER_FACIAL/4)*NB_JOURS_OCCUPATION_TRIM)/NB_JOURS_TRIM) - (((MT_FRANCHISE_PALIER/4)*NB_JOURS_OCCUPATION_TRIM)/NB_JOURS_TRIM) else 0 end)


-- mise à jour des VLM proratisées
update #TRAIT_LOTS
set VLM_BUREAUX_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'BUR' then case when NB_JOURS_TRIM > 0 then VAL_SURF_BUR * (((VLM_BUREAUX/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end),
	VLM_COMMERCES_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'COM' then case when NB_JOURS_TRIM > 0 then VAL_SURF_COM * (((VLM_COMMERCES/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end),
	VLM_ARCHIVES_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'ARC' then case when NB_JOURS_TRIM > 0 then VAL_SURF_ARC * (((VLM_ARCHIVES/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end), 
	VLM_HABITATION_PRORATISE	= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'HAB' then case when NB_JOURS_TRIM > 0 then VAL_SURF_HAB * (((VLM_HABITATION/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end), 
	VLM_ACTIVITE_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'ACT' then case when NB_JOURS_TRIM > 0 then VAL_SURF_ACT * (((VLM_ACTIVITE/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM)) else 0 end else 0 end), 
	VLM_PKG_EXT_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'PKE' then case when NB_JOURS_TRIM > 0 then ((VLM_PKG_EXT/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM) else 0 end else 0 end), 
	VLM_PKG_INT_PRORATISE		= CONVERT(NUMERIC(18,2), case when CD_REG_USAGE = 'PKI' then case when NB_JOURS_TRIM > 0 then ((VLM_PKG_INT/4)*NB_JOURS_VACANCE_TRIM)/(NB_JOURS_TRIM) else 0 end else 0 end),
	VLM_HOTEL_PRORATISE			= 0


-- mise à jour des VLM
update #TRAIT_LOTS
set VLM = ISNULL(VLM_BUREAUX_PRORATISE + VLM_COMMERCES_PRORATISE + VLM_ARCHIVES_PRORATISE + VLM_HABITATION_PRORATISE + VLM_ACTIVITE_PRORATISE + VLM_HOTEL_PRORATISE + VLM_PKG_EXT_PRORATISE + VLM_PKG_INT_PRORATISE, 0);


CREATE TABLE #VAC_FIN
(
	FK_PROPRIETAIRE				INT,
	FK_GROUPE					INT,
	PROPRIETAIRE				VARCHAR(100),
	CD_IMMEUBLE_DREAM			VARCHAR(100),
	CD_IMMEUBLE_ESTIA			VARCHAR(100),
	IMMEUBLE					VARCHAR(100),
	LOYER_FACIAL_TRIMESTRIEL	NUMERIC(18,2),
	LOYER_TRIMESTRIEL_QUITTANCE	NUMERIC(18,2),
	LOYER_DU_VACANT				NUMERIC(18,2),
	VACANCE_FINANCIERE			NUMERIC(18,6)
)

insert into #VAC_FIN(FK_PROPRIETAIRE, FK_GROUPE, PROPRIETAIRE, CD_IMMEUBLE_DREAM, CD_IMMEUBLE_ESTIA, IMMEUBLE, LOYER_FACIAL_TRIMESTRIEL, LOYER_TRIMESTRIEL_QUITTANCE, LOYER_DU_VACANT, VACANCE_FINANCIERE)
select FK_PROPRIETAIRE
	 , FK_GROUPE
	 , PROPRIETAIRE
	 , CD_IMMEUBLE_DREAM
	 , CD_IMMEUBLE_ESTIA
	 , IMMEUBLE
	 , LOYER_FACIAL_TRIMESTRIEL
	 , LOYER_TRIMESTRIEL_QUITTANCE
	 , LOYER_DU_VACANT
	 , case when (LOYER_FACIAL_TRIMESTRIEL + LOYER_DU_VACANT) > 0 then 
		((LOYER_DU_VACANT + LOYER_FACIAL_TRIMESTRIEL) - LOYER_TRIMESTRIEL_QUITTANCE)/(LOYER_FACIAL_TRIMESTRIEL + LOYER_DU_VACANT) else 0 end VACANCE_FINANCIERE
from
(
	select FK_PROPRIETAIRE
		 , FK_GROUPE
		 ,  NOM_PROPRIETAIRE as PROPRIETAIRE
		 , CD_IMMEUBLE_DREAM
		 , CGROUPE as CD_IMMEUBLE_ESTIA
		 , LGROUPE as IMMEUBLE
		 , SUM(isnull(LOYER_FACIAL_TRIMESTRIEL, 0)) as LOYER_FACIAL_TRIMESTRIEL
		 , SUM(isnull(LOYER_TRIMESTRIEL_QUITTANCE, 0)) as LOYER_TRIMESTRIEL_QUITTANCE
		 , SUM(isnull(VLM, 0)) as LOYER_DU_VACANT
	from #TRAIT_LOTS 
	where CGROUPE not in ('2222', '8888', '4027', '9999', '8510', '1024', '4444', '1111')
	group by FK_PROPRIETAIRE, FK_GROUPE, NOM_PROPRIETAIRE, CD_IMMEUBLE_DREAM, CGROUPE, LGROUPE 
) SRC
order by FK_PROPRIETAIRE, FK_GROUPE;

WITH REQ AS
(
	SELECT GROUPE.PK_GROUPE
		 , GROUPE.CGROUPE
		 , GROUPE.LGROUPE
		 , MT_LOYER_ACTUEL
		 , MT_LOYER_FRANCHISE
		 , MT_PALIER
	FROM
	(
		SELECT LOCATION.FK_GROUPE AS PK_GROUPE,
			   SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_ACTUEL,
			   SUM(CASE WHEN PSRE.IND_CALCUL_FRANCHISE = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_FRANCHISE,
			   SUM(CASE WHEN PSRE.IND_CALCUL_PALIER = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_PALIER
		FROM MASTER_ESTIA..ESTIA_LOCATION AS LOCATION
			 INNER JOIN MASTER_ESTIA..ESTIA_HQLOCAT AS HQLOCAT
				   ON HQLOCAT.CORG = LOCATION.CORG
				   AND HQLOCAT.CAGENCE = LOCATION.CAGENCE
				   AND HQLOCAT.CGROUPE = LOCATION.CGROUPE
				   AND HQLOCAT.CIMMEUB = LOCATION.CIMMEUB
				   AND HQLOCAT.CLOCAL = LOCATION.CLOCAL
				   AND HQLOCAT.OCC = LOCATION.OCC
			 INNER JOIN MASTER_ESTIA..P_RUBRIQUE AS P
				   ON P.CD_RUBRIQUE = HQLOCAT.CRUB
			 INNER JOIN MASTER_ESTIA..P_SOUS_REG_ELTFAC AS PSRE
				   ON PSRE.CD_SOUS_REG_ELTFAC = P.CD_SOUS_REG_ELTFAC
			 INNER JOIN MASTER_ESTIA..V_D_MANDAT_GERANCE MANDAT
			 ON MANDAT.FK_IMMEUBLE = LOCATION.FK_GROUPE
		WHERE @DT_ANALYSE BETWEEN HQLOCAT.DDEB AND ISNULL(HQLOCAT.DFIN, '2999/01/01')
		AND LOCATION.FK_BAIL IS NOT NULL
		AND LOCATION.CORG = '11'
		AND (LOCATION.DATSORQUIT IS NULL OR LOCATION.DATSORQUIT > @DT_ANALYSE)
		AND IND_MANDAT_ACTIF = 'O'
		GROUP BY LOCATION.FK_GROUPE
	) REQ
	LEFT JOIN MASTER_ESTIA..ESTIA_GROUPE GROUPE
	ON GROUPE.PK_GROUPE = REQ.PK_GROUPE
	WHERE MT_LOYER_ACTUEL > 0
),
REQ1 AS
(
	SELECT GROUPE.PK_GROUPE, GROUPE.CGROUPE, GROUPE.LGROUPE, CD_COR_TYPE_LOT_RUBRIQUE CD_USAGE_RUBRIQUE, MT_LOYER_ACTUEL, MT_LOYER_FRANCHISE, MT_PALIER
	FROM
	(
		SELECT LOCATION.FK_GROUPE AS PK_GROUPE,
			   ISNULL(P.CD_COR_TYPE_LOT_RUBRIQUE,'$$$') AS CD_COR_TYPE_LOT_RUBRIQUE,
			   SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_ACTUEL,
			   SUM(CASE WHEN PSRE.IND_CALCUL_FRANCHISE = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_FRANCHISE,
			   SUM(CASE WHEN PSRE.IND_CALCUL_PALIER = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_PALIER

		FROM MASTER_ESTIA..ESTIA_LOCATION AS LOCATION
			 INNER JOIN MASTER_ESTIA..ESTIA_HQLOCAT AS HQLOCAT
				   ON HQLOCAT.CORG = LOCATION.CORG
				   AND HQLOCAT.CAGENCE = LOCATION.CAGENCE
				   AND HQLOCAT.CGROUPE = LOCATION.CGROUPE
				   AND HQLOCAT.CIMMEUB = LOCATION.CIMMEUB
				   AND HQLOCAT.CLOCAL = LOCATION.CLOCAL
				   AND HQLOCAT.OCC = LOCATION.OCC
			 INNER JOIN MASTER_ESTIA..P_RUBRIQUE AS P
				   ON P.CD_RUBRIQUE = HQLOCAT.CRUB
			 INNER JOIN MASTER_ESTIA..P_SOUS_REG_ELTFAC AS PSRE
				   ON PSRE.CD_SOUS_REG_ELTFAC = P.CD_SOUS_REG_ELTFAC
			 INNER JOIN MASTER_ESTIA..ESTIA_GROUPE GROUPE
			 ON GROUPE.PK_GROUPE = LOCATION.FK_GROUPE
			 INNER JOIN MASTER_ESTIA..V_D_MANDAT_GERANCE MANDAT
			 ON MANDAT.FK_IMMEUBLE = GROUPE.PK_GROUPE
		WHERE @DT_ANALYSE BETWEEN HQLOCAT.DDEB AND ISNULL(HQLOCAT.DFIN, '2999/01/01')
		AND LOCATION.FK_BAIL IS NOT NULL
		AND LOCATION.CORG = '11'
		AND (LOCATION.DATSORQUIT IS NULL OR LOCATION.DATSORQUIT > @DT_ANALYSE)
		AND IND_MANDAT_ACTIF = 'O'
		GROUP BY LOCATION.FK_GROUPE, P.CD_COR_TYPE_LOT_RUBRIQUE
	) REQ
	LEFT JOIN MASTER_ESTIA..ESTIA_GROUPE GROUPE
	ON GROUPE.PK_GROUPE = REQ.PK_GROUPE
	WHERE MT_LOYER_ACTUEL > 0
),
REQ2 AS
(	SELECT PK_GROUPE
	 , CGROUPE
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER)), 0) LOYER_ANNUALISE_ACTUEL__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'ACT' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_ACTIVIT__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'ARC' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_ARCHIVES__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'AUT' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_AUTRE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'BUR' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_BUREAUX__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'COM' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_COMMERCE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'ETD' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_R_SIDENCE_ETUDIANTE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'HAB' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_HABITABLE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'IND' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_INDUSTRIELLE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'LOG' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_LOGISTIQUE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'MIX' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_MIXTE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'PKE' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_PARKING_EXT__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'PKI' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_PARKING_INT__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'RES' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_R_SERVE__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'SAN' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_SANT__C
	 , ISNULL(SUM(CONVERT(NUMERIC(18,2), CASE WHEN REQ1.CD_USAGE_RUBRIQUE = 'HOT' THEN REQ1.MT_LOYER_ACTUEL-REQ1.MT_LOYER_FRANCHISE-REQ1.MT_PALIER ELSE 0 END)), 0) LOYER_HOTEL__C
	FROM REQ1
	GROUP BY PK_GROUPE, CGROUPE
),
REQ3 AS
(
	SELECT FEL.FK_PROPRIETAIRE
	, FEL.FK_IMMEUBLE
	, ISNULL(FEL.FK_BAIL, 0) AS FK_BAIL
	, dbo.initcap(DP.NOM_PROPRIETAIRE) AS NOM_PROPRIETAIRE
	, DI.NM_IMMEUBLE
	, UPPER(DI.ADRLGN1) AS NOM_IMEUBLE
	, DB.CD_BAIL
	, PNB.CD_NATURE_BAIL
	, PNB.LB_NATURE_BAIL
    , CASE WHEN PNB.CD_NATURE_BAIL = '02' THEN DATEADD(YEAR, 6, DATEADD(YEAR, (DATEDIFF(YEAR, DB.DT_EFFET, @DT_ANALYSE)/6) *6, DB.DT_EFFET))-1 ELSE DATEADD(MONTH, (DB.DUREE_AN*12) + DB.DUREE_MOIS, DB.DT_EFFET)-1 END DT_FIN
	, CASE WHEN PNB.CD_NATURE_BAIL = '02' THEN DATEADD(MONTH, 1, @DT_ANALYSE) WHEN PNB.CD_NATURE_BAIL = '39' THEN DATEADD(MONTH, (DB.DUREE_AN*12) + DB.DUREE_MOIS, DB.DT_EFFET)-1 ELSE DB.DT_PRCH_TRIEN_POT END DT_PRCH_TRIEN_POT
	, SUM(FEL.MT_LOYER_ACTUEL) AS MT_LOYER_ACTUEL
	FROM F_ETAT_LOCATIF FEL
	LEFT JOIN D_MANDAT_GERANCE DMG
	ON DMG.PK_MANDAT_GERANCE = FEL.FK_MANDAT_GERANCE
	INNER JOIN D_IMMEUBLE DI
	ON DI.PK_IMMEUBLE = FEL.FK_IMMEUBLE
	INNER JOIN D_PROPRIETAIRE DP
	ON DP.PK_PROPRIETAIRE = FEL.FK_PROPRIETAIRE
	LEFT JOIN D_BAIL DB
	ON DB.PK_BAIL = FEL.FK_BAIL
	LEFT JOIN V_LOYER_BASE VLB
	ON VLB.FK_BAIL = DB.PK_BAIL
	LEFT JOIN MASTER_ESTIA..P_NATURE_BAIL PNB
	ON PNB.CD_NATURE_BAIL = DB.CD_NATURE_BAIL
	WHERE  FEL.CORG = 11
	  AND FEL.CD_STATUT = 'L'
	  AND FEL.FK_BAIL NOT IN ('88888', '-88888')
	  AND CONVERT(VARCHAR(10), FEL.PK_TEMPS, 103) = CONVERT(VARCHAR(10), @DT_ANALYSE, 103)
	  AND DMG.IND_MANDAT_ACTIF = 'O'
	  AND DB.CD_BAIL <> '00000004537/01'
	GROUP BY FEL.FK_PROPRIETAIRE
		   , FEL.FK_IMMEUBLE
		   , FEL.FK_BAIL
		   , DP.NOM_PROPRIETAIRE
		   , DI.NM_IMMEUBLE
		   , DI.ADRLGN1
		   , DB.CD_BAIL
		   , PNB.CD_NATURE_BAIL
		   , PNB.LB_NATURE_BAIL
		   , DB.DT_EFFET
           , DB.DUREE_AN
           , DB.DUREE_MOIS
		   , DB.DT_PRCH_TRIEN_POT
),
REQ4 AS
(
	SELECT REQ3.FK_PROPRIETAIRE
		 , REQ3.FK_IMMEUBLE
		 , REQ3.FK_BAIL
		 , REQ3.NOM_PROPRIETAIRE
		 , REQ3.NM_IMMEUBLE
		 , REQ3.NOM_IMEUBLE
		 , REQ3.CD_BAIL
		 , REQ3.CD_NATURE_BAIL
		 , REQ3.LB_NATURE_BAIL
		 , CONVERT(VARCHAR(10), @DT_ANALYSE, 103) AS DT_ANALYSE
		 , CONVERT(VARCHAR(10), CASE WHEN REQ3.DT_FIN < @DT_ANALYSE THEN REQ3.DT_PRCH_TRIEN_POT ELSE REQ3.DT_FIN END, 103) AS DT_FIN
		 , CONVERT(VARCHAR(10), REQ3.DT_PRCH_TRIEN_POT, 103) AS DT_PROCHAINE_ECHEANCE
		 , REQ3.MT_LOYER_ACTUEL
	FROM REQ3
),
REQ5 AS
(
	SELECT FK_PROPRIETAIRE
		 , FK_IMMEUBLE
		 , FK_BAIL
		 , NOM_PROPRIETAIRE
		 , NM_IMMEUBLE
		 , NOM_IMEUBLE
		 , CD_BAIL
		 , CD_NATURE_BAIL
		 , LB_NATURE_BAIL
		 , MT_LOYER_ACTUEL
		 , DT_ANALYSE
		 , DT_PROCHAINE_ECHEANCE
		 , DT_FIN
		 , CAST((DATEDIFF(DAY, DT_ANALYSE, DT_PROCHAINE_ECHEANCE))/CAST(365 AS NUMERIC(18,4)) AS NUMERIC(18, 4)) AS ECART_DT_PROCHAINE_ECHEANCE
		 , CAST((DATEDIFF(DAY, DT_ANALYSE, DT_FIN))/CAST(365 AS NUMERIC(18,4)) AS NUMERIC(18, 4)) AS ECART_DT_FIN
		 , CAST(CAST((DATEDIFF(DAY, DT_ANALYSE, DT_PROCHAINE_ECHEANCE))/CAST(365 AS NUMERIC(18,4)) AS NUMERIC(18, 4)) * MT_LOYER_ACTUEL AS NUMERIC(18,2)) AS ECART_DT_PROCHAINE_ECHEANCE_PAR_LOYER
		 , CAST(CAST((DATEDIFF(DAY, DT_ANALYSE, DT_FIN))/CAST(365 AS NUMERIC(18,4)) AS NUMERIC(18, 4)) * MT_LOYER_ACTUEL AS NUMERIC(18,2)) AS ECART_DT_FIN_PAR_LOYER
	FROM REQ4
),
REQ6 AS
(
	SELECT FK_PROPRIETAIRE
		 , FK_IMMEUBLE
		 , NOM_PROPRIETAIRE
		 , NM_IMMEUBLE
		 , NOM_IMEUBLE
		 , CAST(CASE WHEN MT_LOYER_ACTUEL > 0 THEN ECART_DT_PROCHAINE_ECHEANCE_PAR_LOYER/MT_LOYER_ACTUEL ELSE 0 END AS NUMERIC(18,2)) AS WALB
		 , CAST(CASE WHEN MT_LOYER_ACTUEL > 0 THEN ECART_DT_FIN_PAR_LOYER/MT_LOYER_ACTUEL ELSE 0 END AS NUMERIC(18,2)) AS WALT
	FROM
	(
		SELECT FK_PROPRIETAIRE
				 , FK_IMMEUBLE
				 , NOM_PROPRIETAIRE
				 , NM_IMMEUBLE
				 , NOM_IMEUBLE
				 --, CD_BAIL
				 , SUM(MT_LOYER_ACTUEL) AS MT_LOYER_ACTUEL
				 , SUM(ECART_DT_PROCHAINE_ECHEANCE_PAR_LOYER) AS ECART_DT_PROCHAINE_ECHEANCE_PAR_LOYER
				 , SUM(ECART_DT_FIN_PAR_LOYER) AS ECART_DT_FIN_PAR_LOYER
		FROM REQ5
		GROUP BY FK_PROPRIETAIRE, FK_IMMEUBLE, NOM_PROPRIETAIRE, NM_IMMEUBLE, NOM_IMEUBLE
	) SRC
)

SELECT GROUPE.CGROUPE IDENTIFIANT_IMMEUBLE_ESTIA__C
     , P.CD_IMMEUBLE_DREAM R_F_RENCE_IMMEUBLE__C
	 , GROUPE.LGROUPE NAME
     , TIERS.LTIERS FOND
	 , ISNULL(SURF_LOUEE.SURF, 0) TOTAL_DES_SURFACES_LOU_ES__C
	 , ISNULL(WGS.SURF_HAB, 0) SURFACE_UTILE_TOTALE__C --SURFACE_HABITABLE__C
	 , ISNULL((W.VAL_SURF_BUR), 0) SURFACE_DE_BUREAUX__C
	 , ISNULL((W.VAL_SURF_COM), 0) SURFACE_DE_COMMERCES__C
	 , ISNULL((W.VAL_SURF_HAB), 0) SURFACE_D_HABITATION__C
	 , ISNULL((W.VAL_SURF_ARC), 0) SURFACE_D_ARCHIVES__C
	 , ISNULL((W.VAL_SURF_ACT), 0) SURFACE_D_ACTIVIT__C
	 , ISNULL((W.VAL_SURF_HOT), 0) SURFACE_HOTEL__C
	 , 0 SURFACE_LOGISTIQUE__C
	 , 0 SURFACE_MIXTE__C
	 , 0 SURFACE_INDUSTRIELLE__C
	 , 0 SURFACE_SANTE__C
	 , 0 SURFACE_R_SIDENCE_TUDIANTE__C
	 , 0 SURFACE_AUTRE__C
	 , CASE WHEN ISNULL(WGS.SURF_HAB, 0) > 0 THEN (WGS.SURF_HAB - SURF_LOUEE.SURF)/WGS.SURF_HAB ELSE 0 END TAUX_DE_VACANCE_PHYSIQUE__C
	 , ISNULL(ETAGE.NB_ETAGE, 0) NOMBRE_D_TAGES__C
	 , ISNULL(PKG.NB_PK_INT, 0) NOMBRE_DE_PARKINGS_INTERIEURS__C
	 , ISNULL(PKG.NB_PK_EXT, 0) NOMBRE_DE_PARKINGS_EXT_RIEURS__C
	 , GROUPE.LGROUPE ADRESSE1_LIGNE1__C
	 , GROUPE.RUE ADRESSE1_LIGNE2__C
	 , GROUPE.CPOS CODE_POSTAL1__C
	 , GROUPE.VILLE
	 , CASE UPPER(GROUPE.VILLE) WHEN 'BORDEAUX' THEN 'BORDEAUX' WHEN 'LILLE' THEN 'LILLE' WHEN 'LYON' THEN 'LYON' WHEN 'MARSEILLE ' THEN 'MARSEILLE' WHEN 'MONTPELLIER' THEN 'MONTPELLIER' WHEN 'NANTES' THEN 'NANTES' WHEN 'NICE' THEN 'NICE' WHEN 'STRASBOURG' THEN 'STRASBOURG' WHEN 'TOULOUSE' THEN 'TOULOUSE' ELSE 'AUTRES' END VILLE_DE_PROVINCE__C
	 , ISNULL(REQ2.LOYER_ANNUALISE_ACTUEL__C, 0) LOYER_ANNUALISE_ACTUEL__C
	 , ISNULL(REQ2.LOYER_ACTIVIT__C, 0) LOYER_ACTIVIT__C
	 , ISNULL(REQ2.LOYER_ARCHIVES__C, 0) LOYER_ARCHIVES__C
	 , ISNULL(REQ2.LOYER_AUTRE__C, 0) LOYER_AUTRE__C
	 , ISNULL(REQ2.LOYER_BUREAUX__C, 0) LOYER_BUREAUX__C
	 , ISNULL(REQ2.LOYER_COMMERCE__C, 0) LOYER_COMMERCE__C
	 , ISNULL(REQ2.LOYER_R_SIDENCE_ETUDIANTE__C, 0) LOYER_R_SIDENCE_ETUDIANTE__C
	 , ISNULL(REQ2.LOYER_HABITABLE__C, 0) LOYER_HABITABLE__C
	 , ISNULL(REQ2.LOYER_INDUSTRIELLE__C, 0) LOYER_INDUSTRIELLE__C
	 , ISNULL(REQ2.LOYER_LOGISTIQUE__C, 0) LOYER_LOGISTIQUE__C
	 , ISNULL(REQ2.LOYER_MIXTE__C, 0) LOYER_MIXTE__C
	 , ISNULL(REQ2.LOYER_PARKING_EXT__C, 0) LOYER_PARKING_EXT__C
	 , ISNULL(REQ2.LOYER_PARKING_INT__C, 0) LOYER_PARKING_INT__C
	 , ISNULL(REQ2.LOYER_R_SERVE__C, 0) LOYER_R_SERVE__C
	 , ISNULL(REQ2.LOYER_SANT__C, 0) LOYER_SANT__C
	 , ISNULL(REQ2.LOYER_HOTEL__C, 0) LOYER_HOTEL__C
	 , ISNULL(GESTIONNAIRE.PRENOM + ' ' + GESTIONNAIRE.LEMPLOY, '') PM_LOCATIF_INTERNE__C
	 , ISNULL(TECHNICIEN.PRENOM + ' ' + TECHNICIEN.LEMPLOY, '') PM_TECHNIQUE_INTERNE__C
	 , @DT_ANALYSE DATE_DE_MISE_JOUR__C
	 , #VAC_FIN.LOYER_FACIAL_TRIMESTRIEL
	 , #VAC_FIN.LOYER_TRIMESTRIEL_QUITTANCE
	 , #VAC_FIN.LOYER_DU_VACANT
	 , #VAC_FIN.VACANCE_FINANCIERE
	 , REQ6.WALB
	 , REQ6.WALT
FROM MASTER_ESTIA..ESTIA_GROUPE GROUPE
INNER JOIN MASTER_ESTIA..WRK_GROUPE_MANGES WGM
ON WGM.PK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN MASTER_ESTIA..P_TRANSCO_IMMEUBLE_EASYFOLDER AS P ON P.NM_IMMEUBLE_ESTIA = GROUPE.CGROUPE
LEFT JOIN MASTER_ESTIA..WRK_GROUPE_SURFACE WGS
ON WGS.CORG = GROUPE.CORG AND WGS.CAGENCE = GROUPE.CAGENCE AND WGS.CGROUPE = GROUPE.CGROUPE
LEFT JOIN MASTER_ESTIA..ESTIA_TIERS TIERS
ON TIERS.PK_TIERS = WGM.FK_TIERS
LEFT JOIN
(
		SELECT IMMEUBLE.PK_IMMEUBLE
			, SUM(CASE WHEN CD_REG_USAGE = 'BUR' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_BUR
			, SUM(CASE WHEN CD_REG_USAGE = 'COM' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_COM
			, SUM(CASE WHEN CD_REG_USAGE = 'ARC' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ARC
			, SUM(CASE WHEN CD_REG_USAGE = 'HAB' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_HAB
			, SUM(CASE WHEN CD_REG_USAGE = 'HOT' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_HOT
			, SUM(CASE WHEN CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ACT
		FROM MASTER_ESTIA..V_D_IMMEUBLE IMMEUBLE INNER JOIN
		(
			SELECT L.PK_LOT, L.FK_IMMEUBLE, L.NM_LOT, L.CD_USAGE, L.CD_REG_USAGE, L.LB_REG_USAGE, L.LB_USAGE, VAL_SURFACE_REELLE  
			FROM MASTER_ESTIA..V_D_LOT L
			WHERE VAL_SURFACE_REELLE > 0
			AND L.CD_SOCIETE = '11'
		) LOT
		ON LOT.FK_IMMEUBLE = IMMEUBLE.PK_IMMEUBLE
		WHERE IMMEUBLE.CD_SOCIETE = '11'
		GROUP BY IMMEUBLE.PK_IMMEUBLE
) W
ON W.PK_IMMEUBLE = GROUPE.PK_GROUPE
LEFT JOIN 
(
	SELECT FK_GROUPE, MAX(ETAGE) NB_ETAGE
	FROM MASTER_ESTIA..ESTIA_PLOCAL
	WHERE CORG = '11'
	GROUP BY FK_GROUPE
) ETAGE
ON ETAGE.FK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN REQ
ON REQ.PK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN REQ2
ON REQ2.PK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN
(
	SELECT FK_GROUPE
		 , CNATLOG
		 , SUM(CASE WHEN UPPER(LPLOCAL) LIKE '%EXT%' THEN 1 ELSE 0 END) NB_PK_EXT
		 , SUM(CASE WHEN UPPER(LPLOCAL) NOT LIKE '%EXT%' THEN 1 ELSE 0 END) NB_PK_INT
	FROM MASTER_ESTIA..ESTIA_PLOCAL
	WHERE CNATLOG = 'ST'
	AND CORG = '11'
	GROUP BY FK_GROUPE, CNATLOG
) PKG
ON PKG.FK_GROUPE = GROUPE.PK_GROUPE
INNER JOIN MASTER_ESTIA..V_D_MANDAT_GERANCE MANDAT
ON MANDAT.FK_IMMEUBLE = GROUPE.PK_GROUPE
LEFT JOIN
(
	SELECT WRK_HISTO_LOT.FK_GROUPE, WRK_HISTO_LOT.CGROUPE, SUM(V_D_LOT.VAL_SURFACE_REELLE) SURF 
	FROM MASTER_ESTIA..WRK_HISTO_LOT
	LEFT JOIN MASTER_ESTIA..V_D_LOT
	ON V_D_LOT.PK_LOT = WRK_HISTO_LOT.FK_LOCAL
	WHERE (CD_STATUT = 'L' OR CTYPLOG = 'LOG')
	AND CORG = '11'
	AND @DT_ANALYSE BETWEEN MASTER_ESTIA.DBO.WRK_HISTO_LOT.DT_DEBUT_RAT AND ISNULL(MASTER_ESTIA.DBO.WRK_HISTO_LOT.DT_FIN_RAT, '2999/01/01')
	GROUP BY WRK_HISTO_LOT.FK_GROUPE, WRK_HISTO_LOT.CGROUPE
) SURF_LOUEE
ON SURF_LOUEE.FK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN MASTER_ESTIA..ESTIA_MANGES MANGES
ON MANGES.CMANDAT = WGM.CMANDAT
LEFT JOIN MASTER_ESTIA..ESTIA_EMPLOY GESTIONNAIRE
ON GESTIONNAIRE.CEMPLOY = MANGES.CEMPLOY
LEFT JOIN MASTER_ESTIA..ESTIA_EMPLOY TECHNICIEN
ON TECHNICIEN.CEMPLOY = MANGES.TEMPLOY
LEFT JOIN #VAC_FIN
ON #VAC_FIN.FK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN REQ6 
ON REQ6.FK_IMMEUBLE = GROUPE.PK_GROUPE
WHERE GROUPE.CORG = '11' 
AND IND_MANDAT_ACTIF = 'O'
AND GROUPE.CGROUPE NOT IN ('2222', '8888', '4027', '9999', '8510', '1024', '4444', '1111', '3057')
AND UPPER(GROUPE.LGROUPE) NOT LIKE '%GENERIQUE%'
ORDER BY TIERS.PK_TIERS, GROUPE.PK_GROUPE

DROP TABLE #VAC_FIN
DROP TABLE #TRAIT_LOTS
DROP TABLE #VAL_FINANCIERES

END