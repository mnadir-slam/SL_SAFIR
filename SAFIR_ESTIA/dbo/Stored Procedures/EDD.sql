-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[EDD]
( 
	@DT_DEBUT DATETIME,
	@DT_FIN DATETIME,
	@PK_PROPRIETAIRE NVARCHAR(MAX),
	--@PK_IMMEUBLE NVARCHAR(MAX),
	@DATEC BIT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

--select HDEPCS.CMANDAT
--	 , ECRITAUX.CTIERS
--	 , TIERS.LTIERS
--	 , HDEPCS.CORG 
--	 , HDEPCS.CAGENCE
--	 , HDEPCS.CGROUPE
--	 , HDEPCS.REF
--	 , HDEPCS.CCRITDP
--	 , CRITDP.LCRITDP
--	 , HDEPCS.CSCRITDP
--	 , HDEPCS.LIBELLE
--	 , HDEPCS.DEFFETREG
--	 , HDEPCS.DATEC
--	 , HDEPCS.TYPDEP
--	 , HDEPCS.MTHT
--	 , HDEPCS.MTTVA
--	 , HDEPCS.MTTC
--	 , HDEPCS.MTRECUP
--	 , HDEPCS.MTNREC
--	 , HDEPCS.MTTVADED
--	 , BT_CTR_GO.TYPBON
--	 , BT_CTR_GO.NOBON
--from MASTER_ESTIA..ESTIA_HDEPCS HDEPCS
--left join MASTER_ESTIA..ESTIA_CRITDP CRITDP
--on CRITDP.CCRITDP = HDEPCS.CCRITDP 
--left join 
--(
--	select ECRITAUX.FK_TIERS, ECRITAUX.CORG, ECRITAUX.REF, ECRITAUX.CTYPTIERS, ECRITAUX.CTIERS
--	from MASTER_ESTIA..ESTIA_ECRITAUX ECRITAUX
--	LEFT JOIN MASTER_ESTIA..WRK_GROUPE_MANGES WGM
--	ON WGM.CORG = ECRITAUX.CORG AND WGM.CMANDAT = ECRITAUX.CMANDAT
--	where ECRITAUX.CORG = '11'
--	and ECRITAUX.CTYPCOM = 'F'
--	AND ECRITAUX.FK_TIERS IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_PROPRIETAIRE,',')) 
--	AND WGM.PK_GROUPE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,','))
--) ECRITAUX
--on ECRITAUX.REF = HDEPCS.REF 
--left join MASTER_ESTIA..ESTIA_TIERS TIERS
--on TIERS.CTYPTIERS = ECRITAUX.CTYPTIERS and TIERS.CTIERS = ECRITAUX.CTIERS
----on TIERS.PK_TIERS = HDEPCS.FK_TIERS
--LEFT JOIN MASTER_ESTIA..WRK_GROUPE_MANGES WGM
--ON WGM.PK_GROUPE = HDEPCS.FK_GROUPE
--LEFT JOIN MASTER_ESTIA..ESTIA_TIERS PROPRIETAIRE
--ON PROPRIETAIRE.PK_TIERS = WGM.FK_TIERS
--left join
--(
--	select PECRIP.CORG, PECRIP.REF, 'GO' as TYPBON, PECRIP.COPE as NOBON
--	from MASTER_ESTIA..ESTIA_PECRIP PECRIP
--	where PECRIP.COPE is not null
--	and PECRIP.CORG = '11'
--	union
--	select LIENBN.CORG, LIENBN.REF, LIENBN.TYPBON, case LIENBN.TYPBON when 'BT' then LIENBN.[0BON] else substring(LIENBN.BANAL, 1, 12) end as NOBON
--	from MASTER_ESTIA..ESTIA_LIENBN LIENBN
--	where LIENBN.TYPFAC = 'F'
--	and LIENBN.CORG = '11'
--) BT_CTR_GO
--on BT_CTR_GO.CORG = HDEPCS.CORG and BT_CTR_GO.REF = HDEPCS.REF
--where HDEPCS.CORG = '11'
--and CASE WHEN @DATEC = 1 THEN HDEPCS.DATEC ELSE HDEPCS.DEFFETREG END BETWEEN @DT_DEBUT AND @DT_FIN
--AND WGM.FK_TIERS IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_PROPRIETAIRE,',')) 
--AND HDEPCS.FK_GROUPE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,','))
--AND HDEPCS.CMANDAT IS NOT NULL

select HDEPCS.CMANDAT
	 , ECRITAUX.CTIERS
	 , TIERS.LTIERS
	 , HDEPCS.CORG 
	 , HDEPCS.CAGENCE
	 , HDEPCS.CGROUPE
	 , HDEPCS.REF
	 , HDEPCS.CCRITDP
	 , CRITDP.LCRITDP
	 , HDEPCS.CSCRITDP
	 , HDEPCS.LIBELLE
	 , HDEPCS.DEFFETREG
	 , HDEPCS.DATEC
	 , HDEPCS.TYPDEP
	 , ECRITAUX.CJOURNAL
	 , ECRITAUX.NOPIECE
	 , HDEPCS.MTHT
	 , HDEPCS.MTTVA
	 , HDEPCS.MTTC
	 , HDEPCS.MTRECUP
	 , HDEPCS.MTNREC
	 , HDEPCS.MTTVADED
	 , BT_CTR_GO.TYPBON
	 , BT_CTR_GO.NOBON
from MASTER_ESTIA..ESTIA_HDEPCS HDEPCS
left join MASTER_ESTIA..ESTIA_CRITDP CRITDP
on CRITDP.CCRITDP = HDEPCS.CCRITDP 
left join 
(
	select ECRITAUX.FK_TIERS, ECRITAUX.CORG, ECRITAUX.REF, ECRITAUX.CTYPTIERS, ECRITAUX.CTIERS, ECRITAUX.CJOURNAL, ECRITAUX.NOPIECE
	from MASTER_ESTIA..ESTIA_ECRITAUX ECRITAUX
	where ECRITAUX.CORG = '11'
	--and ECRITAUX.CTYPCOM = 'F'
) ECRITAUX
on ECRITAUX.REF = HDEPCS.REF 
left join MASTER_ESTIA..ESTIA_TIERS TIERS
on TIERS.PK_TIERS = ECRITAUX.FK_TIERS
--on TIERS.CTYPTIERS = ECRITAUX.CTYPTIERS and TIERS.CTIERS = ECRITAUX.CTIERS
LEFT JOIN MASTER_ESTIA..WRK_GROUPE_MANGES WGM
ON WGM.PK_GROUPE = HDEPCS.FK_GROUPE
LEFT JOIN MASTER_ESTIA..ESTIA_TIERS PROPRIETAIRE
ON PROPRIETAIRE.PK_TIERS = WGM.FK_TIERS
left join
(
	select PECRIP.CORG, PECRIP.REF, 'GO' as TYPBON, PECRIP.COPE as NOBON
	from MASTER_ESTIA..ESTIA_PECRIP PECRIP
	where PECRIP.COPE is not null
	and PECRIP.CORG = '11'
	union
	--select LIENBN.CORG, LIENBN.REF, LIENBN.TYPBON, case LIENBN.TYPBON when 'BT' then LIENBN.[0BON] else substring(LIENBN.BANAL, 1, 12) end as NOBON
	--from MASTER_ESTIA..ESTIA_LIENBN LIENBN
	--where LIENBN.TYPFAC = 'F'
	--and LIENBN.CORG = '11'
	select ECRIB.CORG, ECRIB.REF, ECRIB.TYPBON, cast(ECRIB.NOBON as VARCHAR(30)) NOBON 
	from MASTER_ESTIA..ESTIA_ECRIB ECRIB
	where ECRIB.CORG = '11'
	and ECRIB.TYPBON = 'BT'
	union
	select LIENBN.CORG, LIENBN.REF, LIENBN.TYPBON, substring(LIENBN.BANAL, 1, 12) NOBON
	from MASTER_ESTIA..ESTIA_LIENBN LIENBN
	where LIENBN.TYPFAC = 'F'
	and LIENBN.CORG = '11'
	and LIENBN.TYPBON = 'CTR'
) BT_CTR_GO
on BT_CTR_GO.CORG = HDEPCS.CORG and BT_CTR_GO.REF = HDEPCS.REF
where HDEPCS.CORG = '11'
and CASE WHEN @DATEC = 1 THEN HDEPCS.DATEC ELSE HDEPCS.DEFFETREG END BETWEEN @DT_DEBUT AND @DT_FIN
AND WGM.FK_TIERS IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_PROPRIETAIRE,',')) 
--AND HDEPCS.FK_GROUPE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,','))
AND HDEPCS.CMANDAT IS NOT NULL


END