-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GET_PATRIMOINE_ACTIF]
(
	@DT_ANALYSE DATETIME
)
AS
BEGIN

	SET NOCOUNT ON;

--DECLARE @DT_ANALYSE DATETIME
--set @DT_ANALYSE = CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),103), 103);

SELECT TIERS.PK_TIERS
	 , GROUPE.PK_GROUPE
	 , GROUPE.CGROUPE IMMEUBLE_ESTIA
	 , GROUPE.CPOS CODE_POSTAL
	 , GROUPE.VILLE
	 , GROUPE.LGROUPE ADRESSE1
	 , GROUPE.RUE ADRESSE2
	 , NULL AS COMMENTAIRES
     --, P.CD_IMMEUBLE_DREAM R_F_RENCE_IMMEUBLE__C
	 --, GROUPE.LGROUPE NAME
     , TIERS.LTIERS PROPRIETAIRE
	 , NULL AS COPROPRIETE
	 , ISNULL(IMMEUBLE_LOT.NB_LOT_HAB, 0) NB_LOT_HABITATION
	 , ISNULL(IMMEUBLE_LOT.NB_LOT_BUR, 0) NB_LOT_BUREAU
	 , ISNULL(IMMEUBLE_LOT.NB_LOT_COM, 0) NB_LOT_COMMERCES
	 , ISNULL(IMMEUBLE_LOT.NB_LOT_ACT, 0) NB_LOT_ACTIVITE
	 , ISNULL(IMMEUBLE_LOT.NB_LOT_ARC, 0) NB_LOT_ARCHIVE
	 , ISNULL(IMMEUBLE_LOT.NB_LOT_HAB + IMMEUBLE_LOT.NB_LOT_BUR + IMMEUBLE_LOT.NB_LOT_COM + IMMEUBLE_LOT.NB_LOT_ACT + IMMEUBLE_LOT.NB_LOT_ARC, 0) NOMBRE_TOTAL_LOTS
	 , ISNULL(PKG.NB_PK_INT, 0) NOMBRE_DE_PARKINGS_INTERIEURS__C
	 , ISNULL(PKG.NB_PK_EXT, 0) NOMBRE_DE_PARKINGS_EXT_RIEURS__C
	 , ISNULL(PKG.NB_PK_INT + PKG.NB_PK_EXT, 0) NOMBRE_TOTAL_PARKINGS
	 , ISNULL((VAL_SURFACE.VAL_SURF_HAB), 0) SURF_HABITATION
	 , ISNULL((VAL_SURFACE.VAL_SURF_BUR), 0) SURF_BUREAUX
	 , ISNULL((VAL_SURFACE.VAL_SURF_COM), 0) SURF_COMMERCES
	 , ISNULL(NULL, 0) SURF_STATIONNEMENT
	 , ISNULL((VAL_SURFACE.VAL_SURF_ACT), 0) SURF_ACTIVITE
	 , ISNULL((VAL_SURFACE.VAL_SURF_ARC), 0) SURF_ARCHIVES
	 , ISNULL(SURF_LOUEE.SURF, 0) TOTAL_SURF_LOUEES
	 , ISNULL(WGS.SURF_HAB, 0) SURF_UTILE_TOTALE
	 , ISNULL(CASE WHEN DATEPART(YEAR, GROUPE.DATACHAT) < 1900 THEN '19000101' ELSE GROUPE.DATACHAT END, ISNULL(CASE WHEN DATEPART(YEAR, GROUPE.DFCONS) < 1900 THEN '19000101' ELSE GROUPE.DFCONS END, CASE WHEN DATEPART(YEAR, GROUPE.DATSERV) < 1900 THEN '19000101' ELSE GROUPE.DATSERV END)) DT_ACQUISITION
	 , MANDAT.DT_DEBUT_GESTION
	 , MANDAT.DT_FIN_GESTION

FROM MASTER_ESTIA..ESTIA_GROUPE GROUPE
INNER JOIN MASTER_ESTIA..WRK_GROUPE_MANGES WGM
ON WGM.PK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN MASTER_ESTIA..P_TRANSCO_IMMEUBLE_EASYFOLDER AS P ON P.NM_IMMEUBLE_ESTIA = GROUPE.CGROUPE
LEFT JOIN MASTER_ESTIA..WRK_GROUPE_SURFACE WGS
ON WGS.CORG = GROUPE.CORG AND WGS.CAGENCE = GROUPE.CAGENCE AND WGS.CGROUPE = GROUPE.CGROUPE
LEFT JOIN MASTER_ESTIA..ESTIA_TIERS TIERS
ON TIERS.PK_TIERS = WGM.FK_TIERS
LEFT JOIN
(
		SELECT IMMEUBLE.PK_IMMEUBLE
			, SUM(CASE WHEN CD_REG_USAGE = 'BUR' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_BUR
			, SUM(CASE WHEN CD_REG_USAGE = 'COM' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_COM
			, SUM(CASE WHEN CD_REG_USAGE = 'ARC' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ARC
			, SUM(CASE WHEN CD_REG_USAGE = 'HAB' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_HAB
			, SUM(CASE WHEN CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ACT
		FROM MASTER_ESTIA..V_D_IMMEUBLE IMMEUBLE INNER JOIN
		(
			SELECT L.PK_LOT, L.FK_IMMEUBLE, L.NM_LOT, L.CD_USAGE, L.CD_REG_USAGE, L.LB_REG_USAGE, L.LB_USAGE, VAL_SURFACE_REELLE  
			FROM MASTER_ESTIA..V_D_LOT L
			WHERE VAL_SURFACE_REELLE > 0
			AND L.CD_SOCIETE = '11' --AND FK_IMMEUBLE = 368
		) LOT
		ON LOT.FK_IMMEUBLE = IMMEUBLE.PK_IMMEUBLE
		WHERE IMMEUBLE.CD_SOCIETE = '11'
		GROUP BY IMMEUBLE.PK_IMMEUBLE
) VAL_SURFACE
ON VAL_SURFACE.PK_IMMEUBLE = GROUPE.PK_GROUPE
LEFT JOIN
(
		SELECT IMMEUBLE.PK_IMMEUBLE
			, SUM(CASE WHEN CD_REG_USAGE = 'BUR' THEN ISNULL(1, 0) ELSE 0 END) NB_LOT_BUR
			, SUM(CASE WHEN CD_REG_USAGE = 'COM' THEN ISNULL(1, 0) ELSE 0 END) NB_LOT_COM
			, SUM(CASE WHEN CD_REG_USAGE = 'ARC' THEN ISNULL(1, 0) ELSE 0 END) NB_LOT_ARC
			, SUM(CASE WHEN CD_REG_USAGE = 'HAB' THEN ISNULL(1, 0) ELSE 0 END) NB_LOT_HAB
			, SUM(CASE WHEN CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(1, 0) ELSE 0 END) NB_LOT_ACT
		FROM MASTER_ESTIA..V_D_IMMEUBLE IMMEUBLE INNER JOIN
		(
			SELECT L.PK_LOT, L.FK_IMMEUBLE, L.NM_LOT, L.CD_USAGE, L.CD_REG_USAGE, L.LB_REG_USAGE, L.LB_USAGE, VAL_SURFACE_REELLE  
			FROM MASTER_ESTIA..V_D_LOT L
			WHERE VAL_SURFACE_REELLE > 0
			AND L.CD_SOCIETE = '11'
		) LOT
		ON LOT.FK_IMMEUBLE = IMMEUBLE.PK_IMMEUBLE
		WHERE IMMEUBLE.CD_SOCIETE = '11' --AND PK_IMMEUBLE = 368
		GROUP BY IMMEUBLE.PK_IMMEUBLE
) IMMEUBLE_LOT
ON IMMEUBLE_LOT.PK_IMMEUBLE = GROUPE.PK_GROUPE
LEFT JOIN
(
	SELECT FK_GROUPE
		 , CNATLOG
		 , SUM(CASE WHEN UPPER(LPLOCAL) LIKE '%EXT%' THEN 1 ELSE 0 END) NB_PK_EXT
		 , SUM(CASE WHEN UPPER(LPLOCAL) NOT LIKE '%EXT%' THEN 1 ELSE 0 END) NB_PK_INT
	FROM MASTER_ESTIA..ESTIA_PLOCAL
	WHERE CNATLOG = 'ST'
	AND CORG = '11'
	GROUP BY FK_GROUPE, CNATLOG
) PKG
ON PKG.FK_GROUPE = GROUPE.PK_GROUPE
INNER JOIN MASTER_ESTIA..V_D_MANDAT_GERANCE MANDAT
ON MANDAT.FK_IMMEUBLE = GROUPE.PK_GROUPE
LEFT JOIN
(
	SELECT WRK_HISTO_LOT.FK_GROUPE, WRK_HISTO_LOT.CGROUPE, SUM(V_D_LOT.VAL_SURFACE_REELLE) SURF 
	FROM MASTER_ESTIA..WRK_HISTO_LOT
	LEFT JOIN MASTER_ESTIA..V_D_LOT
	ON V_D_LOT.PK_LOT = WRK_HISTO_LOT.FK_LOCAL
	WHERE (CD_STATUT = 'L' OR CTYPLOG = 'LOG')
	AND CORG = '11'
	AND @DT_ANALYSE BETWEEN MASTER_ESTIA.DBO.WRK_HISTO_LOT.DT_DEBUT_RAT AND ISNULL(MASTER_ESTIA.DBO.WRK_HISTO_LOT.DT_FIN_RAT, '2999/01/01')
	GROUP BY WRK_HISTO_LOT.FK_GROUPE, WRK_HISTO_LOT.CGROUPE
) SURF_LOUEE
ON SURF_LOUEE.FK_GROUPE = GROUPE.PK_GROUPE
LEFT JOIN MASTER_ESTIA..ESTIA_MANGES MANGES
ON MANGES.CMANDAT = WGM.CMANDAT
WHERE GROUPE.CORG = '11' 
AND IND_MANDAT_ACTIF = 'O'
AND GROUPE.CGROUPE NOT IN ('2222', '8888', '4027', '9999', '8510', '1024', '4444', '1111', '3057')
AND UPPER(GROUPE.LGROUPE) NOT LIKE '%GENERIQUE%'
AND MANDAT.DT_DEBUT_GESTION <= @DT_ANALYSE
--AND GROUPE.CGROUPE = 4620
ORDER BY TIERS.PK_TIERS, GROUPE.PK_GROUPE

END