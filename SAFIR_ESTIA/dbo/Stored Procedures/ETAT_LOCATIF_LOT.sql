-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[ETAT_LOCATIF_LOT] 
(
	@PK_TEMPS DATETIME,
	@PK_PROPRIETAIRE INT,
	@PK_IMMEUBLE NVARCHAR(MAX),
	@PK_LOCATAIRE NVARCHAR(MAX)
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT
   F_ETAT_LOCATIF.DT_REF
  ,D_PROPRIETAIRE.CD_PROPRIETAIRE
  ,D_PROPRIETAIRE.NM_PROPRIETAIRE
  ,D_PROPRIETAIRE.NOM_PROPRIETAIRE
  ,D_IMMEUBLE.CD_IMMEUBLE 
  ,D_IMMEUBLE.NM_IMMEUBLE
  ,D_IMMEUBLE.ADRLGN1
  ,D_LOT.CD_LOT
  ,D_LOT.NM_LOT
  ,F_ETAT_LOCATIF.VAL_SURFACE_LOUEE + F_ETAT_LOCATIF.VAL_SURFACE_VACANTE AS VAL_SURFACE
  , (CASE WHEN CD_REG_USAGE = 'BUR' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_BUR
  , (CASE WHEN CD_REG_USAGE = 'COM' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_COM
  , (CASE WHEN CD_REG_USAGE = 'ARC' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ARC
  , (CASE WHEN CD_REG_USAGE = 'HAB' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_HAB
  , (CASE WHEN CD_REG_USAGE = 'HOT' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_HOT
  , (CASE WHEN CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ACT
  ,D_LOT.LB_USAGE
  ,dbo.initcap(D_LOT.LB_TYPE_LOT) AS LB_TYPE_LOT
  ,D_LOT.ETAGE
  ,D_LOCATAIRE.CD_LOCATAIRE
  ,D_LOCATAIRE.NM_LOCATAIRE
	                 , CASE WHEN F_ETAT_LOCATIF.CD_STATUT = 'L' THEN
			CASE WHEN F_ETAT_LOCATIF.FK_LOCATAIRE = '-88888'
			THEN 'Gardien' ELSE dbo.initcap(D_LOCATAIRE.NOM_LOCATAIRE) END
		  ELSE 'Vacant'  
		  END AS NOM_LOCATAIRE
  ,F_ETAT_LOCATIF.CCOMPTE
  ,CASE WHEN F_ETAT_LOCATIF.FK_LOCATAIRE = '-88888' THEN '88888' ELSE D_BAIL.CD_BAIL END AS CD_BAIL
  ,CASE WHEN F_ETAT_LOCATIF.FK_LOCATAIRE = '-88888' THEN 88888 ELSE D_BAIL.NM_BAIL END AS NM_BAIL
  ,dbo.Initcap(D_BAIL.LB_NATURE_BAIL) as LB_NATURE_BAIL
  ,D_BAIL.LB_DUREE
  ,D_BAIL.DT_SIGNATURE
  ,D_BAIL.DT_EFFET
  ,D_BAIL.DT_ENTREE
  ,D_BAIL.DT_CONGE
  ,D_BAIL.DT_SORTIE
  ,D_BAIL.DT_PRCH_TRIEN_POT
  ,D_BAIL.DT_RISQUE
  ,D_BAIL.CD_TERME
  ,D_BAIL.LB_TERME
  ,F_ETAT_LOCATIF.CD_STATUT
  ,D_LOT.NB_PARKINGS
  ,D_BAIL.LB_TYPE_CAUTION
  ,D_BAIL.DT_DEBUT_FRANCHISE
  ,D_BAIL.DT_FIN_FRANCHISE
  ,F_ETAT_LOCATIF.MT_LOYER_ACTUEL
  ,F_ETAT_LOCATIF.MT_DG
  ,F_ETAT_LOCATIF.MT_CHARGES
  ,F_ETAT_LOCATIF.LB_INDICE_INITIAL
  ,F_ETAT_LOCATIF.DT_INDICE_INITIAL
  ,F_ETAT_LOCATIF.VAL_INDICE_INITIAL
  ,F_ETAT_LOCATIF.LB_INDICE_ACTUEL
  ,F_ETAT_LOCATIF.DT_INDICE_ACTUEL
  ,F_ETAT_LOCATIF.VAL_INDICE_ACTUEL
  ,D_BAIL.PC_RECUP_TF
  ,D_BAIL.PC_RECUP_HO
  ,D_BAIL.PC_RECUP_TB
  ,D_BAIL.PC_RECUP_AS
  ,D_BAIL.PC_RECUP_606
FROM
  F_ETAT_LOCATIF
  LEFT OUTER JOIN D_IMMEUBLE
    ON F_ETAT_LOCATIF.FK_IMMEUBLE = D_IMMEUBLE.PK_IMMEUBLE
  LEFT OUTER JOIN D_LOT
    ON F_ETAT_LOCATIF.PK_LOT = D_LOT.PK_LOT
  LEFT OUTER JOIN D_BAIL
    ON F_ETAT_LOCATIF.FK_BAIL = D_BAIL.PK_BAIL
  LEFT OUTER JOIN D_LOCATAIRE
    ON F_ETAT_LOCATIF.FK_LOCATAIRE = D_LOCATAIRE.PK_LOCATAIRE
  LEFT OUTER JOIN D_PROPRIETAIRE
    ON F_ETAT_LOCATIF.FK_PROPRIETAIRE = D_PROPRIETAIRE.PK_PROPRIETAIRE
  LEFT OUTER JOIN D_MANDAT_GERANCE
    ON F_ETAT_LOCATIF.FK_MANDAT_GERANCE = D_MANDAT_GERANCE.PK_MANDAT_GERANCE
WHERE
  F_ETAT_LOCATIF.PK_TEMPS = @PK_TEMPS
  AND F_ETAT_LOCATIF.FK_PROPRIETAIRE = @PK_PROPRIETAIRE
  AND F_ETAT_LOCATIF.FK_IMMEUBLE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,','))
  AND ISNULL(F_ETAT_LOCATIF.FK_LOCATAIRE, 99999) IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_LOCATAIRE,','))
  AND D_MANDAT_GERANCE.IND_MANDAT_ACTIF = 'O'
  AND CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),103), 103) BETWEEN D_LOT.DT_DEBUT_EN_SERVICE AND ISNULL(D_LOT.DT_FIN_EN_SERVICE,'2999/01/01')
ORDER BY
  F_ETAT_LOCATIF.DT_REF 
 ,D_PROPRIETAIRE.NM_PROPRIETAIRE
 ,D_IMMEUBLE.NM_IMMEUBLE
 ,F_ETAT_LOCATIF.CD_STATUT
 ,D_BAIL.NM_BAIL
 ,D_LOT.NM_LOT

END