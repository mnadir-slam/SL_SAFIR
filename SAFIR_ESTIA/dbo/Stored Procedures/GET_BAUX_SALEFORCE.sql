-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GET_BAUX_SALEFORCE]
(
	@DT_ANALYSE DATETIME
)
AS
BEGIN

	SET NOCOUNT ON;

select BAIL.PK_BAIL
     , TIERS.PK_TIERS
	 , EASYFOLDER_BAUX.IDENTIFIANT_BAIL_DREAM
	 , ISNULL(EASYFOLDER_BAUX.IDENTIFIANT_DREAM_IMMEUBLE, P.CD_IMMEUBLE_DREAM) as IDENTIFIANT_DREAM_IMMEUBLE
	 , IMMEUBLE.NM_IMMEUBLE
	 , case when BAIL.DT_SORTIE IS NULL then 'Oui' else 'Non' end as ACTIF
	 , TIERS.LTIERS AS LOCATAIRE_PRINCIPAL--EASYFOLDER_BAUX.LOCATAIRE_PRINCIPAL
	 --, case when TIERS.POUM = 'P' then 'Personne physique' else LEFT(TIERS.SIRET, 9) end as SIREN
	 , ISNULL(case when len(RCS_COMPLETE.SIREN) = 8 then dbo.LPAD(RCS_COMPLETE.SIREN, 10, '0') else RCS_COMPLETE.SIREN end, case when TIERS.POUM = 'P' then 'Personne physique' else LEFT(TIERS.SIRET, 9) end) as SIREN
	 , TIERS.RCS
	 , convert(varchar(10), EASYFOLDER_BAUX.DT_EFFET, 103) as DT_EFFET
	 , convert(VARCHAR(10), EASYFOLDER_BAUX.DT_FIN, 103) as DT_FIN
	 --, L.IDENTIFIANT_ESTIA_COMPTE
	 --, L.NOBAIL_ESTIA 
	 --, dbo.LPAD(L.NOBAIL_ESTIA, 2, '0') as NOBAIL_ESTIA
	 --, cast(L.IDENTIFIANT_ESTIA_COMPTE as varchar(30)) + dbo.LPAD(L.NOBAIL_ESTIA, 2, '0') as NM_BAIL 
	 , VAL_FIN.MT_LOYER_ACTUEL AS LOYER_ANNUEL_FACIAL
	 , VAL_FIN.MT_LOYER_ACTUEL_FACTURABLE - ABS(VAL_FIN.MT_LOYER_FRANCHISE) - ABS(VAL_FIN.MT_PALIER) as DERNIER_TERME_ANNUALISE --MT_LOYER_ACTUEL_FACTURABLE
	 , CALCUL_SURFACE.VAL_SURF_BUR + CALCUL_SURFACE.VAL_SURF_COM + CALCUL_SURFACE.VAL_SURF_ACT + CALCUL_SURFACE.VAL_SURF_ARC + CALCUL_SURFACE.VAL_SURF_HAB + CALCUL_SURFACE.VAL_SURF_HOT AS VAL_SURF_BAIL
	 , CALCUL_SURFACE.VAL_SURF_BUR
	 , CALCUL_SURFACE.VAL_SURF_COM
	 , CALCUL_SURFACE.VAL_SURF_ARC
	 , CALCUL_SURFACE.VAL_SURF_HAB
	 , CALCUL_SURFACE.VAL_SURF_HOT
	 , CALCUL_SURFACE.VAL_SURF_ACT
from MASTER_ESTIA..L_INTERFACE_EASYFOLDER_BAUX as EASYFOLDER_BAUX 
left join SAFIR_ESTIA..D_BAIL BAIL
on BAIL.NM_IMMEUBLE = EASYFOLDER_BAUX.IDENTIFIANT_ESTIA_IMMEUBLE and BAIL.NM_BAIL = cast(EASYFOLDER_BAUX.IDENTIFIANT_ESTIA_COMPTE as varchar(30)) + dbo.LPAD(EASYFOLDER_BAUX.NOBAIL_ESTIA, 2, '0')
left join MASTER_ESTIA..ESTIA_TIERS TIERS
on TIERS.PK_TIERS = BAIL.FK_LOCATAIRE
left join
--(
--	select	WHL.FK_ORG
--		  , WHL.FK_PROPRIETAIRE
--		  , WHL.FK_GROUPE
--		  , WHL.FK_BAIL 
--		  --, WHL.FK_LOCAL
--		  --, L.LB_REG_USAGE
--		  , SUM(case when L.CD_REG_USAGE = 'BUR' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_BUR
--		  , SUM(case when L.CD_REG_USAGE = 'COM' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_COM
--		  , SUM(case when L.CD_REG_USAGE = 'ARC' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_ARC
--		  , SUM(case when L.CD_REG_USAGE = 'HAB' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_HAB
--		  , SUM(case when L.CD_REG_USAGE = 'HOT' then ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_HOT
--		  , SUM(case when L.CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB', 'HOT') THEN ISNULL(L.VAL_SURFACE_REELLE, 0) else 0 end) VAL_SURF_ACT
--	from MASTER_ESTIA..WRK_HISTO_LOT WHL
--	left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
--	on DMG.PK_MANDAT_GERANCE = WHL.FK_MANGES
--	inner join SAFIR_ESTIA..D_LOT L
--	on L.PK_LOT = WHL.FK_LOCAL
--	where WHL.CORG = '11'
--	and DMG.IND_MANDAT_ACTIF = 'O'
--	and CONVERT(DATETIME, CONVERT(VARCHAR(10),@DT_ANALYSE,103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '19000101') AND ISNULL(L.DT_FIN_EN_SERVICE,'29990101')
--	--and (WHL.CD_STATUT = 'L' or L.CD_TYPE_LOT = 'LOG')
--	and @DT_ANALYSE between WHL.DT_DEBUT_RAT AND ISNULL(WHL.DT_FIN_RAT, '2999/01/01')
--	--and IND_LOT_PRINCIPAL = case when CD_STATUT = 'L' then 'O' when CD_STATUT = 'V' then 'N' end
--	group by WHL.FK_ORG
--		  , WHL.FK_PROPRIETAIRE
--		  , WHL.FK_GROUPE
--		  , WHL.FK_BAIL 
--) CALCUL_SURFACE
(
	select * from f_GET_LEASE_VALUES(@DT_ANALYSE)
) CALCUL_SURFACE
on CALCUL_SURFACE.FK_BAIL = BAIL.PK_BAIL
left join SAFIR_ESTIA..D_IMMEUBLE IMMEUBLE
on IMMEUBLE.PK_IMMEUBLE = BAIL.FK_IMMEUBLE
left join SAFIR_ESTIA..D_MANDAT_GERANCE DMG
on DMG.FK_IMMEUBLE = IMMEUBLE.PK_IMMEUBLE
left join
--(
--	select LOCATION.FK_GROUPE AS PK_GROUPE, LOCATION.FK_BAIL AS PK_BAIL
--			, LOCATION.PERIOD AS NB_MOIS_FRQ
--			, SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N') THEN HQLOCAT.NB 
--					   WHEN PSRE.IND_CALCUL_LOYER = 'O' AND (PSRE.IND_CALCUL_FRANCHISE = 'O' OR PSRE.IND_CALCUL_PALIER = 'O') THEN 0 ELSE 0 END) AS MT_LOYER_ACTUEL
--		    , SUM(CASE WHEN PSRE.IND_CALCUL_LOYER = 'O' AND PSRE.IND_CALCUL_FRANCHISE = 'N' AND PSRE.IND_CALCUL_PALIER = 'N' AND PSRE.CD_SOUS_REG_ELTFAC <> 'LOR' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_ACTUEL_FACTURABLE
--			, SUM(CASE WHEN PSRE.IND_CALCUL_FRANCHISE = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_LOYER_FRANCHISE
--			, SUM(CASE WHEN PSRE.IND_CALCUL_PALIER = 'O' THEN HQLOCAT.NB ELSE 0 END) AS MT_PALIER
--	from MASTER_ESTIA..ESTIA_LOCATION AS LOCATION
--		inner join MASTER_ESTIA..ESTIA_HQLOCAT AS HQLOCAT
--			on HQLOCAT.CORG = LOCATION.CORG
--			and HQLOCAT.CAGENCE = LOCATION.CAGENCE
--			and HQLOCAT.CGROUPE = LOCATION.CGROUPE
--			and HQLOCAT.CIMMEUB = LOCATION.CIMMEUB
--			and HQLOCAT.CLOCAL = LOCATION.CLOCAL
--			and HQLOCAT.OCC = LOCATION.OCC
--		left join MASTER_ESTIA..P_RUBRIQUE AS P
--			on P.CD_RUBRIQUE = HQLOCAT.CRUB
--		left join MASTER_ESTIA..P_SOUS_REG_ELTFAC AS PSRE
--			on PSRE.CD_SOUS_REG_ELTFAC = P.CD_SOUS_REG_ELTFAC
--	where LOCATION.FK_BAIL IS NOT NULL
--	and P.CD_SOUS_REG_ELTFAC not in ('LOR')
--	and @DT_ANALYSE BETWEEN HQLOCAT.DDEB AND ISNULL(HQLOCAT.DFIN, '2999/01/01')
--	AND LOCATION.FK_BAIL IS NOT NULL
--	AND (LOCATION.DATSORQUIT IS NULL OR LOCATION.DATSORQUIT > @DT_ANALYSE)
--	group by LOCATION.FK_GROUPE, LOCATION.FK_BAIL, LOCATION.PERIOD
--) AS VAL_FIN
(
	select * from f_GET_LEASE_FINANCIAL_DATA(@DT_ANALYSE)
) VAL_FIN
on VAL_FIN.PK_BAIL = BAIL.PK_BAIL
left join MASTER_ESTIA..P_TRANSCO_IMMEUBLE_EASYFOLDER P
on IMMEUBLE.NM_IMMEUBLE = P.NM_IMMEUBLE_ESTIA
left join RCS_COMPLETE
on RCS_COMPLETE.IDENTIFIANT_BAIL_DREAM = EASYFOLDER_BAUX.IDENTIFIANT_BAIL_DREAM
where  (BAIL.CD_SOCIETE IS NULL OR BAIL.CD_SOCIETE = '11')
and DMG.IND_MANDAT_ACTIF = 'O'
--and L.IDENTIFIANT_ESTIA_COMPTE = 4040
--order by BAIL.NM_IMMEUBLE, BAIL.NM_BAIL
order by ISNULL(EASYFOLDER_BAUX.IDENTIFIANT_DREAM_IMMEUBLE, P.CD_IMMEUBLE_DREAM), EASYFOLDER_BAUX.IDENTIFIANT_BAIL_DREAM

END