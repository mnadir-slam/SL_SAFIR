-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[ETAT_LOCATIF_BAIL] 
(
	@PK_TEMPS DATETIME,
	@PK_PROPRIETAIRE INT,
	@PK_IMMEUBLE NVARCHAR(MAX),
	@PK_LOCATAIRE NVARCHAR(MAX),
	@ANNUEL BIT
)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
WITH REQ AS
(
	SELECT FEL.DT_REF
	, FEL.FK_PROPRIETAIRE
	, FEL.FK_IMMEUBLE
	, ISNULL(FEL.FK_BAIL, 0) AS FK_BAIL
	, DP.CD_PROPRIETAIRE
	, DP.NM_PROPRIETAIRE
	, dbo.initcap(DP.NOM_PROPRIETAIRE) AS NOM_PROPRIETAIRE
	, DI.CD_IMMEUBLE 
	, DI.NM_IMMEUBLE
	, UPPER(DI.ADRLGN1) AS ADRLGN1
	, DI.SURFACE_TOTALE
	, DI.VLM_ARCHIVE
	, DI.VLM_PARKING_DOUBLE
	, DI.VLM_PARKING_SIMPLE
	, FEL.FK_LOCATAIRE
	, DL.CD_LOCATAIRE
	, DL.NM_LOCATAIRE
	, CASE WHEN FEL.CD_STATUT = 'L' THEN
	CASE WHEN ABS(FEL.FK_LOCATAIRE) = '88888'
	THEN 'Gardien' ELSE dbo.initcap(DL.NOM_LOCATAIRE) END
	ELSE 'Vacant'  
	END AS NOM_LOCATAIRE
	, DB.CD_LOT_PRINCIPAL
	, DB.CD_BAIL
	, DB.NM_BAIL
	, dbo.initcap(DB.LB_NATURE_BAIL) AS LB_NATURE_BAIL
	, DB.LB_DUREE
	, DB.DT_SIGNATURE
	, DB.DT_EFFET
	, DATEADD(MONTH, (DB.DUREE_AN*12) + DB.DUREE_MOIS, DB.DT_EFFET)-1 AS DT_FIN
	, DB.DT_ENTREE
	, DB.DT_CONGE
	, DB.DT_SORTIE
	, DB.DT_PRCH_TRIEN_POT
	, CASE WHEN P_NATURE_BAIL.CD_TYPE_BAIL = 'COM' THEN DATEADD(day, -1, DB.DT_RISQUE) ELSE DATEADD(day, -1, DATEADD(month, -NB_MOIS_PREAVIS, DT_PRCH_TRIEN_POT)) END AS DT_RISQUE
	, FEL.CCOMPTE
	, FEL.CD_STATUT 
	, FEL.LB_STATUT
	, DB.LB_TYPE_CAUTION
	, DB.DT_DEBUT_FRANCHISE
	, DB.DT_FIN_FRANCHISE
	, ISNULL(DB.MT_LOYER_BASE, VLB.MT_LOYER_BASE) AS MT_LOYER_BASE
	--, DB.MT_DG_BASE AS MT_DG_BASE
	, SUM(FEL.MT_LOYER_ACTUEL) AS MT_LOYER_ACTUEL
	, SUM(FEL.MT_LOYER_ACTUEL_FACTURABLE) AS MT_LOYER_ACTUEL_FACTURABLE
	, SUM(FEL.MT_DG) AS MT_DG
	, SUM(FEL.MT_CHARGES) AS MT_CHARGES
	, SUM(FEL.MT_LOYER_FRANCHISE) AS MT_LOYER_FRANCHISE
	, SUM(FEL.MT_PALIER) AS MT_PALIER
	, FEL.LB_INDICE_INITIAL
	, FEL.DT_INDICE_INITIAL
	, FEL.LB_INDICE_ACTUEL
	, FEL.DT_INDICE_ACTUEL
	, ISNULL(FEL.CD_INDICE_REVISION, DB.CD_MODE_REVISION) AS TYPE_INDICE
	, left(FEL.CD_INDICE_INITIAL, 1) + 'T' + right(FEL.CD_INDICE_INITIAL, 4) AS INDICE_BASE
	--, left(LOCATION.INDREF, 1) + 'T' + right(LOCATION.INDREF, 4) AS INDICE_BASE
	, FEL.VAL_INDICE_INITIAL AS VAL_INDICE_BASE
	--, INDICE.VAL AS VAL_INDICE_BASE
	, FEL.DT_REVISION_PRECEDENTE AS DT_DERNIERE_REVISION
	, left(FEL.CD_INDICE_ACTUEL, 1) + 'T' + right(FEL.CD_INDICE_ACTUEL, 4) AS INDICE_REVISION
	, FEL.VAL_INDICE_ACTUEL AS VAL_INDICE_REVISION
	, CASE WHEN DB.PC_RECUP_TF = 0 THEN 'N' WHEN DB.PC_RECUP_TF = 100 THEN 'O' END AS PC_RECUP_TF
	, CASE WHEN DB.PC_RECUP_HO = 0 THEN 'N' WHEN DB.PC_RECUP_HO = 100 THEN 'O' END AS PC_RECUP_HO
	, CASE WHEN DB.PC_RECUP_TB = 0 THEN 'N' WHEN DB.PC_RECUP_TB = 100 THEN 'O' END AS PC_RECUP_TB
	, CASE WHEN DB.PC_RECUP_AS = 0 THEN 'N' WHEN DB.PC_RECUP_AS = 100 THEN 'O' END AS PC_RECUP_AS
	--, CASE WHEN DB.PC_RECUP_606 = 0 THEN 'N' WHEN DB.PC_RECUP_606 = 100 THEN 'O' END AS PC_RECUP_606
	, 'N' AS PC_RECUP_606
	, CASE WHEN DB.PC_RECUP_TOM = 0 THEN 'N' WHEN DB.PC_RECUP_TOM = 100 THEN 'O' END AS PC_RECUP_TOM
	, ISNULL(AB.NB_AVENANT, 0) AS NB_AVENANT
	, NULL AS A_SUIVRE
	, 0 AS VAL_SURF_UTILE_GEOMETRE
	, CAST(0 AS NUMERIC(18,2)) AS VLM
	, CAST(0 AS NUMERIC(18,2)) AS LOYER_REVISE_SUR_VLM
	, NULL AS RISQUE_DEPART
	, DB.COMMENTAIRES AS COMMENTAIRES
	, DB.CHEMIN_BAIL
	, DI.CHEMIN_PLAN
	, DI.CHEMIN_ETAT_SURFACES
	, DI.CHEMIN_TB
	, DI.CHEMIN_TF
	, CASE DB.CD_FREQUENCE_QUITTANCEMENT WHEN '01' THEN 'M' WHEN '03' THEN 'T' WHEN '06' THEN 'S' WHEN '12' THEN 'A' END + DB.CD_TERME AS PAIEMENT
	, DI.CHEMIN_MANDAT
	FROM F_ETAT_LOCATIF FEL
	LEFT JOIN D_MANDAT_GERANCE DMG
	ON DMG.PK_MANDAT_GERANCE = FEL.FK_MANDAT_GERANCE
	LEFT JOIN D_IMMEUBLE DI
	ON DI.PK_IMMEUBLE = FEL.FK_IMMEUBLE
	LEFT JOIN D_PROPRIETAIRE DP
	ON DP.PK_PROPRIETAIRE = FEL.FK_PROPRIETAIRE
	LEFT JOIN D_BAIL DB
	ON DB.PK_BAIL = FEL.FK_BAIL
	--LEFT JOIN MASTER_ESTIA..ESTIA_LOCATION LOCATION
	--ON LOCATION.PK_LOCATION = DB.PK_BAIL
	LEFT JOIN D_LOCATAIRE DL
	ON DL.PK_LOCATAIRE = FEL.FK_LOCATAIRE
	LEFT JOIN D_LOT L
	ON L.PK_LOT = FEL.PK_LOT 
	LEFT JOIN V_AVENANT_BAIL AB
	ON AB.PK_BAIL = DB.PK_BAIL
	LEFT JOIN V_LOYER_BASE VLB
	ON VLB.FK_BAIL = DB.PK_BAIL
	LEFT JOIN MASTER_ESTIA..P_NATURE_BAIL
	ON P_NATURE_BAIL.CD_NATURE_BAIL = DB.CD_NATURE_BAIL
	--LEFT JOIN MASTER_ESTIA..ESTIA_INDICE INDICE
	--ON INDICE.ANNEE = right(LOCATION.INDREF, 4) AND INDICE.MOIS = left(LOCATION.INDREF, 1) AND INDICE.CNUMI = LOCATION.CNUMI
	WHERE
	  FEL.PK_TEMPS = @PK_TEMPS
	  AND FEL.CORG = 11
	  AND FEL.FK_PROPRIETAIRE = @PK_PROPRIETAIRE
	  AND FEL.FK_IMMEUBLE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,','))
	  AND ISNULL(FEL.FK_LOCATAIRE, 99999) IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_LOCATAIRE,','))
	  AND DMG.IND_MANDAT_ACTIF = 'O'
	  AND CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '1900/01/01') AND ISNULL(L.DT_FIN_EN_SERVICE,'2999/01/01')
	GROUP BY FEL.DT_REF
		   , FEL.FK_PROPRIETAIRE
		   , FEL.FK_IMMEUBLE
		   , FEL.FK_BAIL
		   , FEL.FK_LOCATAIRE
		   , DP.CD_PROPRIETAIRE
		   , DP.NM_PROPRIETAIRE
		   , DP.NOM_PROPRIETAIRE
		   , DI.CD_IMMEUBLE 
		   , DI.NM_IMMEUBLE
		   , DI.ADRLGN1
		   , DI.SURFACE_TOTALE
           , DI.VLM_ARCHIVE
           , DI.VLM_PARKING_DOUBLE
		   , DI.VLM_PARKING_SIMPLE
	       , DL.CD_LOCATAIRE
	       , DL.NM_LOCATAIRE
	       , DL.NOM_LOCATAIRE
		   , DB.CD_LOT_PRINCIPAL
		   , DB.CD_BAIL
		   , DB.NM_BAIL
           , DB.CD_TERME
		   , DB.LB_NATURE_BAIL
		   , DB.LB_DUREE
		   , DB.DT_SIGNATURE
		   , DB.DT_EFFET
           , DB.DUREE_AN
           , DB.DUREE_MOIS
		   , DB.DT_ENTREE
		   , DB.DT_CONGE
		   , DB.DT_SORTIE
		   , DB.DT_PRCH_TRIEN_POT
		   , P_NATURE_BAIL.CD_TYPE_BAIL
		   , DB.DT_RISQUE
           , NB_MOIS_PREAVIS
		   , FEL.CCOMPTE
		   , FEL.CD_STATUT 
           , FEL.LB_STATUT
		   , DB.LB_TYPE_CAUTION
		   , DB.DT_DEBUT_FRANCHISE
		   , DB.DT_FIN_FRANCHISE
		   , VLB.MT_LOYER_BASE
		   , DB.MT_LOYER_BASE
		   --, DB.MT_DG_BASE
		   , FEL.LB_INDICE_INITIAL
		   , FEL.DT_INDICE_INITIAL
		   , FEL.LB_INDICE_ACTUEL
		   , FEL.DT_INDICE_ACTUEL
           , FEL.CD_INDICE_REVISION
		   , DB.CD_MODE_REVISION
           , FEL.CD_INDICE_INITIAL
		   --, LOCATION.INDREF
           , FEL.VAL_INDICE_INITIAL
		   --, INDICE.VAL
           , FEL.DT_REVISION_PRECEDENTE
           , FEL.CD_INDICE_ACTUEL
           , FEL.VAL_INDICE_ACTUEL
		   , DB.PC_RECUP_TF
		   , DB.PC_RECUP_HO
		   , DB.PC_RECUP_TB
		   , DB.PC_RECUP_AS
		   , DB.PC_RECUP_606
		   , DB.PC_RECUP_TOM
		   , AB.NB_AVENANT
		   , DB.COMMENTAIRES
           , DB.CHEMIN_BAIL
           , DI.CHEMIN_PLAN
           , DI.CHEMIN_ETAT_SURFACES
           , DI.CHEMIN_TB
           , DI.CHEMIN_TF
           , DB.CD_FREQUENCE_QUITTANCEMENT
		   , DI.CHEMIN_MANDAT
),
REQ2 AS
(
	SELECT FEL.FK_PROPRIETAIRE
		 , FEL.FK_IMMEUBLE
		 , ISNULL(FEL.FK_BAIL, 0) AS FK_BAIL
		 , SUM(L.VAL_SURFACE_REELLE) AS VAL_SURFACE_REELLE
		 , SUM(L.NB_EMPLACEMENTS_PARKING) AS NB_PARKINGS
		 , CAST(RIGHT(CASE WHEN L.ETAGE = 'RDC' THEN 'R+0' ELSE L.ETAGE END, LEN(L.ETAGE)-1) AS INT) AS ETAGE
		 , SUM(ISNULL(PKG.NB_PARKINGS_SIMPLES, 0)) AS NB_PARKINGS_SIMPLES
		 , SUM(ISNULL(PKG.NB_PARKINGS_DOUBLES, 0)) AS NB_PARKINGS_DOUBLES
	FROM F_ETAT_LOCATIF FEL
	LEFT JOIN D_MANDAT_GERANCE DMG
	ON DMG.PK_MANDAT_GERANCE = FEL.FK_MANDAT_GERANCE
	LEFT JOIN D_LOT L
	ON L.PK_LOT = FEL.PK_LOT
	LEFT JOIN
	(
		SELECT PK_LOT,
		SUM(CASE WHEN CD_TYPE_LOT IN ('BOX', 'PK', 'PKG') THEN 1 ELSE 0 END) AS NB_PARKINGS_SIMPLES,
		SUM(CASE WHEN CD_TYPE_LOT IN ('BDO', 'PKD') THEN 1 ELSE 0 END) AS NB_PARKINGS_DOUBLES
		FROM D_LOT
		WHERE NB_EMPLACEMENTS_PARKING > 0
		GROUP BY PK_LOT
	) PKG
	ON PKG.PK_LOT = L.PK_LOT
	WHERE
	  FEL.PK_TEMPS = @PK_TEMPS
	  AND FEL.CORG = 11
	  AND FEL.FK_PROPRIETAIRE = @PK_PROPRIETAIRE
	  AND FEL.FK_IMMEUBLE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,','))
                  AND ISNULL(FEL.FK_LOCATAIRE, 99999) IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_LOCATAIRE,','))
	  AND DMG.IND_MANDAT_ACTIF = 'O'
	  AND CONVERT(DATETIME, CONVERT(VARCHAR(10),GETDATE(),103), 103) BETWEEN ISNULL(L.DT_DEBUT_EN_SERVICE, '1900/01/01') AND ISNULL(L.DT_FIN_EN_SERVICE,'2999/01/01')
	GROUP BY FEL.FK_PROPRIETAIRE, FEL.FK_IMMEUBLE, FEL.FK_BAIL, L.ETAGE
),
REQ3 AS
(
	SELECT RES.FK_PROPRIETAIRE, RES.FK_IMMEUBLE, RES.FK_BAIL, SUM(RES.VAL_SURFACE_REELLE) AS VAL_SURFACE_REELLE, SUM(RES.NB_PARKINGS) AS NB_PARKINGS, SUM(NB_PARKINGS_SIMPLES) AS NB_PARKINGS_SIMPLES, SUM(NB_PARKINGS_DOUBLES) AS NB_PARKINGS_DOUBLES,
	STUFF((
			SELECT ', ' + CAST(RES2.ETAGE AS VARCHAR(MAX))
			FROM REQ2 RES2
			WHERE (RES2.FK_PROPRIETAIRE = RES.FK_PROPRIETAIRE AND RES2.FK_IMMEUBLE = RES.FK_IMMEUBLE AND RES2.FK_BAIL = RES.FK_BAIL)
			ORDER BY RES2.FK_PROPRIETAIRE, RES2.FK_IMMEUBLE, RES2.FK_BAIL, RES2.ETAGE 
			FOR XML PATH(''), TYPE).value('.','VARCHAR(MAX)'),1,2,'') AS ETAGE
	FROM REQ2 AS RES
	GROUP BY RES.FK_PROPRIETAIRE, RES.FK_IMMEUBLE, RES.FK_BAIL
)

SELECT REQ.DT_REF
	 , REQ.FK_PROPRIETAIRE
	 , REQ.FK_IMMEUBLE
	 , REQ.FK_BAIL
	 , REQ.CD_PROPRIETAIRE
	 , REQ.NM_PROPRIETAIRE
	 , REQ.NOM_PROPRIETAIRE
	 , REQ.CD_IMMEUBLE 
	 , REQ.NM_IMMEUBLE
	 , REQ.ADRLGN1
	 , REQ.SURFACE_TOTALE
     , REQ.VLM_ARCHIVE
     , REQ.VLM_PARKING_DOUBLE
	 , REQ.VLM_PARKING_SIMPLE
	 , REQ3.VAL_SURFACE_REELLE
     , REQ.FK_LOCATAIRE
	 , REQ.CD_LOCATAIRE
	 , REQ.NM_LOCATAIRE
	 , REQ.NOM_LOCATAIRE
	 , REQ.CD_LOT_PRINCIPAL
	 , REQ.CD_BAIL
	 , REQ.NM_BAIL
	 , REQ.LB_NATURE_BAIL
	 , REQ.LB_DUREE
	 , REQ.DT_SIGNATURE
	 , CASE WHEN PNB.CD_NATURE_BAIL = '02' THEN DATEADD(YEAR, (DATEDIFF(YEAR, REQ.DT_EFFET, GETDATE())/6) *6, REQ.DT_EFFET) ELSE REQ.DT_EFFET END DT_EFFET
     , CASE WHEN PNB.CD_NATURE_BAIL = '02' THEN DATEADD(YEAR, 6, DATEADD(YEAR, (DATEDIFF(YEAR, REQ.DT_EFFET, GETDATE())/6) *6, REQ.DT_EFFET))-1 ELSE REQ.DT_FIN END DT_FIN
	 , REQ.DT_ENTREE
	 , REQ.DT_CONGE
	 , REQ.DT_SORTIE
	 , CASE WHEN PNB.CD_NATURE_BAIL = '02' THEN DATEADD(day, 1, DATEADD(MONTH, 1, @PK_TEMPS)) ELSE REQ.DT_PRCH_TRIEN_POT END DT_PRCH_TRIEN_POT --DATEADD(MONTH, 1, GETDATE()) ELSE REQ.DT_PRCH_TRIEN_POT END DT_PRCH_TRIEN_POT
	 --, CASE WHEN PNB.CD_NATURE_BAIL <> '02' THEN REQ.DT_PRCH_TRIEN_POT END DT_PRCH_TRIEN_POT
	 , CASE WHEN REQ.CD_STATUT = 'L' THEN CASE WHEN PNB.CD_NATURE_BAIL <> '02' THEN REQ.DT_RISQUE ELSE @PK_TEMPS END END DT_RISQUE
	 , CASE WHEN CASE WHEN PNB.CD_NATURE_BAIL = '02' THEN DATEADD(YEAR, 6, DATEADD(YEAR, (DATEDIFF(YEAR, REQ.DT_EFFET, GETDATE())/6) *6, REQ.DT_EFFET))-1 ELSE REQ.DT_FIN END < GETDATE() THEN 'O' ELSE 'N' END AS IND_ECHU
	 , REQ.CCOMPTE
	 , REQ.CD_STATUT 
     , REQ.LB_STATUT
	 , REQ3.NB_PARKINGS
     , REQ3.NB_PARKINGS_SIMPLES
     , REQ3.NB_PARKINGS_DOUBLES
	 , W.VAL_SURF_BUR
	 , W.VAL_SURF_COM
	 , W.VAL_SURF_ACT
	 , W.VAL_SURF_ARC
	 , W.VAL_SURF_HAB
     , W.VAL_SURF_BUR + W.VAL_SURF_COM + W.VAL_SURF_ACT + W.VAL_SURF_ARC + W.VAL_SURF_HAB AS VAL_SURF_BAIL
	 , CASE WHEN REQ.SURFACE_TOTALE > 0 THEN (W.VAL_SURF_BUR + W.VAL_SURF_COM + W.VAL_SURF_ACT + W.VAL_SURF_ARC + W.VAL_SURF_HAB)/REQ.SURFACE_TOTALE ELSE 0 END AS PC_SURF_IMMEUBLE
	 , REQ3.ETAGE
	 , REQ.LB_TYPE_CAUTION
	 , REQ.DT_DEBUT_FRANCHISE
	 , REQ.DT_FIN_FRANCHISE
	 , CASE WHEN @ANNUEL = 1 THEN REQ.MT_LOYER_BASE ELSE CAST(REQ.MT_LOYER_BASE/12 AS NUMERIC(18,2)) END AS MT_LOYER_BASE
	 --, REQ.MT_DG_BASE
     , CASE WHEN @ANNUEL = 1 THEN CASE WHEN REQ.VAL_INDICE_BASE = 0 THEN 0 ELSE (REQ.MT_LOYER_BASE*REQ.VAL_INDICE_REVISION)/REQ.VAL_INDICE_BASE END 
	   ELSE CAST((CASE WHEN REQ.VAL_INDICE_BASE = 0 THEN 0 ELSE (REQ.MT_LOYER_BASE*REQ.VAL_INDICE_REVISION)/REQ.VAL_INDICE_BASE END)/12 AS NUMERIC(18,2)) END AS MT_LOYER_INDEXE
	 , CASE WHEN PNB.CD_TYPE_BAIL = 'HAB' THEN REQ.MT_DG ELSE (CASE WHEN REQ.VAL_INDICE_BASE = 0 THEN 0 ELSE (REQ.MT_DG*REQ.VAL_INDICE_REVISION)/REQ.VAL_INDICE_BASE END) END AS MT_DG_INDEXE
	 , REQ.MT_LOYER_ACTUEL
	 , REQ.MT_LOYER_ACTUEL_FACTURABLE
	 , REQ.MT_DG
	 , REQ.MT_CHARGES
     , REQ.MT_LOYER_FRANCHISE
	 , REQ.MT_PALIER
	 , CAST(CASE REQ.MT_LOYER_BASE WHEN 0 THEN 0 ELSE(REQ.MT_LOYER_ACTUEL/REQ.MT_LOYER_BASE) -1 END AS NUMERIC(18,2)) AS LOYER_REVISE_SUR_LOYER_BASE
	 , REQ.LB_INDICE_INITIAL
	 , REQ.DT_INDICE_INITIAL
	 , REQ.LB_INDICE_ACTUEL
	 , REQ.DT_INDICE_ACTUEL
     , REQ.TYPE_INDICE
     , REQ.INDICE_BASE
     , REQ.VAL_INDICE_BASE
     , REQ.DT_DERNIERE_REVISION
     , REQ.INDICE_REVISION
     , REQ.VAL_INDICE_REVISION
	 , REQ.PC_RECUP_TF
	 , REQ.PC_RECUP_HO
	 , REQ.PC_RECUP_TB
	 , REQ.PC_RECUP_AS
	 , REQ.PC_RECUP_606
	 , REQ.PC_RECUP_TOM
	 , REQ.NB_AVENANT
	 , REQ.A_SUIVRE
	 , REQ.VAL_SURF_UTILE_GEOMETRE
	 , REQ.VLM
	 , REQ.LOYER_REVISE_SUR_VLM
	 , REQ.RISQUE_DEPART
	 , REQ.COMMENTAIRES
     , REQ.CHEMIN_BAIL
     , REQ.CHEMIN_PLAN
     , REQ.CHEMIN_ETAT_SURFACES
     , REQ.CHEMIN_TB
     , REQ.CHEMIN_TF
     , REQ.PAIEMENT
  	 , REQ.CHEMIN_MANDAT
FROM REQ
LEFT JOIN D_BAIL ON D_BAIL.PK_BAIL = REQ.FK_BAIL
LEFT JOIN MASTER_ESTIA..P_NATURE_BAIL PNB
ON PNB.CD_NATURE_BAIL = D_BAIL.CD_NATURE_BAIL
LEFT JOIN REQ3
ON REQ3.FK_PROPRIETAIRE = REQ.FK_PROPRIETAIRE AND REQ3.FK_IMMEUBLE = REQ.FK_IMMEUBLE AND (REQ.FK_BAIL IS NULL OR REQ3.FK_BAIL = REQ.FK_BAIL)
LEFT JOIN
(
		SELECT FEL.PK_TEMPS, FEL.FK_IMMEUBLE, ISNULL(FEL.FK_BAIL, 0) AS FK_BAIL
			, SUM(CASE WHEN CD_REG_USAGE = 'BUR' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_BUR
			, SUM(CASE WHEN CD_REG_USAGE = 'COM' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_COM
			, SUM(CASE WHEN CD_REG_USAGE = 'ARC' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ARC
			, SUM(CASE WHEN CD_REG_USAGE = 'HAB' THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_HAB
			, SUM(CASE WHEN CD_REG_USAGE NOT IN ('BUR', 'COM', 'ARC', 'HAB') THEN ISNULL(VAL_SURFACE_REELLE, 0) ELSE 0 END) VAL_SURF_ACT
		FROM F_ETAT_LOCATIF FEL INNER JOIN
		(
			SELECT L.PK_LOT, L.NM_LOT, L.CD_USAGE, L.CD_REG_USAGE, L.LB_REG_USAGE, L.LB_USAGE, VAL_SURFACE_REELLE  
			FROM D_LOT L
			WHERE FK_IMMEUBLE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,','))
			AND VAL_SURFACE_REELLE > 0
		) LOT
		ON LOT.PK_LOT = FEL.PK_LOT
		WHERE FEL.PK_TEMPS = @PK_TEMPS AND FEL.FK_IMMEUBLE IN (SELECT VALUE FROM dbo.ufn_SplitMultiValue(@PK_IMMEUBLE,','))
		GROUP BY FEL.PK_TEMPS, FEL.FK_IMMEUBLE, FEL.FK_BAIL
) W
ON W.FK_IMMEUBLE = REQ.FK_IMMEUBLE AND (W.FK_BAIL = REQ.FK_BAIL)
ORDER BY 
   REQ.DT_REF
 , REQ.NM_PROPRIETAIRE
 , REQ.NM_IMMEUBLE
 , REQ.CD_STATUT
 , REQ.NM_BAIL

END